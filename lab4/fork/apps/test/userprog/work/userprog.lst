 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 21
    4                      ; Text size: 4240
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  25640a00	.ascii "%d\n\000"
   83  00003004          	.align 2
   84  00003004          	LC1_LF0:
   85  00003004  25730a00	.ascii "%s\n\000"
   86  00003008          	.align 2
   87  00003008          	LC2_LF0:
   88  00003008  48656c6c	.ascii "Hello world\n\000"
   88  0000300c  6f20776f	
   88  00003010  726c640a	
   88  00003014  00      	
   89  00003015          	.text
   90  000010d4          	.align 2
   91  000010d4          	.proc _main
   92  000010d4          	.global _main
   93  000010d4          	_main:
   94                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   95  000010d4  afbefffc	sw	-4(r29),r30; push fp
   96  000010d8  001df020	add	r30,r0,r29; fp = sp
   97  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   98  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
   99  000010e4  8fc40000	lw	r4,(r30)
  100  000010e8  0c000f9c	jal	___main
  101  000010ec  54000000	nop; not filled.
  102  000010f0  23bdfff8	addi	r29,r29,#-8
  103  000010f4  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  104  000010f8  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  105  000010fc  afa50000	sw	(r29),r5
  106  00001100  afa40004	sw	4(r29),r4
  107  00001104  0c0000c0	jal	_Printf
  108  00001108  54000000	nop; not filled.
  109  0000110c  20020000	addi	r2,r0,#0
  110  00001110  23bd0008	addi	r29,r29,#8
  111  00001114  0044082a	slt	r1,r2,r4
  112  00001118  10200040	beqz	r1,L21_LF0
  113  0000111c  54000000	nop; not filled.
  114  00001120  8fc30004	lw	r3,4(r30)
  115  00001124          	L23_LF0:
  116  00001124  23bdfff8	addi	r29,r29,#-8
  117  00001128  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  118  0000112c  24a53004	addui	r5,r5,(LC1_LF0)&0xffff
  119  00001130  afa50000	sw	(r29),r5
  120  00001134  8c610000	lw	r1,(r3)
  121  00001138  afa10004	sw	4(r29),r1
  122  0000113c  0c000088	jal	_Printf
  123  00001140  54000000	nop; not filled.
  124  00001144  23bd0008	addi	r29,r29,#8
  125  00001148  20630004	addi	r3,r3,#4
  126  0000114c  20420001	addi	r2,r2,#1
  127  00001150  0044082a	slt	r1,r2,r4
  128  00001154  1420ffcc	bnez	r1,L23_LF0
  129  00001158  54000000	nop; not filled.
  130  0000115c          	L21_LF0:
  131  0000115c  23bdfff8	addi	r29,r29,#-8
  132  00001160  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  133  00001164  24a53008	addui	r5,r5,(LC2_LF0)&0xffff
  134  00001168  afa50000	sw	(r29),r5
  135  0000116c  0c000058	jal	_Printf
  136  00001170  54000000	nop; not filled.
  137  00001174  23bd0008	addi	r29,r29,#8
  138  00001178  0c000f00	jal	_exit
  139  0000117c  54000000	nop
  140  00001180          	.endproc _main
  141                      ;;;
  142                      ;;; Stub functions for DLX traps.
  143                      ;;;
  144                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  145                      ;;;
  146                      ;;; The traps such as Open and Close
  147                      ;;; (note the capital letters) are for use by user programs.  The traps
  148                      ;;; with names such as open and close (lower case) are for use by the OS.
  149                      ;;;
  152  00001180          	.align 2
  154                      ;;; The following are the traps to be used by user-level programs
  155                      ;;;
  157  00001180          	.align 2
  158  00001180          	.proc _Open
  159  00001180          	.global _Open
  160  00001180          	_Open:
  161                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  162                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  163                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  164  00001180  44000213	trap	#0x213
  165  00001184  4be00000	jr	r31
  166  00001188  54000000	nop
  167  0000118c          	.endproc _Open
  169  0000118c          	.proc _Close
  170  0000118c          	.global _Close
  171  0000118c          	_Close:
  172  0000118c  44000214	trap	#0x214
  173  00001190  4be00000	jr	r31
  174  00001194  54000000	nop
  175  00001198          	.endproc _Close
  177  00001198          	.proc _Read
  178  00001198          	.global _Read
  179  00001198          	_Read:
  180  00001198  44000210	trap	#0x210
  181  0000119c  4be00000	jr	r31
  182  000011a0  54000000	nop
  183  000011a4          	.endproc _Read
  185  000011a4          	.proc _Write
  186  000011a4          	.global _Write
  187  000011a4          	_Write:
  188  000011a4  44000211	trap	#0x211
  189  000011a8  4be00000	jr	r31
  190  000011ac  54000000	nop
  191  000011b0          	.endproc _Write
  193  000011b0          	.proc _Lseek
  194  000011b0          	.global _Lseek
  195  000011b0          	_Lseek:
  196  000011b0  44000212	trap	#0x212
  197  000011b4  4be00000	jr	r31
  198  000011b8  54000000	nop
  199  000011bc          	.endproc _Lseek
  201  000011bc          	.proc _Putchar
  202  000011bc          	.global _Putchar
  203  000011bc          	_Putchar:
  204  000011bc  44000280	trap	#0x280
  205  000011c0  4be00000	jr	r31
  206  000011c4  54000000	nop
  207  000011c8          	.endproc _Putchar
  209  000011c8          	.proc _Printf
  210  000011c8          	.global _Printf
  211  000011c8          	_Printf:
  212  000011c8  44000201	trap	#0x201
  213  000011cc  4be00000	jr	r31
  214  000011d0  54000000	nop
  215  000011d4          	.endproc _Printf
  217  000011d4          	.proc _getpid
  218  000011d4          	.global _getpid
  219  000011d4          	_getpid:
  220  000011d4  44000431	trap	#0x431
  221  000011d8  4be00000	jr	r31
  222  000011dc  54000000	nop
  223  000011e0          	.endproc _getpid
  225  000011e0          	.proc _process_create
  226  000011e0          	.global _process_create
  227  000011e0          	_process_create:
  228  000011e0  44000432	trap	#0x432
  229  000011e4  4be00000	jr	r31
  230  000011e8  54000000	nop
  231  000011ec          	.endproc _process_create
  233  000011ec          	.proc _shmget
  234  000011ec          	.global _shmget
  235  000011ec          	_shmget:
  236  000011ec  44000440	trap	#0x440
  237  000011f0  4be00000	jr	r31
  238  000011f4  54000000	nop
  239  000011f8          	.endproc _shmget
  241  000011f8          	.proc _shmat
  242  000011f8          	.global _shmat
  243  000011f8          	_shmat:
  244  000011f8  44000441	trap	#0x441
  245  000011fc  4be00000	jr	r31
  246  00001200  54000000	nop
  247  00001204          	.endproc _shmat
  249  00001204          	.proc _sem_create
  250  00001204          	.global _sem_create
  251  00001204          	_sem_create:
  252  00001204  44000450	trap	#0x450
  253  00001208  4be00000	jr	r31
  254  0000120c  54000000	nop
  255  00001210          	.endproc _sem_create
  257  00001210          	.proc _sem_wait
  258  00001210          	.global _sem_wait
  259  00001210          	_sem_wait:
  260  00001210  44000451	trap	#0x451
  261  00001214  4be00000	jr	r31
  262  00001218  54000000	nop
  263  0000121c          	.endproc _sem_wait
  265  0000121c          	.proc _sem_signal
  266  0000121c          	.global _sem_signal
  267  0000121c          	_sem_signal:
  268  0000121c  44000452	trap	#0x452
  269  00001220  4be00000	jr	r31
  270  00001224  54000000	nop
  271  00001228          	.endproc _sem_signal
  273  00001228          	.proc _lock_create
  274  00001228          	.global _lock_create
  275  00001228          	_lock_create:
  276  00001228  44000453	trap	#0x453
  277  0000122c  4be00000	jr	r31
  278  00001230  54000000	nop
  279  00001234          	.endproc _lock_create
  281  00001234          	.proc _lock_acquire
  282  00001234          	.global _lock_acquire
  283  00001234          	_lock_acquire:
  284  00001234  44000454	trap	#0x454
  285  00001238  4be00000	jr	r31
  286  0000123c  54000000	nop
  287  00001240          	.endproc _lock_acquire
  289  00001240          	.proc _lock_release
  290  00001240          	.global _lock_release
  291  00001240          	_lock_release:
  292  00001240  44000455	trap	#0x455
  293  00001244  4be00000	jr	r31
  294  00001248  54000000	nop
  295  0000124c          	.endproc _lock_release
  297  0000124c          	.proc _cond_create
  298  0000124c          	.global _cond_create
  299  0000124c          	_cond_create:
  300  0000124c  44000456	trap	#0x456
  301  00001250  4be00000	jr	r31
  302  00001254  54000000	nop
  303  00001258          	.endproc _cond_create
  305  00001258          	.proc _cond_wait
  306  00001258          	.global _cond_wait
  307  00001258          	_cond_wait:
  308  00001258  44000457	trap	#0x457
  309  0000125c  4be00000	jr	r31
  310  00001260  54000000	nop
  311  00001264          	.endproc _cond_wait
  313  00001264          	.proc _cond_signal
  314  00001264          	.global _cond_signal
  315  00001264          	_cond_signal:
  316  00001264  44000458	trap	#0x458
  317  00001268  4be00000	jr	r31
  318  0000126c  54000000	nop
  319  00001270          	.endproc _cond_signal
  321  00001270          	.proc _cond_broadcast
  322  00001270          	.global _cond_broadcast
  323  00001270          	_cond_broadcast:
  324  00001270  44000459	trap	#0x459
  325  00001274  4be00000	jr	r31
  326  00001278  54000000	nop
  327  0000127c          	.endproc _cond_broadcast
  329  0000127c          	.proc _mbox_create
  330  0000127c          	.global _mbox_create
  331  0000127c          	_mbox_create:
  332  0000127c  44000460	trap	#0x460
  333  00001280  4be00000	jr	r31
  334  00001284  54000000	nop
  335  00001288          	.endproc _mbox_create
  337  00001288          	.proc _mbox_open
  338  00001288          	.global _mbox_open
  339  00001288          	_mbox_open:
  340  00001288  44000461	trap	#0x461
  341  0000128c  4be00000	jr	r31
  342  00001290  54000000	nop
  343  00001294          	.endproc _mbox_open
  345  00001294          	.proc _mbox_close
  346  00001294          	.global _mbox_close
  347  00001294          	_mbox_close:
  348  00001294  44000462	trap	#0x462
  349  00001298  4be00000	jr	r31
  350  0000129c  54000000	nop
  351  000012a0          	.endproc _mbox_close
  353  000012a0          	.proc _mbox_send
  354  000012a0          	.global _mbox_send
  355  000012a0          	_mbox_send:
  356  000012a0  44000463	trap	#0x463
  357  000012a4  4be00000	jr	r31
  358  000012a8  54000000	nop
  359  000012ac          	.endproc _mbox_send
  361  000012ac          	.proc _mbox_recv
  362  000012ac          	.global _mbox_recv
  363  000012ac          	_mbox_recv:
  364  000012ac  44000464	trap	#0x464
  365  000012b0  4be00000	jr	r31
  366  000012b4  54000000	nop
  367  000012b8          	.endproc _mbox_recv
  369  000012b8          	.proc _sleep
  370  000012b8          	.global _sleep
  371  000012b8          	_sleep:
  372  000012b8  44000465	trap	#0x465
  373  000012bc  4be00000	jr	r31
  374  000012c0  54000000	nop
  375  000012c4          	.endproc _sleep
  377  000012c4          	.proc _yield
  378  000012c4          	.global _yield
  379  000012c4          	_yield:
  380  000012c4  44000466	trap	#0x466
  381  000012c8  4be00000	jr	r31
  382  000012cc  54000000	nop
  383  000012d0          	.endproc _yield
  386  000012d0          	.proc _Exit
  387  000012d0          	.global _Exit
  388  000012d0          	_Exit:
  389  000012d0  44000500	trap	#0x500
  390  000012d4  4be00000	jr	r31
  391  000012d8  54000000	nop
  392  000012dc          	.endproc _Exit
  395  000012dc          	.proc _malloc
  396  000012dc          	.global _malloc
  397  000012dc          	_malloc:
  398  000012dc  44000467	trap	#0x467
  399  000012e0  4be00000	jr	r31
  400  000012e4          	.endproc _malloc
  403  000012e4          	.proc _mfree
  404  000012e4          	.global _mfree
  405  000012e4          	_mfree:
  406  000012e4  44000468	trap	#0x468
  407  000012e8  4be00000	jr	r31
  408  000012ec          	.endproc _mfree
  409                      ; Compiled by GCC
  411  000012ec          	.align 2
  412  000012ec          	.proc _isspace
  413  000012ec          	.global _isspace
  414  000012ec          	_isspace:
  415                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  416  000012ec  afbefffc	sw	-4(r29),r30; push fp
  417  000012f0  001df020	add	r30,r0,r29; fp = sp
  418  000012f4  afbffff8	sw	-8(r29),r31; push ret addr
  419  000012f8  2fbd0018	subui	r29,r29,#24; alloc local storage
  420  000012fc  afa20000	sw	0(r29),r2
  421  00001300  afa30004	sw	4(r29),r3
  422  00001304  afa40008	sw	8(r29),r4
  423  00001308  83c20003	lb	r2,3(r30)
  424  0000130c  20010000	addi	r1,r0,#0
  425  00001310  304300ff	andi	r3,r2,#0x00ff
  426  00001314  60640020	seqi	r4,r3,#32
  427  00001318  1480002c	bnez	r4,L3_LF2
  428  0000131c  54000000	nop; delay slot nop
  429  00001320  304300ff	andi	r3,r2,#0x00ff
  430  00001324  60640009	seqi	r4,r3,#9
  431  00001328  1480001c	bnez	r4,L3_LF2
  432  0000132c  54000000	nop; delay slot nop
  433  00001330  304300ff	andi	r3,r2,#0x00ff
  434  00001334  6064000a	seqi	r4,r3,#10
  435  00001338  1480000c	bnez	r4,L3_LF2
  436  0000133c  54000000	nop; delay slot nop
  437  00001340  08000008	j	L2_LF2
  438  00001344  54000000	nop; delay slot nop
  439  00001348          	L3_LF2:
  440  00001348  20010001	addi	r1,r0,#1
  441  0000134c          	L2_LF2:
  442  0000134c  08000004	j	L1_LF2
  443  00001350  54000000	nop; delay slot nop
  444  00001354          	L1_LF2:
  445  00001354  8fa20000	lw	r2,0(r29)
  446  00001358  8fa30004	lw	r3,4(r29)
  447  0000135c  8fa40008	lw	r4,8(r29)
  448  00001360  8fdffff8	lw	r31,-8(r30)
  449  00001364  001ee820	add	r29,r0,r30
  450  00001368  8fdefffc	lw	r30,-4(r30)
  451  0000136c  4be00000	jr	r31
  452  00001370  54000000	nop
  453  00001374          	.endproc _isspace
  454  00001374          	.align 2
  455  00001374          	.proc _isxdigit
  456  00001374          	.global _isxdigit
  457  00001374          	_isxdigit:
  458                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  459  00001374  afbefffc	sw	-4(r29),r30; push fp
  460  00001378  001df020	add	r30,r0,r29; fp = sp
  461  0000137c  afbffff8	sw	-8(r29),r31; push ret addr
  462  00001380  2fbd0018	subui	r29,r29,#24; alloc local storage
  463  00001384  afa20000	sw	0(r29),r2
  464  00001388  afa30004	sw	4(r29),r3
  465  0000138c  afa40008	sw	8(r29),r4
  466  00001390  83c20003	lb	r2,3(r30)
  467  00001394  20010000	addi	r1,r0,#0
  468  00001398  304300ff	andi	r3,r2,#0x00ff
  469  0000139c  6c64002f	sgtui	r4,r3,#47
  470  000013a0  1080001c	beqz	r4,L7_LF2
  471  000013a4  54000000	nop; delay slot nop
  472  000013a8  304300ff	andi	r3,r2,#0x00ff
  473  000013ac  70640039	sleui	r4,r3,#57
  474  000013b0  1480005c	bnez	r4,L6_LF2
  475  000013b4  54000000	nop; delay slot nop
  476  000013b8  08000004	j	L7_LF2
  477  000013bc  54000000	nop; delay slot nop
  478  000013c0          	L7_LF2:
  479  000013c0  304300ff	andi	r3,r2,#0x00ff
  480  000013c4  6c640060	sgtui	r4,r3,#96
  481  000013c8  1080001c	beqz	r4,L8_LF2
  482  000013cc  54000000	nop; delay slot nop
  483  000013d0  304300ff	andi	r3,r2,#0x00ff
  484  000013d4  70640066	sleui	r4,r3,#102
  485  000013d8  14800034	bnez	r4,L6_LF2
  486  000013dc  54000000	nop; delay slot nop
  487  000013e0  08000004	j	L8_LF2
  488  000013e4  54000000	nop; delay slot nop
  489  000013e8          	L8_LF2:
  490  000013e8  304300ff	andi	r3,r2,#0x00ff
  491  000013ec  6c640040	sgtui	r4,r3,#64
  492  000013f0  10800020	beqz	r4,L5_LF2
  493  000013f4  54000000	nop; delay slot nop
  494  000013f8  304300ff	andi	r3,r2,#0x00ff
  495  000013fc  70640041	sleui	r4,r3,#65
  496  00001400  1480000c	bnez	r4,L6_LF2
  497  00001404  54000000	nop; delay slot nop
  498  00001408  08000008	j	L5_LF2
  499  0000140c  54000000	nop; delay slot nop
  500  00001410          	L6_LF2:
  501  00001410  20010001	addi	r1,r0,#1
  502  00001414          	L5_LF2:
  503  00001414  08000004	j	L4_LF2
  504  00001418  54000000	nop; delay slot nop
  505  0000141c          	L4_LF2:
  506  0000141c  8fa20000	lw	r2,0(r29)
  507  00001420  8fa30004	lw	r3,4(r29)
  508  00001424  8fa40008	lw	r4,8(r29)
  509  00001428  8fdffff8	lw	r31,-8(r30)
  510  0000142c  001ee820	add	r29,r0,r30
  511  00001430  8fdefffc	lw	r30,-4(r30)
  512  00001434  4be00000	jr	r31
  513  00001438  54000000	nop
  514  0000143c          	.endproc _isxdigit
  515  0000143c          	.align 2
  516  0000143c          	.proc _dstrcpy
  517  0000143c          	.global _dstrcpy
  518  0000143c          	_dstrcpy:
  519                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  520  0000143c  afbefffc	sw	-4(r29),r30; push fp
  521  00001440  001df020	add	r30,r0,r29; fp = sp
  522  00001444  afbffff8	sw	-8(r29),r31; push ret addr
  523  00001448  2fbd0018	subui	r29,r29,#24; alloc local storage
  524  0000144c  afa20000	sw	0(r29),r2
  525  00001450  afa30004	sw	4(r29),r3
  526  00001454  8fc10000	lw	r1,(r30)
  527  00001458  afc1fff4	sw	-12(r30),r1
  528  0000145c          	L10_LF2:
  529  0000145c  8fc10000	lw	r1,(r30)
  530  00001460  20220001	addi	r2,r1,#1
  531  00001464  afc20000	sw	(r30),r2
  532  00001468  8fc20004	lw	r2,4(r30)
  533  0000146c  20430001	addi	r3,r2,#1
  534  00001470  afc30004	sw	4(r30),r3
  535  00001474  80420000	lb	r2,(r2)
  536  00001478  a0220000	sb	(r1),r2
  537  0000147c  a3c2fff3	sb	-13(r30),r2
  538  00001480          	L12_LF2:
  539  00001480  93c1fff3	lbu	r1,-13(r30)
  540  00001484  64220000	snei	r2,r1,#0
  541  00001488  1440000c	bnez	r2,L13_LF2
  542  0000148c  54000000	nop; delay slot nop
  543  00001490  0800000c	j	L11_LF2
  544  00001494  54000000	nop; delay slot nop
  545  00001498          	L13_LF2:
  546  00001498  0bffffc0	j	L10_LF2
  547  0000149c  54000000	nop; delay slot nop
  548  000014a0          	L11_LF2:
  549  000014a0  8fc1fff4	lw	r1,-12(r30)
  550  000014a4  08000004	j	L9_LF2
  551  000014a8  54000000	nop; delay slot nop
  552  000014ac          	L9_LF2:
  553  000014ac  8fa20000	lw	r2,0(r29)
  554  000014b0  8fa30004	lw	r3,4(r29)
  555  000014b4  8fdffff8	lw	r31,-8(r30)
  556  000014b8  001ee820	add	r29,r0,r30
  557  000014bc  8fdefffc	lw	r30,-4(r30)
  558  000014c0  4be00000	jr	r31
  559  000014c4  54000000	nop
  560  000014c8          	.endproc _dstrcpy
  561  000014c8          	.align 2
  562  000014c8          	.proc _dstrncpy
  563  000014c8          	.global _dstrncpy
  564  000014c8          	_dstrncpy:
  565                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  566  000014c8  afbefffc	sw	-4(r29),r30; push fp
  567  000014cc  001df020	add	r30,r0,r29; fp = sp
  568  000014d0  afbffff8	sw	-8(r29),r31; push ret addr
  569  000014d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  570  000014d8  afa20000	sw	0(r29),r2
  571  000014dc  afa30004	sw	4(r29),r3
  572  000014e0  8fc10000	lw	r1,(r30)
  573  000014e4  afc1fff4	sw	-12(r30),r1
  574  000014e8          	L15_LF2:
  575  000014e8  8fc10008	lw	r1,8(r30)
  576  000014ec  2022ffff	addi	r2,r1,#-1
  577  000014f0  afc20008	sw	8(r30),r2
  578  000014f4  70210000	slei	r1,r1,#0
  579  000014f8  1020000c	beqz	r1,L18_LF2
  580  000014fc  54000000	nop; delay slot nop
  581  00001500  08000048	j	L16_LF2
  582  00001504  54000000	nop; delay slot nop
  583  00001508          	L18_LF2:
  584  00001508  8fc10000	lw	r1,(r30)
  585  0000150c  20220001	addi	r2,r1,#1
  586  00001510  afc20000	sw	(r30),r2
  587  00001514  8fc20004	lw	r2,4(r30)
  588  00001518  20430001	addi	r3,r2,#1
  589  0000151c  afc30004	sw	4(r30),r3
  590  00001520  80420000	lb	r2,(r2)
  591  00001524  a0220000	sb	(r1),r2
  592  00001528  a3c2fff3	sb	-13(r30),r2
  593  0000152c          	L17_LF2:
  594  0000152c  93c1fff3	lbu	r1,-13(r30)
  595  00001530  64220000	snei	r2,r1,#0
  596  00001534  1440000c	bnez	r2,L19_LF2
  597  00001538  54000000	nop; delay slot nop
  598  0000153c  0800000c	j	L16_LF2
  599  00001540  54000000	nop; delay slot nop
  600  00001544          	L19_LF2:
  601  00001544  0bffffa0	j	L15_LF2
  602  00001548  54000000	nop; delay slot nop
  603  0000154c          	L16_LF2:
  604  0000154c  8fc1fff4	lw	r1,-12(r30)
  605  00001550  08000004	j	L14_LF2
  606  00001554  54000000	nop; delay slot nop
  607  00001558          	L14_LF2:
  608  00001558  8fa20000	lw	r2,0(r29)
  609  0000155c  8fa30004	lw	r3,4(r29)
  610  00001560  8fdffff8	lw	r31,-8(r30)
  611  00001564  001ee820	add	r29,r0,r30
  612  00001568  8fdefffc	lw	r30,-4(r30)
  613  0000156c  4be00000	jr	r31
  614  00001570  54000000	nop
  615  00001574          	.endproc _dstrncpy
  616  00001574          	.align 2
  617  00001574          	.proc _dstrcat
  618  00001574          	.global _dstrcat
  619  00001574          	_dstrcat:
  620                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  621  00001574  afbefffc	sw	-4(r29),r30; push fp
  622  00001578  001df020	add	r30,r0,r29; fp = sp
  623  0000157c  afbffff8	sw	-8(r29),r31; push ret addr
  624  00001580  2fbd0018	subui	r29,r29,#24; alloc local storage
  625  00001584  afa20000	sw	0(r29),r2
  626  00001588  8fc10000	lw	r1,(r30)
  627  0000158c  afc1fff4	sw	-12(r30),r1
  628  00001590          	L21_LF2:
  629  00001590  8fc10000	lw	r1,(r30)
  630  00001594  90220000	lbu	r2,(r1)
  631  00001598  64410000	snei	r1,r2,#0
  632  0000159c  1420000c	bnez	r1,L23_LF2
  633  000015a0  54000000	nop; delay slot nop
  634  000015a4  0800001c	j	L22_LF2
  635  000015a8  54000000	nop; delay slot nop
  636  000015ac          	L23_LF2:
  637  000015ac  8fc20000	lw	r2,(r30)
  638  000015b0  20410001	addi	r1,r2,#1
  639  000015b4  00011020	add	r2,r0,r1
  640  000015b8  afc20000	sw	(r30),r2
  641  000015bc  0bffffd0	j	L21_LF2
  642  000015c0  54000000	nop; delay slot nop
  643  000015c4          	L22_LF2:
  644  000015c4  23bdfff8	addi	r29,r29,#-8
  645  000015c8  001d0820	add	r1,r0,r29
  646  000015cc  8fc20000	lw	r2,(r30)
  647  000015d0  ac220000	sw	(r1),r2
  648  000015d4  8fc20004	lw	r2,4(r30)
  649  000015d8  ac220004	sw	4(r1),r2
  650  000015dc  0ffffe5c	jal	_dstrcpy
  651  000015e0  54000000	nop; delay slot nop
  652  000015e4  23bd0008	addi	r29,r29,#8
  653  000015e8  8fc1fff4	lw	r1,-12(r30)
  654  000015ec  08000004	j	L20_LF2
  655  000015f0  54000000	nop; delay slot nop
  656  000015f4          	L20_LF2:
  657  000015f4  8fa20000	lw	r2,0(r29)
  658  000015f8  8fdffff8	lw	r31,-8(r30)
  659  000015fc  001ee820	add	r29,r0,r30
  660  00001600  8fdefffc	lw	r30,-4(r30)
  661  00001604  4be00000	jr	r31
  662  00001608  54000000	nop
  663  0000160c          	.endproc _dstrcat
  664  0000160c          	.align 2
  665  0000160c          	.proc _dstrncmp
  666  0000160c          	.global _dstrncmp
  667  0000160c          	_dstrncmp:
  668                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  669  0000160c  afbefffc	sw	-4(r29),r30; push fp
  670  00001610  001df020	add	r30,r0,r29; fp = sp
  671  00001614  afbffff8	sw	-8(r29),r31; push ret addr
  672  00001618  2fbd0018	subui	r29,r29,#24; alloc local storage
  673  0000161c  afa20000	sw	0(r29),r2
  674  00001620  afa30004	sw	4(r29),r3
  675  00001624  54000000	nop
  676  00001628  20010000	addi	r1,r0,#0
  677  0000162c  afc1fff4	sw	-12(r30),r1
  678  00001630          	L25_LF2:
  679  00001630  8fc1fff4	lw	r1,-12(r30)
  680  00001634  8fc20008	lw	r2,8(r30)
  681  00001638  0022082a	slt	r1,r1,r2
  682  0000163c  1420000c	bnez	r1,L28_LF2
  683  00001640  54000000	nop; delay slot nop
  684  00001644  08000088	j	L26_LF2
  685  00001648  54000000	nop; delay slot nop
  686  0000164c          	L28_LF2:
  687  0000164c  8fc10004	lw	r1,4(r30)
  688  00001650  90220000	lbu	r2,(r1)
  689  00001654  64410000	snei	r1,r2,#0
  690  00001658  14200018	bnez	r1,L29_LF2
  691  0000165c  54000000	nop; delay slot nop
  692  00001660  20010000	addi	r1,r0,#0
  693  00001664  080000d8	j	L24_LF2
  694  00001668  54000000	nop; delay slot nop
  695  0000166c  08000028	j	L30_LF2
  696  00001670  54000000	nop; delay slot nop
  697  00001674          	L29_LF2:
  698  00001674  8fc10000	lw	r1,(r30)
  699  00001678  8fc20004	lw	r2,4(r30)
  700  0000167c  90210000	lbu	r1,(r1)
  701  00001680  90420000	lbu	r2,(r2)
  702  00001684  00220829	sne	r1,r1,r2
  703  00001688  1020000c	beqz	r1,L30_LF2
  704  0000168c  54000000	nop; delay slot nop
  705  00001690  0800003c	j	L26_LF2
  706  00001694  54000000	nop; delay slot nop
  707  00001698          	L31_LF2:
  708  00001698          	L30_LF2:
  709  00001698  8fc20000	lw	r2,(r30)
  710  0000169c  20410001	addi	r1,r2,#1
  711  000016a0  00011020	add	r2,r0,r1
  712  000016a4  afc20000	sw	(r30),r2
  713  000016a8  8fc20004	lw	r2,4(r30)
  714  000016ac  20410001	addi	r1,r2,#1
  715  000016b0  00011020	add	r2,r0,r1
  716  000016b4  afc20004	sw	4(r30),r2
  717  000016b8          	L27_LF2:
  718  000016b8  8fc2fff4	lw	r2,-12(r30)
  719  000016bc  20410001	addi	r1,r2,#1
  720  000016c0  00011020	add	r2,r0,r1
  721  000016c4  afc2fff4	sw	-12(r30),r2
  722  000016c8  0bffff64	j	L25_LF2
  723  000016cc  54000000	nop; delay slot nop
  724  000016d0          	L26_LF2:
  725  000016d0  8fc1fff4	lw	r1,-12(r30)
  726  000016d4  8fc20008	lw	r2,8(r30)
  727  000016d8  00220828	seq	r1,r1,r2
  728  000016dc  10200018	beqz	r1,L32_LF2
  729  000016e0  54000000	nop; delay slot nop
  730  000016e4  20010000	addi	r1,r0,#0
  731  000016e8  08000054	j	L24_LF2
  732  000016ec  54000000	nop; delay slot nop
  733  000016f0  0800004c	j	L33_LF2
  734  000016f4  54000000	nop; delay slot nop
  735  000016f8          	L32_LF2:
  736  000016f8  8fc20000	lw	r2,(r30)
  737  000016fc  90410000	lbu	r1,(r2)
  738  00001700  8fc20004	lw	r2,4(r30)
  739  00001704  90430000	lbu	r3,(r2)
  740  00001708  00230822	sub	r1,r1,r3
  741  0000170c  74220000	sgei	r2,r1,#0
  742  00001710  10400020	beqz	r2,L34_LF2
  743  00001714  54000000	nop; delay slot nop
  744  00001718  8fc10000	lw	r1,(r30)
  745  0000171c  8fc20004	lw	r2,4(r30)
  746  00001720  90210000	lbu	r1,(r1)
  747  00001724  90420000	lbu	r2,(r2)
  748  00001728  00220829	sne	r1,r1,r2
  749  0000172c  08000008	j	L35_LF2
  750  00001730  54000000	nop; delay slot nop
  751  00001734          	L34_LF2:
  752  00001734  2001ffff	addi	r1,r0,#-1
  753  00001738          	L35_LF2:
  754  00001738  08000004	j	L24_LF2
  755  0000173c  54000000	nop; delay slot nop
  756  00001740          	L33_LF2:
  757  00001740          	L24_LF2:
  758  00001740  8fa20000	lw	r2,0(r29)
  759  00001744  8fa30004	lw	r3,4(r29)
  760  00001748  8fdffff8	lw	r31,-8(r30)
  761  0000174c  001ee820	add	r29,r0,r30
  762  00001750  8fdefffc	lw	r30,-4(r30)
  763  00001754  4be00000	jr	r31
  764  00001758  54000000	nop
  765  0000175c          	.endproc _dstrncmp
  766  0000175c          	.align 2
  767  0000175c          	.proc _dstrlen
  768  0000175c          	.global _dstrlen
  769  0000175c          	_dstrlen:
  770                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  771  0000175c  afbefffc	sw	-4(r29),r30; push fp
  772  00001760  001df020	add	r30,r0,r29; fp = sp
  773  00001764  afbffff8	sw	-8(r29),r31; push ret addr
  774  00001768  2fbd0018	subui	r29,r29,#24; alloc local storage
  775  0000176c  afa20000	sw	0(r29),r2
  776  00001770  20010000	addi	r1,r0,#0
  777  00001774  afc1fff4	sw	-12(r30),r1
  778  00001778          	L37_LF2:
  779  00001778  8fc10000	lw	r1,(r30)
  780  0000177c  20220001	addi	r2,r1,#1
  781  00001780  afc20000	sw	(r30),r2
  782  00001784  90210000	lbu	r1,(r1)
  783  00001788  64220000	snei	r2,r1,#0
  784  0000178c  1440000c	bnez	r2,L39_LF2
  785  00001790  54000000	nop; delay slot nop
  786  00001794  0800001c	j	L38_LF2
  787  00001798  54000000	nop; delay slot nop
  788  0000179c          	L39_LF2:
  789  0000179c  8fc2fff4	lw	r2,-12(r30)
  790  000017a0  20410001	addi	r1,r2,#1
  791  000017a4  00011020	add	r2,r0,r1
  792  000017a8  afc2fff4	sw	-12(r30),r2
  793  000017ac  0bffffc8	j	L37_LF2
  794  000017b0  54000000	nop; delay slot nop
  795  000017b4          	L38_LF2:
  796  000017b4  8fc1fff4	lw	r1,-12(r30)
  797  000017b8  08000004	j	L36_LF2
  798  000017bc  54000000	nop; delay slot nop
  799  000017c0          	L36_LF2:
  800  000017c0  8fa20000	lw	r2,0(r29)
  801  000017c4  8fdffff8	lw	r31,-8(r30)
  802  000017c8  001ee820	add	r29,r0,r30
  803  000017cc  8fdefffc	lw	r30,-4(r30)
  804  000017d0  4be00000	jr	r31
  805  000017d4  54000000	nop
  806  000017d8          	.endproc _dstrlen
  807  000017d8          	.align 2
  808  000017d8          	.proc _dstrstr
  809  000017d8          	.global _dstrstr
  810  000017d8          	_dstrstr:
  811                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  812  000017d8  afbefffc	sw	-4(r29),r30; push fp
  813  000017dc  001df020	add	r30,r0,r29; fp = sp
  814  000017e0  afbffff8	sw	-8(r29),r31; push ret addr
  815  000017e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  816  000017e8  afa20000	sw	0(r29),r2
  817  000017ec  23bdfff8	addi	r29,r29,#-8
  818  000017f0  001d0820	add	r1,r0,r29
  819  000017f4  8fc20004	lw	r2,4(r30)
  820  000017f8  ac220000	sw	(r1),r2
  821  000017fc  0fffff5c	jal	_dstrlen
  822  00001800  54000000	nop; delay slot nop
  823  00001804  23bd0008	addi	r29,r29,#8
  824  00001808  afc1fff4	sw	-12(r30),r1
  825  0000180c          	L41_LF2:
  826  0000180c  8fc10000	lw	r1,(r30)
  827  00001810  90220000	lbu	r2,(r1)
  828  00001814  64410000	snei	r1,r2,#0
  829  00001818  1420000c	bnez	r1,L43_LF2
  830  0000181c  54000000	nop; delay slot nop
  831  00001820  08000060	j	L42_LF2
  832  00001824  54000000	nop; delay slot nop
  833  00001828          	L43_LF2:
  834  00001828  23bdfff0	addi	r29,r29,#-16
  835  0000182c  001d0820	add	r1,r0,r29
  836  00001830  8fc20000	lw	r2,(r30)
  837  00001834  ac220000	sw	(r1),r2
  838  00001838  8fc20004	lw	r2,4(r30)
  839  0000183c  ac220004	sw	4(r1),r2
  840  00001840  8fc2fff4	lw	r2,-12(r30)
  841  00001844  ac220008	sw	8(r1),r2
  842  00001848  0ffffdc0	jal	_dstrncmp
  843  0000184c  54000000	nop; delay slot nop
  844  00001850  23bd0010	addi	r29,r29,#16
  845  00001854  64220000	snei	r2,r1,#0
  846  00001858  14400010	bnez	r2,L44_LF2
  847  0000185c  54000000	nop; delay slot nop
  848  00001860  8fc10000	lw	r1,(r30)
  849  00001864  08000028	j	L40_LF2
  850  00001868  54000000	nop; delay slot nop
  851  0000186c          	L44_LF2:
  852  0000186c  8fc20000	lw	r2,(r30)
  853  00001870  20410001	addi	r1,r2,#1
  854  00001874  00011020	add	r2,r0,r1
  855  00001878  afc20000	sw	(r30),r2
  856  0000187c  0bffff8c	j	L41_LF2
  857  00001880  54000000	nop; delay slot nop
  858  00001884          	L42_LF2:
  859  00001884  20010000	addi	r1,r0,#0
  860  00001888  08000004	j	L40_LF2
  861  0000188c  54000000	nop; delay slot nop
  862  00001890          	L40_LF2:
  863  00001890  8fa20000	lw	r2,0(r29)
  864  00001894  8fdffff8	lw	r31,-8(r30)
  865  00001898  001ee820	add	r29,r0,r30
  866  0000189c  8fdefffc	lw	r30,-4(r30)
  867  000018a0  4be00000	jr	r31
  868  000018a4  54000000	nop
  869  000018a8          	.endproc _dstrstr
  870  000018a8          	.align 2
  871  000018a8          	.proc _dmindex
  872  000018a8          	.global _dmindex
  873  000018a8          	_dmindex:
  874                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  875  000018a8  afbefffc	sw	-4(r29),r30; push fp
  876  000018ac  001df020	add	r30,r0,r29; fp = sp
  877  000018b0  afbffff8	sw	-8(r29),r31; push ret addr
  878  000018b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  879  000018b8  afa20000	sw	0(r29),r2
  880  000018bc  54000000	nop
  881  000018c0          	L46_LF2:
  882  000018c0  8fc10000	lw	r1,(r30)
  883  000018c4  90220000	lbu	r2,(r1)
  884  000018c8  64410000	snei	r1,r2,#0
  885  000018cc  1420000c	bnez	r1,L48_LF2
  886  000018d0  54000000	nop; delay slot nop
  887  000018d4  08000070	j	L47_LF2
  888  000018d8  54000000	nop; delay slot nop
  889  000018dc          	L48_LF2:
  890  000018dc  8fc10004	lw	r1,4(r30)
  891  000018e0  afc1fff4	sw	-12(r30),r1
  892  000018e4          	L49_LF2:
  893  000018e4  8fc1fff4	lw	r1,-12(r30)
  894  000018e8  90220000	lbu	r2,(r1)
  895  000018ec  64410000	snei	r1,r2,#0
  896  000018f0  1420000c	bnez	r1,L52_LF2
  897  000018f4  54000000	nop; delay slot nop
  898  000018f8  08000044	j	L50_LF2
  899  000018fc  54000000	nop; delay slot nop
  900  00001900          	L52_LF2:
  901  00001900  8fc10000	lw	r1,(r30)
  902  00001904  8fc2fff4	lw	r2,-12(r30)
  903  00001908  90210000	lbu	r1,(r1)
  904  0000190c  90420000	lbu	r2,(r2)
  905  00001910  00220828	seq	r1,r1,r2
  906  00001914  10200010	beqz	r1,L51_LF2
  907  00001918  54000000	nop; delay slot nop
  908  0000191c  8fc10000	lw	r1,(r30)
  909  00001920  08000030	j	L45_LF2
  910  00001924  54000000	nop; delay slot nop
  911  00001928          	L53_LF2:
  912  00001928          	L51_LF2:
  913  00001928  8fc2fff4	lw	r2,-12(r30)
  914  0000192c  20410001	addi	r1,r2,#1
  915  00001930  00011020	add	r2,r0,r1
  916  00001934  afc2fff4	sw	-12(r30),r2
  917  00001938  0bffffa8	j	L49_LF2
  918  0000193c  54000000	nop; delay slot nop
  919  00001940          	L50_LF2:
  920  00001940  0bffff7c	j	L46_LF2
  921  00001944  54000000	nop; delay slot nop
  922  00001948          	L47_LF2:
  923  00001948  20010000	addi	r1,r0,#0
  924  0000194c  08000004	j	L45_LF2
  925  00001950  54000000	nop; delay slot nop
  926  00001954          	L45_LF2:
  927  00001954  8fa20000	lw	r2,0(r29)
  928  00001958  8fdffff8	lw	r31,-8(r30)
  929  0000195c  001ee820	add	r29,r0,r30
  930  00001960  8fdefffc	lw	r30,-4(r30)
  931  00001964  4be00000	jr	r31
  932  00001968  54000000	nop
  933  0000196c          	.endproc _dmindex
  934  0000196c          	.align 2
  935  0000196c          	.proc _dindex
  936  0000196c          	.global _dindex
  937  0000196c          	_dindex:
  938                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  939  0000196c  afbefffc	sw	-4(r29),r30; push fp
  940  00001970  001df020	add	r30,r0,r29; fp = sp
  941  00001974  afbffff8	sw	-8(r29),r31; push ret addr
  942  00001978  2fbd0010	subui	r29,r29,#16; alloc local storage
  943  0000197c  afa20000	sw	0(r29),r2
  944  00001980  54000000	nop
  945  00001984          	L55_LF2:
  946  00001984  8fc10000	lw	r1,(r30)
  947  00001988  90220000	lbu	r2,(r1)
  948  0000198c  64410000	snei	r1,r2,#0
  949  00001990  1420000c	bnez	r1,L57_LF2
  950  00001994  54000000	nop; delay slot nop
  951  00001998  08000040	j	L56_LF2
  952  0000199c  54000000	nop; delay slot nop
  953  000019a0          	L57_LF2:
  954  000019a0  8fc10000	lw	r1,(r30)
  955  000019a4  90220000	lbu	r2,(r1)
  956  000019a8  8fc10004	lw	r1,4(r30)
  957  000019ac  00411028	seq	r2,r2,r1
  958  000019b0  10400010	beqz	r2,L58_LF2
  959  000019b4  54000000	nop; delay slot nop
  960  000019b8  8fc10000	lw	r1,(r30)
  961  000019bc  08000028	j	L54_LF2
  962  000019c0  54000000	nop; delay slot nop
  963  000019c4          	L58_LF2:
  964  000019c4  8fc20000	lw	r2,(r30)
  965  000019c8  20410001	addi	r1,r2,#1
  966  000019cc  00011020	add	r2,r0,r1
  967  000019d0  afc20000	sw	(r30),r2
  968  000019d4  0bffffac	j	L55_LF2
  969  000019d8  54000000	nop; delay slot nop
  970  000019dc          	L56_LF2:
  971  000019dc  20010000	addi	r1,r0,#0
  972  000019e0  08000004	j	L54_LF2
  973  000019e4  54000000	nop; delay slot nop
  974  000019e8          	L54_LF2:
  975  000019e8  8fa20000	lw	r2,0(r29)
  976  000019ec  8fdffff8	lw	r31,-8(r30)
  977  000019f0  001ee820	add	r29,r0,r30
  978  000019f4  8fdefffc	lw	r30,-4(r30)
  979  000019f8  4be00000	jr	r31
  980  000019fc  54000000	nop
  981  00001a00          	.endproc _dindex
  982  00001a00          	.align 2
  983  00001a00          	.proc _ditoa
  984  00001a00          	.global _ditoa
  985  00001a00          	_ditoa:
  986                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
  987  00001a00  afbefffc	sw	-4(r29),r30; push fp
  988  00001a04  001df020	add	r30,r0,r29; fp = sp
  989  00001a08  afbffff8	sw	-8(r29),r31; push ret addr
  990  00001a0c  2fbd0018	subui	r29,r29,#24; alloc local storage
  991  00001a10  afa20000	sw	0(r29),r2
  992  00001a14  afa30004	sw	4(r29),r3
  993  00001a18  8fc10000	lw	r1,(r30)
  994  00001a1c  68220000	slti	r2,r1,#0
  995  00001a20  1040002c	beqz	r2,L60_LF2
  996  00001a24  54000000	nop; delay slot nop
  997  00001a28  8fc10004	lw	r1,4(r30)
  998  00001a2c  20220001	addi	r2,r1,#1
  999  00001a30  afc20004	sw	4(r30),r2
 1000  00001a34  2002002d	addi	r2,r0,(#0x2d)&0xff
 1001  00001a38  a0220000	sb	(r1),r2
 1002  00001a3c  8fc10000	lw	r1,(r30)
 1003  00001a40  00011022	sub	r2,r0,r1
 1004  00001a44  afc20000	sw	(r30),r2
 1005  00001a48  08000118	j	L61_LF2
 1006  00001a4c  54000000	nop; delay slot nop
 1007  00001a50          	L60_LF2:
 1008  00001a50  8fc10000	lw	r1,(r30)
 1009  00001a54  64220000	snei	r2,r1,#0
 1010  00001a58  14400020	bnez	r2,L62_LF2
 1011  00001a5c  54000000	nop; delay slot nop
 1012  00001a60  8fc10004	lw	r1,4(r30)
 1013  00001a64  20220001	addi	r2,r1,#1
 1014  00001a68  afc20004	sw	4(r30),r2
 1015  00001a6c  20020030	addi	r2,r0,(#0x30)&0xff
 1016  00001a70  a0220000	sb	(r1),r2
 1017  00001a74  080000ec	j	L61_LF2
 1018  00001a78  54000000	nop; delay slot nop
 1019  00001a7c          	L62_LF2:
 1020  00001a7c  20010001	addi	r1,r0,#1
 1021  00001a80  afc1fff4	sw	-12(r30),r1
 1022  00001a84          	L64_LF2:
 1023  00001a84  8fc1fff4	lw	r1,-12(r30)
 1024  00001a88  8fc20000	lw	r2,(r30)
 1025  00001a8c  0022082c	sle	r1,r1,r2
 1026  00001a90  1420000c	bnez	r1,L66_LF2
 1027  00001a94  54000000	nop; delay slot nop
 1028  00001a98  08000024	j	L65_LF2
 1029  00001a9c  54000000	nop; delay slot nop
 1030  00001aa0          	L67_LF2:
 1031  00001aa0          	L66_LF2:
 1032  00001aa0  8fc1fff4	lw	r1,-12(r30)
 1033  00001aa4  00011820	add	r3,r0,r1
 1034  00001aa8  50620002	slli	r2,r3,#0x2
 1035  00001aac  00411020	add	r2,r2,r1
 1036  00001ab0  50410001	slli	r1,r2,#0x1
 1037  00001ab4  afc1fff4	sw	-12(r30),r1
 1038  00001ab8  0bffffc8	j	L64_LF2
 1039  00001abc  54000000	nop; delay slot nop
 1040  00001ac0          	L65_LF2:
 1041  00001ac0  54000000	nop
 1042  00001ac4          	L68_LF2:
 1043  00001ac4  8fc1fff4	lw	r1,-12(r30)
 1044  00001ac8  2002000a	addi	r2,r0,#10
 1045  00001acc  00200035	movi2fp	f0,r1
 1046  00001ad0  00400835	movi2fp	f1,r2
 1047  00001ad4  0401000f	div	f0,f0,f1
 1048  00001ad8  00000834	movfp2i	r1,f0
 1049  00001adc  afc1fff4	sw	-12(r30),r1
 1050  00001ae0  8fc10004	lw	r1,4(r30)
 1051  00001ae4  20220001	addi	r2,r1,#1
 1052  00001ae8  afc20004	sw	4(r30),r2
 1053  00001aec  8fc20000	lw	r2,(r30)
 1054  00001af0  8fc3fff4	lw	r3,-12(r30)
 1055  00001af4  00400035	movi2fp	f0,r2
 1056  00001af8  00600835	movi2fp	f1,r3
 1057  00001afc  0401000f	div	f0,f0,f1
 1058  00001b00  00001034	movfp2i	r2,f0
 1059  00001b04  00021820	add	r3,r0,r2
 1060  00001b08  20620030	addi	r2,r3,#48
 1061  00001b0c  a0220000	sb	(r1),r2
 1062  00001b10  8fc10000	lw	r1,(r30)
 1063  00001b14  8fc3fff4	lw	r3,-12(r30)
 1064  00001b18  00200035	movi2fp	f0,r1
 1065  00001b1c  00600835	movi2fp	f1,r3
 1066  00001b20  0401000f	div	f0,f0,f1
 1067  00001b24  00001034	movfp2i	r2,f0
 1068  00001b28  8fc3fff4	lw	r3,-12(r30)
 1069  00001b2c  00400035	movi2fp	f0,r2
 1070  00001b30  00600835	movi2fp	f1,r3
 1071  00001b34  0401000e	mult	f0,f0,f1
 1072  00001b38  00001034	movfp2i	r2,f0
 1073  00001b3c  00220822	sub	r1,r1,r2
 1074  00001b40  afc10000	sw	(r30),r1
 1075  00001b44          	L70_LF2:
 1076  00001b44  8fc1fff4	lw	r1,-12(r30)
 1077  00001b48  6c220001	sgti	r2,r1,#1
 1078  00001b4c  1440000c	bnez	r2,L71_LF2
 1079  00001b50  54000000	nop; delay slot nop
 1080  00001b54  0800000c	j	L61_LF2
 1081  00001b58  54000000	nop; delay slot nop
 1082  00001b5c          	L71_LF2:
 1083  00001b5c  0bffff64	j	L68_LF2
 1084  00001b60  54000000	nop; delay slot nop
 1085  00001b64          	L69_LF2:
 1086  00001b64          	L63_LF2:
 1087  00001b64          	L61_LF2:
 1088  00001b64  8fc10004	lw	r1,4(r30)
 1089  00001b68  20020000	addi	r2,r0,(#0x0)&0xff
 1090  00001b6c  a0220000	sb	(r1),r2
 1091  00001b70          	L59_LF2:
 1092  00001b70  8fa20000	lw	r2,0(r29)
 1093  00001b74  8fa30004	lw	r3,4(r29)
 1094  00001b78  8fdffff8	lw	r31,-8(r30)
 1095  00001b7c  001ee820	add	r29,r0,r30
 1096  00001b80  8fdefffc	lw	r30,-4(r30)
 1097  00001b84  4be00000	jr	r31
 1098  00001b88  54000000	nop
 1099  00001b8c          	.endproc _ditoa
 1100  00001b8c          	.align 2
 1101  00001b8c          	.proc _dstrtol
 1102  00001b8c          	.global _dstrtol
 1103  00001b8c          	_dstrtol:
 1104                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1105  00001b8c  afbefffc	sw	-4(r29),r30; push fp
 1106  00001b90  001df020	add	r30,r0,r29; fp = sp
 1107  00001b94  afbffff8	sw	-8(r29),r31; push ret addr
 1108  00001b98  2fbd0020	subui	r29,r29,#32; alloc local storage
 1109  00001b9c  afa20000	sw	0(r29),r2
 1110  00001ba0  20010000	addi	r1,r0,#0
 1111  00001ba4  afc1fff4	sw	-12(r30),r1
 1112  00001ba8          	L73_LF2:
 1113  00001ba8  8fc10000	lw	r1,(r30)
 1114  00001bac  90220000	lbu	r2,(r1)
 1115  00001bb0  60410020	seqi	r1,r2,#32
 1116  00001bb4  14200034	bnez	r1,L75_LF2
 1117  00001bb8  54000000	nop; delay slot nop
 1118  00001bbc  8fc10000	lw	r1,(r30)
 1119  00001bc0  90220000	lbu	r2,(r1)
 1120  00001bc4  60410009	seqi	r1,r2,#9
 1121  00001bc8  14200020	bnez	r1,L75_LF2
 1122  00001bcc  54000000	nop; delay slot nop
 1123  00001bd0  8fc10000	lw	r1,(r30)
 1124  00001bd4  90220000	lbu	r2,(r1)
 1125  00001bd8  6041000a	seqi	r1,r2,#10
 1126  00001bdc  1420000c	bnez	r1,L75_LF2
 1127  00001be0  54000000	nop; delay slot nop
 1128  00001be4  0800001c	j	L74_LF2
 1129  00001be8  54000000	nop; delay slot nop
 1130  00001bec          	L75_LF2:
 1131  00001bec  8fc20000	lw	r2,(r30)
 1132  00001bf0  20410001	addi	r1,r2,#1
 1133  00001bf4  00011020	add	r2,r0,r1
 1134  00001bf8  afc20000	sw	(r30),r2
 1135  00001bfc  0bffffa8	j	L73_LF2
 1136  00001c00  54000000	nop; delay slot nop
 1137  00001c04          	L74_LF2:
 1138  00001c04  8fc10004	lw	r1,4(r30)
 1139  00001c08  64220000	snei	r2,r1,#0
 1140  00001c0c  10400010	beqz	r2,L76_LF2
 1141  00001c10  54000000	nop; delay slot nop
 1142  00001c14  8fc10004	lw	r1,4(r30)
 1143  00001c18  8fc20000	lw	r2,(r30)
 1144  00001c1c  ac220000	sw	(r1),r2
 1145  00001c20          	L76_LF2:
 1146  00001c20  8fc10000	lw	r1,(r30)
 1147  00001c24  90220000	lbu	r2,(r1)
 1148  00001c28  64410000	snei	r1,r2,#0
 1149  00001c2c  14200010	bnez	r1,L77_LF2
 1150  00001c30  54000000	nop; delay slot nop
 1151  00001c34  8fc1fff4	lw	r1,-12(r30)
 1152  00001c38  08000294	j	L72_LF2
 1153  00001c3c  54000000	nop; delay slot nop
 1154  00001c40          	L77_LF2:
 1155  00001c40  8fc10000	lw	r1,(r30)
 1156  00001c44  90220000	lbu	r2,(r1)
 1157  00001c48  6041002d	seqi	r1,r2,#45
 1158  00001c4c  10200024	beqz	r1,L78_LF2
 1159  00001c50  54000000	nop; delay slot nop
 1160  00001c54  2001ffff	addi	r1,r0,#-1
 1161  00001c58  afc1ffec	sw	-20(r30),r1
 1162  00001c5c  8fc20000	lw	r2,(r30)
 1163  00001c60  20410001	addi	r1,r2,#1
 1164  00001c64  00011020	add	r2,r0,r1
 1165  00001c68  afc20000	sw	(r30),r2
 1166  00001c6c  0800000c	j	L79_LF2
 1167  00001c70  54000000	nop; delay slot nop
 1168  00001c74          	L78_LF2:
 1169  00001c74  20010001	addi	r1,r0,#1
 1170  00001c78  afc1ffec	sw	-20(r30),r1
 1171  00001c7c          	L79_LF2:
 1172  00001c7c  8fc10008	lw	r1,8(r30)
 1173  00001c80  64220000	snei	r2,r1,#0
 1174  00001c84  14400090	bnez	r2,L80_LF2
 1175  00001c88  54000000	nop; delay slot nop
 1176  00001c8c  8fc10000	lw	r1,(r30)
 1177  00001c90  90220000	lbu	r2,(r1)
 1178  00001c94  60410030	seqi	r1,r2,#48
 1179  00001c98  10200074	beqz	r1,L81_LF2
 1180  00001c9c  54000000	nop; delay slot nop
 1181  00001ca0  8fc20000	lw	r2,(r30)
 1182  00001ca4  20410001	addi	r1,r2,#1
 1183  00001ca8  00011020	add	r2,r0,r1
 1184  00001cac  afc20000	sw	(r30),r2
 1185  00001cb0  8fc10000	lw	r1,(r30)
 1186  00001cb4  90220000	lbu	r2,(r1)
 1187  00001cb8  60410078	seqi	r1,r2,#120
 1188  00001cbc  14200020	bnez	r1,L83_LF2
 1189  00001cc0  54000000	nop; delay slot nop
 1190  00001cc4  8fc10000	lw	r1,(r30)
 1191  00001cc8  90220000	lbu	r2,(r1)
 1192  00001ccc  60410058	seqi	r1,r2,#88
 1193  00001cd0  1420000c	bnez	r1,L83_LF2
 1194  00001cd4  54000000	nop; delay slot nop
 1195  00001cd8  08000024	j	L82_LF2
 1196  00001cdc  54000000	nop; delay slot nop
 1197  00001ce0          	L83_LF2:
 1198  00001ce0  20010010	addi	r1,r0,#16
 1199  00001ce4  afc10008	sw	8(r30),r1
 1200  00001ce8  8fc20000	lw	r2,(r30)
 1201  00001cec  20410001	addi	r1,r2,#1
 1202  00001cf0  00011020	add	r2,r0,r1
 1203  00001cf4  afc20000	sw	(r30),r2
 1204  00001cf8  0800000c	j	L84_LF2
 1205  00001cfc  54000000	nop; delay slot nop
 1206  00001d00          	L82_LF2:
 1207  00001d00  20010008	addi	r1,r0,#8
 1208  00001d04  afc10008	sw	8(r30),r1
 1209  00001d08          	L84_LF2:
 1210  00001d08  0800000c	j	L80_LF2
 1211  00001d0c  54000000	nop; delay slot nop
 1212  00001d10          	L81_LF2:
 1213  00001d10  2001000a	addi	r1,r0,#10
 1214  00001d14  afc10008	sw	8(r30),r1
 1215  00001d18          	L85_LF2:
 1216  00001d18          	L80_LF2:
 1217  00001d18  8fc10008	lw	r1,8(r30)
 1218  00001d1c  70220000	slei	r2,r1,#0
 1219  00001d20  1440001c	bnez	r2,L87_LF2
 1220  00001d24  54000000	nop; delay slot nop
 1221  00001d28  8fc10008	lw	r1,8(r30)
 1222  00001d2c  6c220010	sgti	r2,r1,#16
 1223  00001d30  1440000c	bnez	r2,L87_LF2
 1224  00001d34  54000000	nop; delay slot nop
 1225  00001d38  08000010	j	L86_LF2
 1226  00001d3c  54000000	nop; delay slot nop
 1227  00001d40          	L87_LF2:
 1228  00001d40  8fc1fff4	lw	r1,-12(r30)
 1229  00001d44  08000188	j	L72_LF2
 1230  00001d48  54000000	nop; delay slot nop
 1231  00001d4c          	L86_LF2:
 1232  00001d4c  54000000	nop
 1233  00001d50          	L88_LF2:
 1234  00001d50  8fc10000	lw	r1,(r30)
 1235  00001d54  90220000	lbu	r2,(r1)
 1236  00001d58  6c41002f	sgtui	r1,r2,#47
 1237  00001d5c  10200030	beqz	r1,L91_LF2
 1238  00001d60  54000000	nop; delay slot nop
 1239  00001d64  8fc10000	lw	r1,(r30)
 1240  00001d68  90220000	lbu	r2,(r1)
 1241  00001d6c  70410039	sleui	r1,r2,#57
 1242  00001d70  1020001c	beqz	r1,L91_LF2
 1243  00001d74  54000000	nop; delay slot nop
 1244  00001d78  8fc10000	lw	r1,(r30)
 1245  00001d7c  90220000	lbu	r2,(r1)
 1246  00001d80  2041ffd0	addi	r1,r2,#-48
 1247  00001d84  afc1fff0	sw	-16(r30),r1
 1248  00001d88  0800008c	j	L92_LF2
 1249  00001d8c  54000000	nop; delay slot nop
 1250  00001d90          	L91_LF2:
 1251  00001d90  8fc10000	lw	r1,(r30)
 1252  00001d94  90220000	lbu	r2,(r1)
 1253  00001d98  6c410060	sgtui	r1,r2,#96
 1254  00001d9c  10200030	beqz	r1,L93_LF2
 1255  00001da0  54000000	nop; delay slot nop
 1256  00001da4  8fc10000	lw	r1,(r30)
 1257  00001da8  90220000	lbu	r2,(r1)
 1258  00001dac  7041007a	sleui	r1,r2,#122
 1259  00001db0  1020001c	beqz	r1,L93_LF2
 1260  00001db4  54000000	nop; delay slot nop
 1261  00001db8  8fc10000	lw	r1,(r30)
 1262  00001dbc  90220000	lbu	r2,(r1)
 1263  00001dc0  2041ffa9	addi	r1,r2,#-87
 1264  00001dc4  afc1fff0	sw	-16(r30),r1
 1265  00001dc8  0800004c	j	L92_LF2
 1266  00001dcc  54000000	nop; delay slot nop
 1267  00001dd0          	L93_LF2:
 1268  00001dd0  8fc10000	lw	r1,(r30)
 1269  00001dd4  90220000	lbu	r2,(r1)
 1270  00001dd8  6c410040	sgtui	r1,r2,#64
 1271  00001ddc  10200030	beqz	r1,L95_LF2
 1272  00001de0  54000000	nop; delay slot nop
 1273  00001de4  8fc10000	lw	r1,(r30)
 1274  00001de8  90220000	lbu	r2,(r1)
 1275  00001dec  7041005a	sleui	r1,r2,#90
 1276  00001df0  1020001c	beqz	r1,L95_LF2
 1277  00001df4  54000000	nop; delay slot nop
 1278  00001df8  8fc10000	lw	r1,(r30)
 1279  00001dfc  90220000	lbu	r2,(r1)
 1280  00001e00  2041ffc9	addi	r1,r2,#-55
 1281  00001e04  afc1fff0	sw	-16(r30),r1
 1282  00001e08  0800000c	j	L92_LF2
 1283  00001e0c  54000000	nop; delay slot nop
 1284  00001e10          	L95_LF2:
 1285  00001e10  200103e8	addi	r1,r0,#1000
 1286  00001e14  afc1fff0	sw	-16(r30),r1
 1287  00001e18          	L96_LF2:
 1288  00001e18          	L94_LF2:
 1289  00001e18          	L92_LF2:
 1290  00001e18  8fc1fff0	lw	r1,-16(r30)
 1291  00001e1c  8fc20008	lw	r2,8(r30)
 1292  00001e20  0022082a	slt	r1,r1,r2
 1293  00001e24  10200040	beqz	r1,L90_LF2
 1294  00001e28  54000000	nop; delay slot nop
 1295  00001e2c  8fc1fff4	lw	r1,-12(r30)
 1296  00001e30  8fc20008	lw	r2,8(r30)
 1297  00001e34  00200035	movi2fp	f0,r1
 1298  00001e38  00400835	movi2fp	f1,r2
 1299  00001e3c  0401000e	mult	f0,f0,f1
 1300  00001e40  00000834	movfp2i	r1,f0
 1301  00001e44  afc1fff4	sw	-12(r30),r1
 1302  00001e48  8fc1fff4	lw	r1,-12(r30)
 1303  00001e4c  8fc2fff0	lw	r2,-16(r30)
 1304  00001e50  00220820	add	r1,r1,r2
 1305  00001e54  afc1fff4	sw	-12(r30),r1
 1306  00001e58  8fc20000	lw	r2,(r30)
 1307  00001e5c  20410001	addi	r1,r2,#1
 1308  00001e60  00011020	add	r2,r0,r1
 1309  00001e64  afc20000	sw	(r30),r2
 1310  00001e68          	L97_LF2:
 1311  00001e68          	L90_LF2:
 1312  00001e68  8fc1fff0	lw	r1,-16(r30)
 1313  00001e6c  8fc20008	lw	r2,8(r30)
 1314  00001e70  0022082a	slt	r1,r1,r2
 1315  00001e74  1420000c	bnez	r1,L98_LF2
 1316  00001e78  54000000	nop; delay slot nop
 1317  00001e7c  0800000c	j	L89_LF2
 1318  00001e80  54000000	nop; delay slot nop
 1319  00001e84          	L98_LF2:
 1320  00001e84  0bfffec8	j	L88_LF2
 1321  00001e88  54000000	nop; delay slot nop
 1322  00001e8c          	L89_LF2:
 1323  00001e8c  8fc10004	lw	r1,4(r30)
 1324  00001e90  64220000	snei	r2,r1,#0
 1325  00001e94  10400010	beqz	r2,L99_LF2
 1326  00001e98  54000000	nop; delay slot nop
 1327  00001e9c  8fc10004	lw	r1,4(r30)
 1328  00001ea0  8fc20000	lw	r2,(r30)
 1329  00001ea4  ac220000	sw	(r1),r2
 1330  00001ea8          	L99_LF2:
 1331  00001ea8  8fc1fff4	lw	r1,-12(r30)
 1332  00001eac  8fc2ffec	lw	r2,-20(r30)
 1333  00001eb0  00200035	movi2fp	f0,r1
 1334  00001eb4  00400835	movi2fp	f1,r2
 1335  00001eb8  0401000e	mult	f0,f0,f1
 1336  00001ebc  00000834	movfp2i	r1,f0
 1337  00001ec0  afc1fff4	sw	-12(r30),r1
 1338  00001ec4  8fc1fff4	lw	r1,-12(r30)
 1339  00001ec8  08000004	j	L72_LF2
 1340  00001ecc  54000000	nop; delay slot nop
 1341  00001ed0          	L72_LF2:
 1342  00001ed0  8fa20000	lw	r2,0(r29)
 1343  00001ed4  8fdffff8	lw	r31,-8(r30)
 1344  00001ed8  001ee820	add	r29,r0,r30
 1345  00001edc  8fdefffc	lw	r30,-4(r30)
 1346  00001ee0  4be00000	jr	r31
 1347  00001ee4  54000000	nop
 1348  00001ee8          	.endproc _dstrtol
 1349  00001ee8          	.align 2
 1350  00001ee8          	.proc _bcopy
 1351  00001ee8          	.global _bcopy
 1352  00001ee8          	_bcopy:
 1353                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1354  00001ee8  afbefffc	sw	-4(r29),r30; push fp
 1355  00001eec  001df020	add	r30,r0,r29; fp = sp
 1356  00001ef0  afbffff8	sw	-8(r29),r31; push ret addr
 1357  00001ef4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1358  00001ef8  afa20000	sw	0(r29),r2
 1359  00001efc  afa30004	sw	4(r29),r3
 1360  00001f00  54000000	nop
 1361  00001f04          	L101_LF2:
 1362  00001f04  8fc10008	lw	r1,8(r30)
 1363  00001f08  2022ffff	addi	r2,r1,#-1
 1364  00001f0c  afc20008	sw	8(r30),r2
 1365  00001f10  6c210000	sgti	r1,r1,#0
 1366  00001f14  1420000c	bnez	r1,L103_LF2
 1367  00001f18  54000000	nop; delay slot nop
 1368  00001f1c  0800002c	j	L102_LF2
 1369  00001f20  54000000	nop; delay slot nop
 1370  00001f24          	L103_LF2:
 1371  00001f24  8fc10004	lw	r1,4(r30)
 1372  00001f28  20220001	addi	r2,r1,#1
 1373  00001f2c  afc20004	sw	4(r30),r2
 1374  00001f30  8fc20000	lw	r2,(r30)
 1375  00001f34  20430001	addi	r3,r2,#1
 1376  00001f38  afc30000	sw	(r30),r3
 1377  00001f3c  80420000	lb	r2,(r2)
 1378  00001f40  a0220000	sb	(r1),r2
 1379  00001f44  0bffffbc	j	L101_LF2
 1380  00001f48  54000000	nop; delay slot nop
 1381  00001f4c          	L102_LF2:
 1382  00001f4c          	L100_LF2:
 1383  00001f4c  8fa20000	lw	r2,0(r29)
 1384  00001f50  8fa30004	lw	r3,4(r29)
 1385  00001f54  8fdffff8	lw	r31,-8(r30)
 1386  00001f58  001ee820	add	r29,r0,r30
 1387  00001f5c  8fdefffc	lw	r30,-4(r30)
 1388  00001f60  4be00000	jr	r31
 1389  00001f64  54000000	nop
 1390  00001f68          	.endproc _bcopy
 1391  00001f68          	.align 2
 1392  00001f68          	.proc _bzero
 1393  00001f68          	.global _bzero
 1394  00001f68          	_bzero:
 1395                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1396  00001f68  afbefffc	sw	-4(r29),r30; push fp
 1397  00001f6c  001df020	add	r30,r0,r29; fp = sp
 1398  00001f70  afbffff8	sw	-8(r29),r31; push ret addr
 1399  00001f74  2fbd0010	subui	r29,r29,#16; alloc local storage
 1400  00001f78  afa20000	sw	0(r29),r2
 1401  00001f7c  54000000	nop
 1402  00001f80          	L105_LF2:
 1403  00001f80  8fc10004	lw	r1,4(r30)
 1404  00001f84  2022ffff	addi	r2,r1,#-1
 1405  00001f88  afc20004	sw	4(r30),r2
 1406  00001f8c  6c210000	sgti	r1,r1,#0
 1407  00001f90  1420000c	bnez	r1,L107_LF2
 1408  00001f94  54000000	nop; delay slot nop
 1409  00001f98  08000020	j	L106_LF2
 1410  00001f9c  54000000	nop; delay slot nop
 1411  00001fa0          	L107_LF2:
 1412  00001fa0  8fc10000	lw	r1,(r30)
 1413  00001fa4  20220001	addi	r2,r1,#1
 1414  00001fa8  afc20000	sw	(r30),r2
 1415  00001fac  20020000	addi	r2,r0,(#0x0)&0xff
 1416  00001fb0  a0220000	sb	(r1),r2
 1417  00001fb4  0bffffc8	j	L105_LF2
 1418  00001fb8  54000000	nop; delay slot nop
 1419  00001fbc          	L106_LF2:
 1420  00001fbc          	L104_LF2:
 1421  00001fbc  8fa20000	lw	r2,0(r29)
 1422  00001fc0  8fdffff8	lw	r31,-8(r30)
 1423  00001fc4  001ee820	add	r29,r0,r30
 1424  00001fc8  8fdefffc	lw	r30,-4(r30)
 1425  00001fcc  4be00000	jr	r31
 1426  00001fd0  54000000	nop
 1427  00001fd4          	.endproc _bzero
 1428  00001fd4          	.align 2
 1429  00001fd4          	.proc _min
 1430  00001fd4          	.global _min
 1431  00001fd4          	_min:
 1432                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1433  00001fd4  afbefffc	sw	-4(r29),r30; push fp
 1434  00001fd8  001df020	add	r30,r0,r29; fp = sp
 1435  00001fdc  afbffff8	sw	-8(r29),r31; push ret addr
 1436  00001fe0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1437  00001fe4  afa20000	sw	0(r29),r2
 1438  00001fe8  afa30004	sw	4(r29),r3
 1439  00001fec  8fc10000	lw	r1,(r30)
 1440  00001ff0  8fc20004	lw	r2,4(r30)
 1441  00001ff4  0022182c	sle	r3,r1,r2
 1442  00001ff8  14600008	bnez	r3,L109_LF2
 1443  00001ffc  54000000	nop; delay slot nop
 1444  00002000  8fc10004	lw	r1,4(r30)
 1445  00002004          	L109_LF2:
 1446  00002004  08000004	j	L108_LF2
 1447  00002008  54000000	nop; delay slot nop
 1448  0000200c          	L108_LF2:
 1449  0000200c  8fa20000	lw	r2,0(r29)
 1450  00002010  8fa30004	lw	r3,4(r29)
 1451  00002014  8fdffff8	lw	r31,-8(r30)
 1452  00002018  001ee820	add	r29,r0,r30
 1453  0000201c  8fdefffc	lw	r30,-4(r30)
 1454  00002020  4be00000	jr	r31
 1455  00002024  54000000	nop
 1456  00002028          	.endproc _min
 1457  00002028          	.align 2
 1458  00002028          	.proc _max
 1459  00002028          	.global _max
 1460  00002028          	_max:
 1461                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1462  00002028  afbefffc	sw	-4(r29),r30; push fp
 1463  0000202c  001df020	add	r30,r0,r29; fp = sp
 1464  00002030  afbffff8	sw	-8(r29),r31; push ret addr
 1465  00002034  2fbd0010	subui	r29,r29,#16; alloc local storage
 1466  00002038  afa20000	sw	0(r29),r2
 1467  0000203c  afa30004	sw	4(r29),r3
 1468  00002040  8fc10000	lw	r1,(r30)
 1469  00002044  8fc20004	lw	r2,4(r30)
 1470  00002048  0022182d	sge	r3,r1,r2
 1471  0000204c  14600008	bnez	r3,L111_LF2
 1472  00002050  54000000	nop; delay slot nop
 1473  00002054  8fc10004	lw	r1,4(r30)
 1474  00002058          	L111_LF2:
 1475  00002058  08000004	j	L110_LF2
 1476  0000205c  54000000	nop; delay slot nop
 1477  00002060          	L110_LF2:
 1478  00002060  8fa20000	lw	r2,0(r29)
 1479  00002064  8fa30004	lw	r3,4(r29)
 1480  00002068  8fdffff8	lw	r31,-8(r30)
 1481  0000206c  001ee820	add	r29,r0,r30
 1482  00002070  8fdefffc	lw	r30,-4(r30)
 1483  00002074  4be00000	jr	r31
 1484  00002078  54000000	nop
 1485  0000207c          	.endproc _max
 1486                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1487                      ;;;
 1488                      ;;; Most of the traps are called in files from libtraps.
 1491  0000207c          	.align 2
 1492  0000207c          	.proc _exit
 1493  0000207c          	.global _exit
 1494  0000207c          	_exit:
 1495  0000207c  44000300	trap	#0x300
 1496  00002080  4be00000	jr	r31
 1497  00002084  54000000	nop
 1498  00002088          	.endproc _exit
 1500                      ; for the benefit of gcc.
 1501  00002088          	.proc ___main
 1502  00002088          	.global ___main
 1503  00002088          	___main:
 1504  00002088  4be00000	jr	r31
 1505  0000208c  54000000	nop
 1506  00002090          	.endproc ___main
 1507  00002090          	.text
 1508  00002090          	.global _etext
 1509  00002090          	_etext:
 1510  00002090          	.align 3
 1511  00002090          	.data
 1512  00003015          	.global _edata
 1513  00003015          	_edata:
