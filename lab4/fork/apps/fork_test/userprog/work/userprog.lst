 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 92
    4                      ; Text size: 4784
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  41727261	.ascii "Array contents\n\000"
   82  00003004  7920636f	
   82  00003008  6e74656e	
   82  0000300c  74730a00	
   83  00003010          	.align 2
   84  00003010          	LC1_LF0:
   85  00003010  25642000	.ascii "%d \000"
   86  00003014          	.align 2
   87  00003014          	LC2_LF0:
   88  00003014  0a00    	.ascii "\n\000"
   89  00003016          	.text
   90  000010d4          	.align 2
   91  000010d4          	.proc _printArray
   92  000010d4          	.global _printArray
   93  000010d4          	_printArray:
   94                      ;  Function 'printArray'; 0 bytes of locals, 4 regs to save.
   95  000010d4  afbefffc	sw	-4(r29),r30; push fp
   96  000010d8  001df020	add	r30,r0,r29; fp = sp
   97  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   98  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
   99  000010e4  afa20000	sw	0(r29),r2
  100  000010e8  afa30004	sw	4(r29),r3
  101  000010ec  afa40008	sw	8(r29),r4
  102  000010f0  afa5000c	sw	12(r29),r5
  103  000010f4  8fc40004	lw	r4,4(r30)
  104  000010f8  23bdfff8	addi	r29,r29,#-8
  105  000010fc  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  106  00001100  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  107  00001104  afa50000	sw	(r29),r5
  108  00001108  0c0002d0	jal	_Printf
  109  0000110c  54000000	nop; not filled.
  110  00001110  20020000	addi	r2,r0,#0
  111  00001114  23bd0008	addi	r29,r29,#8
  112  00001118  0044082a	slt	r1,r2,r4
  113  0000111c  10200040	beqz	r1,L21_LF0
  114  00001120  54000000	nop; not filled.
  115  00001124  8fc30000	lw	r3,(r30)
  116  00001128          	L23_LF0:
  117  00001128  23bdfff8	addi	r29,r29,#-8
  118  0000112c  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  119  00001130  24a53010	addui	r5,r5,(LC1_LF0)&0xffff
  120  00001134  afa50000	sw	(r29),r5
  121  00001138  8c610000	lw	r1,(r3)
  122  0000113c  afa10004	sw	4(r29),r1
  123  00001140  0c000298	jal	_Printf
  124  00001144  54000000	nop; not filled.
  125  00001148  23bd0008	addi	r29,r29,#8
  126  0000114c  20630004	addi	r3,r3,#4
  127  00001150  20420001	addi	r2,r2,#1
  128  00001154  0044082a	slt	r1,r2,r4
  129  00001158  1420ffcc	bnez	r1,L23_LF0
  130  0000115c  54000000	nop; not filled.
  131  00001160          	L21_LF0:
  132  00001160  23bdfff8	addi	r29,r29,#-8
  133  00001164  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  134  00001168  24a53014	addui	r5,r5,(LC2_LF0)&0xffff
  135  0000116c  afa50000	sw	(r29),r5
  136  00001170  0c000268	jal	_Printf
  137  00001174  54000000	nop; not filled.
  138  00001178  23bd0008	addi	r29,r29,#8
  139  0000117c  8fa20000	lw	r2,0(r29)
  140  00001180  8fa30004	lw	r3,4(r29)
  141  00001184  8fa40008	lw	r4,8(r29)
  142  00001188  8fa5000c	lw	r5,12(r29)
  143  0000118c  8fdffff8	lw	r31,-8(r30)
  144  00001190  001ee820	add	r29,r0,r30
  145  00001194  8fdefffc	lw	r30,-4(r30)
  146  00001198  4be00000	jr	r31
  147  0000119c  54000000	nop
  148  000011a0          	.endproc _printArray
  149  000011a0          	.data
  150  00003016          	.align 2
  151  00003018          	LC3_LF0:
  152  00003018  48656c6c	.ascii "Hello from child PID: %d\n\000"
  152  0000301c  6f206672	
  152  00003020  6f6d2063	
  152  00003024  68696c64	
  152  00003028  20504944	
  152  0000302c  3a202564	
  152  00003030  0a00    	
  153  00003032          	.align 2
  154  00003034          	LC4_LF0:
  155  00003034  48656c6c	.ascii "Hello from parent PID: %d Child Pid %d\n\000"
  155  00003038  6f206672	
  155  0000303c  6f6d2070	
  155  00003040  6172656e	
  155  00003044  74205049	
  155  00003048  443a2025	
  155  0000304c  64204368	
  155  00003050  696c6420	
  155  00003054  50696420	
  155  00003058  25640a00	
  156  0000305c          	.text
  157  000011a0          	.align 2
  158  000011a0          	.proc _main
  159  000011a0          	.global _main
  160  000011a0          	_main:
  161                      ;  Function 'main'; 40 bytes of locals, 0 regs to save.
  162  000011a0  afbefffc	sw	-4(r29),r30; push fp
  163  000011a4  001df020	add	r30,r0,r29; fp = sp
  164  000011a8  afbffff8	sw	-8(r29),r31; push ret addr
  165  000011ac  2fbd0030	subui	r29,r29,#48; alloc local storage
  166  000011b0  0c0010f4	jal	___main
  167  000011b4  54000000	nop; not filled.
  168  000011b8  23c1ffd0	addi	r1,r30,#-48
  169  000011bc  23bdfff8	addi	r29,r29,#-8
  170  000011c0  afa10000	sw	(r29),r1
  171  000011c4  20050028	addi	r5,r0,#40
  172  000011c8  afa50004	sw	4(r29),r5
  173  000011cc  0c000fb8	jal	_bzero
  174  000011d0  54000000	nop; not filled.
  175  000011d4  23bd0008	addi	r29,r29,#8
  176  000011d8  20050000	addi	r5,r0,#0
  177  000011dc  afc5ffd0	sw	-48(r30),r5
  178  000011e0  0c000204	jal	_fork
  179  000011e4  54000000	nop; not filled.
  180  000011e8  00012020	add	r4,r0,r1
  181  000011ec  64810000	snei	r1,r4,#0
  182  000011f0  142000cc	bnez	r1,L26_LF0
  183  000011f4  54000000	nop; not filled.
  184  000011f8  20020000	addi	r2,r0,#0
  185  000011fc  23dffff8	addi	r31,r30,#-8
  186  00001200          	L30_LF0:
  187  00001200  afe2ffd8	sw	-40(r31),r2
  188  00001204  23ff0004	addi	r31,r31,#4
  189  00001208  20420001	addi	r2,r2,#1
  190  0000120c  70410009	slei	r1,r2,#9
  191  00001210  1420ffec	bnez	r1,L30_LF0
  192  00001214  54000000	nop; not filled.
  193  00001218  23c2ffd0	addi	r2,r30,#-48
  194  0000121c  23bdfff8	addi	r29,r29,#-8
  195  00001220  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  196  00001224  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  197  00001228  afa50000	sw	(r29),r5
  198  0000122c  0c0001ac	jal	_Printf
  199  00001230  54000000	nop; not filled.
  200  00001234  20030000	addi	r3,r0,#0
  201  00001238  23bd0008	addi	r29,r29,#8
  202  0000123c          	L36_LF0:
  203  0000123c  23bdfff8	addi	r29,r29,#-8
  204  00001240  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  205  00001244  24a53010	addui	r5,r5,(LC1_LF0)&0xffff
  206  00001248  afa50000	sw	(r29),r5
  207  0000124c  8c410000	lw	r1,(r2)
  208  00001250  afa10004	sw	4(r29),r1
  209  00001254  0c000184	jal	_Printf
  210  00001258  54000000	nop; not filled.
  211  0000125c  23bd0008	addi	r29,r29,#8
  212  00001260  20420004	addi	r2,r2,#4
  213  00001264  20630001	addi	r3,r3,#1
  214  00001268  6861000a	slti	r1,r3,#10
  215  0000126c  1420ffcc	bnez	r1,L36_LF0
  216  00001270  54000000	nop; not filled.
  217  00001274  23bdfff8	addi	r29,r29,#-8
  218  00001278  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  219  0000127c  24a53014	addui	r5,r5,(LC2_LF0)&0xffff
  220  00001280  afa50000	sw	(r29),r5
  221  00001284  0c000154	jal	_Printf
  222  00001288  54000000	nop; not filled.
  223  0000128c  23bd0008	addi	r29,r29,#8
  224  00001290  0c000160	jal	_getpid
  225  00001294  54000000	nop; not filled.
  226  00001298  23bdfff8	addi	r29,r29,#-8
  227  0000129c  3c050000	lhi	r5,((LC3_LF0)>>16)&0xffff
  228  000012a0  24a53018	addui	r5,r5,(LC3_LF0)&0xffff
  229  000012a4  afa50000	sw	(r29),r5
  230  000012a8  afa10004	sw	4(r29),r1
  231  000012ac  0c00012c	jal	_Printf
  232  000012b0  54000000	nop; not filled.
  233  000012b4  23bd0008	addi	r29,r29,#8
  234  000012b8  080000d0	j	L38_LF0
  235  000012bc  54000000	nop; not filled.
  236  000012c0          	L26_LF0:
  237  000012c0  20020000	addi	r2,r0,#0
  238  000012c4  20030000	addi	r3,r0,#0
  239  000012c8  23dffff8	addi	r31,r30,#-8
  240  000012cc          	L42_LF0:
  241  000012cc  afe3ffd8	sw	-40(r31),r3
  242  000012d0  20630002	addi	r3,r3,#2
  243  000012d4  23ff0004	addi	r31,r31,#4
  244  000012d8  20420001	addi	r2,r2,#1
  245  000012dc  70410009	slei	r1,r2,#9
  246  000012e0  1420ffe8	bnez	r1,L42_LF0
  247  000012e4  54000000	nop; not filled.
  248  000012e8  23c2ffd0	addi	r2,r30,#-48
  249  000012ec  23bdfff8	addi	r29,r29,#-8
  250  000012f0  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  251  000012f4  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  252  000012f8  afa50000	sw	(r29),r5
  253  000012fc  0c0000dc	jal	_Printf
  254  00001300  54000000	nop; not filled.
  255  00001304  20030000	addi	r3,r0,#0
  256  00001308  23bd0008	addi	r29,r29,#8
  257  0000130c          	L48_LF0:
  258  0000130c  23bdfff8	addi	r29,r29,#-8
  259  00001310  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  260  00001314  24a53010	addui	r5,r5,(LC1_LF0)&0xffff
  261  00001318  afa50000	sw	(r29),r5
  262  0000131c  8c410000	lw	r1,(r2)
  263  00001320  afa10004	sw	4(r29),r1
  264  00001324  0c0000b4	jal	_Printf
  265  00001328  54000000	nop; not filled.
  266  0000132c  23bd0008	addi	r29,r29,#8
  267  00001330  20420004	addi	r2,r2,#4
  268  00001334  20630001	addi	r3,r3,#1
  269  00001338  6861000a	slti	r1,r3,#10
  270  0000133c  1420ffcc	bnez	r1,L48_LF0
  271  00001340  54000000	nop; not filled.
  272  00001344  23bdfff8	addi	r29,r29,#-8
  273  00001348  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  274  0000134c  24a53014	addui	r5,r5,(LC2_LF0)&0xffff
  275  00001350  afa50000	sw	(r29),r5
  276  00001354  0c000084	jal	_Printf
  277  00001358  54000000	nop; not filled.
  278  0000135c  23bd0008	addi	r29,r29,#8
  279  00001360  0c000090	jal	_getpid
  280  00001364  54000000	nop; not filled.
  281  00001368  23bdfff0	addi	r29,r29,#-16
  282  0000136c  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  283  00001370  24a53034	addui	r5,r5,(LC4_LF0)&0xffff
  284  00001374  afa50000	sw	(r29),r5
  285  00001378  afa10004	sw	4(r29),r1
  286  0000137c  afa40008	sw	8(r29),r4
  287  00001380  0c000058	jal	_Printf
  288  00001384  54000000	nop; not filled.
  289  00001388  23bd0010	addi	r29,r29,#16
  290  0000138c          	L38_LF0:
  291  0000138c  0c000f0c	jal	_exit
  292  00001390  54000000	nop
  293  00001394          	.endproc _main
  294                      ;;;
  295                      ;;; Stub functions for DLX traps.
  296                      ;;;
  297                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  298                      ;;;
  299                      ;;; The traps such as Open and Close
  300                      ;;; (note the capital letters) are for use by user programs.  The traps
  301                      ;;; with names such as open and close (lower case) are for use by the OS.
  302                      ;;;
  305  00001394          	.align 2
  307                      ;;; The following are the traps to be used by user-level programs
  308                      ;;;
  310  00001394          	.align 2
  311  00001394          	.proc _Open
  312  00001394          	.global _Open
  313  00001394          	_Open:
  314                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  315                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  316                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  317  00001394  44000213	trap	#0x213
  318  00001398  4be00000	jr	r31
  319  0000139c  54000000	nop
  320  000013a0          	.endproc _Open
  322  000013a0          	.proc _Close
  323  000013a0          	.global _Close
  324  000013a0          	_Close:
  325  000013a0  44000214	trap	#0x214
  326  000013a4  4be00000	jr	r31
  327  000013a8  54000000	nop
  328  000013ac          	.endproc _Close
  330  000013ac          	.proc _Read
  331  000013ac          	.global _Read
  332  000013ac          	_Read:
  333  000013ac  44000210	trap	#0x210
  334  000013b0  4be00000	jr	r31
  335  000013b4  54000000	nop
  336  000013b8          	.endproc _Read
  338  000013b8          	.proc _Write
  339  000013b8          	.global _Write
  340  000013b8          	_Write:
  341  000013b8  44000211	trap	#0x211
  342  000013bc  4be00000	jr	r31
  343  000013c0  54000000	nop
  344  000013c4          	.endproc _Write
  346  000013c4          	.proc _Lseek
  347  000013c4          	.global _Lseek
  348  000013c4          	_Lseek:
  349  000013c4  44000212	trap	#0x212
  350  000013c8  4be00000	jr	r31
  351  000013cc  54000000	nop
  352  000013d0          	.endproc _Lseek
  354  000013d0          	.proc _Putchar
  355  000013d0          	.global _Putchar
  356  000013d0          	_Putchar:
  357  000013d0  44000280	trap	#0x280
  358  000013d4  4be00000	jr	r31
  359  000013d8  54000000	nop
  360  000013dc          	.endproc _Putchar
  362  000013dc          	.proc _Printf
  363  000013dc          	.global _Printf
  364  000013dc          	_Printf:
  365  000013dc  44000201	trap	#0x201
  366  000013e0  4be00000	jr	r31
  367  000013e4  54000000	nop
  368  000013e8          	.endproc _Printf
  370  000013e8          	.proc _fork
  371  000013e8          	.global _fork
  372  000013e8          	_fork:
  373  000013e8  44000430	trap	#0x430
  374  000013ec  4be00000	jr	r31
  375  000013f0  54000000	nop
  376  000013f4          	.endproc _fork
  378  000013f4          	.proc _getpid
  379  000013f4          	.global _getpid
  380  000013f4          	_getpid:
  381  000013f4  44000431	trap	#0x431
  382  000013f8  4be00000	jr	r31
  383  000013fc  54000000	nop
  384  00001400          	.endproc _getpid
  386  00001400          	.proc _process_create
  387  00001400          	.global _process_create
  388  00001400          	_process_create:
  389  00001400  44000432	trap	#0x432
  390  00001404  4be00000	jr	r31
  391  00001408  54000000	nop
  392  0000140c          	.endproc _process_create
  394  0000140c          	.proc _shmget
  395  0000140c          	.global _shmget
  396  0000140c          	_shmget:
  397  0000140c  44000440	trap	#0x440
  398  00001410  4be00000	jr	r31
  399  00001414  54000000	nop
  400  00001418          	.endproc _shmget
  402  00001418          	.proc _shmat
  403  00001418          	.global _shmat
  404  00001418          	_shmat:
  405  00001418  44000441	trap	#0x441
  406  0000141c  4be00000	jr	r31
  407  00001420  54000000	nop
  408  00001424          	.endproc _shmat
  410  00001424          	.proc _sem_create
  411  00001424          	.global _sem_create
  412  00001424          	_sem_create:
  413  00001424  44000450	trap	#0x450
  414  00001428  4be00000	jr	r31
  415  0000142c  54000000	nop
  416  00001430          	.endproc _sem_create
  418  00001430          	.proc _sem_wait
  419  00001430          	.global _sem_wait
  420  00001430          	_sem_wait:
  421  00001430  44000451	trap	#0x451
  422  00001434  4be00000	jr	r31
  423  00001438  54000000	nop
  424  0000143c          	.endproc _sem_wait
  426  0000143c          	.proc _sem_signal
  427  0000143c          	.global _sem_signal
  428  0000143c          	_sem_signal:
  429  0000143c  44000452	trap	#0x452
  430  00001440  4be00000	jr	r31
  431  00001444  54000000	nop
  432  00001448          	.endproc _sem_signal
  434  00001448          	.proc _lock_create
  435  00001448          	.global _lock_create
  436  00001448          	_lock_create:
  437  00001448  44000453	trap	#0x453
  438  0000144c  4be00000	jr	r31
  439  00001450  54000000	nop
  440  00001454          	.endproc _lock_create
  442  00001454          	.proc _lock_acquire
  443  00001454          	.global _lock_acquire
  444  00001454          	_lock_acquire:
  445  00001454  44000454	trap	#0x454
  446  00001458  4be00000	jr	r31
  447  0000145c  54000000	nop
  448  00001460          	.endproc _lock_acquire
  450  00001460          	.proc _lock_release
  451  00001460          	.global _lock_release
  452  00001460          	_lock_release:
  453  00001460  44000455	trap	#0x455
  454  00001464  4be00000	jr	r31
  455  00001468  54000000	nop
  456  0000146c          	.endproc _lock_release
  458  0000146c          	.proc _cond_create
  459  0000146c          	.global _cond_create
  460  0000146c          	_cond_create:
  461  0000146c  44000456	trap	#0x456
  462  00001470  4be00000	jr	r31
  463  00001474  54000000	nop
  464  00001478          	.endproc _cond_create
  466  00001478          	.proc _cond_wait
  467  00001478          	.global _cond_wait
  468  00001478          	_cond_wait:
  469  00001478  44000457	trap	#0x457
  470  0000147c  4be00000	jr	r31
  471  00001480  54000000	nop
  472  00001484          	.endproc _cond_wait
  474  00001484          	.proc _cond_signal
  475  00001484          	.global _cond_signal
  476  00001484          	_cond_signal:
  477  00001484  44000458	trap	#0x458
  478  00001488  4be00000	jr	r31
  479  0000148c  54000000	nop
  480  00001490          	.endproc _cond_signal
  482  00001490          	.proc _cond_broadcast
  483  00001490          	.global _cond_broadcast
  484  00001490          	_cond_broadcast:
  485  00001490  44000459	trap	#0x459
  486  00001494  4be00000	jr	r31
  487  00001498  54000000	nop
  488  0000149c          	.endproc _cond_broadcast
  490  0000149c          	.proc _mbox_create
  491  0000149c          	.global _mbox_create
  492  0000149c          	_mbox_create:
  493  0000149c  44000460	trap	#0x460
  494  000014a0  4be00000	jr	r31
  495  000014a4  54000000	nop
  496  000014a8          	.endproc _mbox_create
  498  000014a8          	.proc _mbox_open
  499  000014a8          	.global _mbox_open
  500  000014a8          	_mbox_open:
  501  000014a8  44000461	trap	#0x461
  502  000014ac  4be00000	jr	r31
  503  000014b0  54000000	nop
  504  000014b4          	.endproc _mbox_open
  506  000014b4          	.proc _mbox_close
  507  000014b4          	.global _mbox_close
  508  000014b4          	_mbox_close:
  509  000014b4  44000462	trap	#0x462
  510  000014b8  4be00000	jr	r31
  511  000014bc  54000000	nop
  512  000014c0          	.endproc _mbox_close
  514  000014c0          	.proc _mbox_send
  515  000014c0          	.global _mbox_send
  516  000014c0          	_mbox_send:
  517  000014c0  44000463	trap	#0x463
  518  000014c4  4be00000	jr	r31
  519  000014c8  54000000	nop
  520  000014cc          	.endproc _mbox_send
  522  000014cc          	.proc _mbox_recv
  523  000014cc          	.global _mbox_recv
  524  000014cc          	_mbox_recv:
  525  000014cc  44000464	trap	#0x464
  526  000014d0  4be00000	jr	r31
  527  000014d4  54000000	nop
  528  000014d8          	.endproc _mbox_recv
  530  000014d8          	.proc _sleep
  531  000014d8          	.global _sleep
  532  000014d8          	_sleep:
  533  000014d8  44000465	trap	#0x465
  534  000014dc  4be00000	jr	r31
  535  000014e0  54000000	nop
  536  000014e4          	.endproc _sleep
  538  000014e4          	.proc _yield
  539  000014e4          	.global _yield
  540  000014e4          	_yield:
  541  000014e4  44000466	trap	#0x466
  542  000014e8  4be00000	jr	r31
  543  000014ec  54000000	nop
  544  000014f0          	.endproc _yield
  547  000014f0          	.proc _Exit
  548  000014f0          	.global _Exit
  549  000014f0          	_Exit:
  550  000014f0  44000500	trap	#0x500
  551  000014f4  4be00000	jr	r31
  552  000014f8  54000000	nop
  553  000014fc          	.endproc _Exit
  556  000014fc          	.proc _malloc
  557  000014fc          	.global _malloc
  558  000014fc          	_malloc:
  559  000014fc  44000467	trap	#0x467
  560  00001500  4be00000	jr	r31
  561  00001504          	.endproc _malloc
  564  00001504          	.proc _mfree
  565  00001504          	.global _mfree
  566  00001504          	_mfree:
  567  00001504  44000468	trap	#0x468
  568  00001508  4be00000	jr	r31
  569  0000150c          	.endproc _mfree
  570                      ; Compiled by GCC
  572  0000150c          	.align 2
  573  0000150c          	.proc _isspace
  574  0000150c          	.global _isspace
  575  0000150c          	_isspace:
  576                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  577  0000150c  afbefffc	sw	-4(r29),r30; push fp
  578  00001510  001df020	add	r30,r0,r29; fp = sp
  579  00001514  afbffff8	sw	-8(r29),r31; push ret addr
  580  00001518  2fbd0018	subui	r29,r29,#24; alloc local storage
  581  0000151c  afa20000	sw	0(r29),r2
  582  00001520  afa30004	sw	4(r29),r3
  583  00001524  afa40008	sw	8(r29),r4
  584  00001528  83c20003	lb	r2,3(r30)
  585  0000152c  20010000	addi	r1,r0,#0
  586  00001530  304300ff	andi	r3,r2,#0x00ff
  587  00001534  60640020	seqi	r4,r3,#32
  588  00001538  1480002c	bnez	r4,L3_LF2
  589  0000153c  54000000	nop; delay slot nop
  590  00001540  304300ff	andi	r3,r2,#0x00ff
  591  00001544  60640009	seqi	r4,r3,#9
  592  00001548  1480001c	bnez	r4,L3_LF2
  593  0000154c  54000000	nop; delay slot nop
  594  00001550  304300ff	andi	r3,r2,#0x00ff
  595  00001554  6064000a	seqi	r4,r3,#10
  596  00001558  1480000c	bnez	r4,L3_LF2
  597  0000155c  54000000	nop; delay slot nop
  598  00001560  08000008	j	L2_LF2
  599  00001564  54000000	nop; delay slot nop
  600  00001568          	L3_LF2:
  601  00001568  20010001	addi	r1,r0,#1
  602  0000156c          	L2_LF2:
  603  0000156c  08000004	j	L1_LF2
  604  00001570  54000000	nop; delay slot nop
  605  00001574          	L1_LF2:
  606  00001574  8fa20000	lw	r2,0(r29)
  607  00001578  8fa30004	lw	r3,4(r29)
  608  0000157c  8fa40008	lw	r4,8(r29)
  609  00001580  8fdffff8	lw	r31,-8(r30)
  610  00001584  001ee820	add	r29,r0,r30
  611  00001588  8fdefffc	lw	r30,-4(r30)
  612  0000158c  4be00000	jr	r31
  613  00001590  54000000	nop
  614  00001594          	.endproc _isspace
  615  00001594          	.align 2
  616  00001594          	.proc _isxdigit
  617  00001594          	.global _isxdigit
  618  00001594          	_isxdigit:
  619                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  620  00001594  afbefffc	sw	-4(r29),r30; push fp
  621  00001598  001df020	add	r30,r0,r29; fp = sp
  622  0000159c  afbffff8	sw	-8(r29),r31; push ret addr
  623  000015a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  624  000015a4  afa20000	sw	0(r29),r2
  625  000015a8  afa30004	sw	4(r29),r3
  626  000015ac  afa40008	sw	8(r29),r4
  627  000015b0  83c20003	lb	r2,3(r30)
  628  000015b4  20010000	addi	r1,r0,#0
  629  000015b8  304300ff	andi	r3,r2,#0x00ff
  630  000015bc  6c64002f	sgtui	r4,r3,#47
  631  000015c0  1080001c	beqz	r4,L7_LF2
  632  000015c4  54000000	nop; delay slot nop
  633  000015c8  304300ff	andi	r3,r2,#0x00ff
  634  000015cc  70640039	sleui	r4,r3,#57
  635  000015d0  1480005c	bnez	r4,L6_LF2
  636  000015d4  54000000	nop; delay slot nop
  637  000015d8  08000004	j	L7_LF2
  638  000015dc  54000000	nop; delay slot nop
  639  000015e0          	L7_LF2:
  640  000015e0  304300ff	andi	r3,r2,#0x00ff
  641  000015e4  6c640060	sgtui	r4,r3,#96
  642  000015e8  1080001c	beqz	r4,L8_LF2
  643  000015ec  54000000	nop; delay slot nop
  644  000015f0  304300ff	andi	r3,r2,#0x00ff
  645  000015f4  70640066	sleui	r4,r3,#102
  646  000015f8  14800034	bnez	r4,L6_LF2
  647  000015fc  54000000	nop; delay slot nop
  648  00001600  08000004	j	L8_LF2
  649  00001604  54000000	nop; delay slot nop
  650  00001608          	L8_LF2:
  651  00001608  304300ff	andi	r3,r2,#0x00ff
  652  0000160c  6c640040	sgtui	r4,r3,#64
  653  00001610  10800020	beqz	r4,L5_LF2
  654  00001614  54000000	nop; delay slot nop
  655  00001618  304300ff	andi	r3,r2,#0x00ff
  656  0000161c  70640041	sleui	r4,r3,#65
  657  00001620  1480000c	bnez	r4,L6_LF2
  658  00001624  54000000	nop; delay slot nop
  659  00001628  08000008	j	L5_LF2
  660  0000162c  54000000	nop; delay slot nop
  661  00001630          	L6_LF2:
  662  00001630  20010001	addi	r1,r0,#1
  663  00001634          	L5_LF2:
  664  00001634  08000004	j	L4_LF2
  665  00001638  54000000	nop; delay slot nop
  666  0000163c          	L4_LF2:
  667  0000163c  8fa20000	lw	r2,0(r29)
  668  00001640  8fa30004	lw	r3,4(r29)
  669  00001644  8fa40008	lw	r4,8(r29)
  670  00001648  8fdffff8	lw	r31,-8(r30)
  671  0000164c  001ee820	add	r29,r0,r30
  672  00001650  8fdefffc	lw	r30,-4(r30)
  673  00001654  4be00000	jr	r31
  674  00001658  54000000	nop
  675  0000165c          	.endproc _isxdigit
  676  0000165c          	.align 2
  677  0000165c          	.proc _dstrcpy
  678  0000165c          	.global _dstrcpy
  679  0000165c          	_dstrcpy:
  680                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  681  0000165c  afbefffc	sw	-4(r29),r30; push fp
  682  00001660  001df020	add	r30,r0,r29; fp = sp
  683  00001664  afbffff8	sw	-8(r29),r31; push ret addr
  684  00001668  2fbd0018	subui	r29,r29,#24; alloc local storage
  685  0000166c  afa20000	sw	0(r29),r2
  686  00001670  afa30004	sw	4(r29),r3
  687  00001674  8fc10000	lw	r1,(r30)
  688  00001678  afc1fff4	sw	-12(r30),r1
  689  0000167c          	L10_LF2:
  690  0000167c  8fc10000	lw	r1,(r30)
  691  00001680  20220001	addi	r2,r1,#1
  692  00001684  afc20000	sw	(r30),r2
  693  00001688  8fc20004	lw	r2,4(r30)
  694  0000168c  20430001	addi	r3,r2,#1
  695  00001690  afc30004	sw	4(r30),r3
  696  00001694  80420000	lb	r2,(r2)
  697  00001698  a0220000	sb	(r1),r2
  698  0000169c  a3c2fff3	sb	-13(r30),r2
  699  000016a0          	L12_LF2:
  700  000016a0  93c1fff3	lbu	r1,-13(r30)
  701  000016a4  64220000	snei	r2,r1,#0
  702  000016a8  1440000c	bnez	r2,L13_LF2
  703  000016ac  54000000	nop; delay slot nop
  704  000016b0  0800000c	j	L11_LF2
  705  000016b4  54000000	nop; delay slot nop
  706  000016b8          	L13_LF2:
  707  000016b8  0bffffc0	j	L10_LF2
  708  000016bc  54000000	nop; delay slot nop
  709  000016c0          	L11_LF2:
  710  000016c0  8fc1fff4	lw	r1,-12(r30)
  711  000016c4  08000004	j	L9_LF2
  712  000016c8  54000000	nop; delay slot nop
  713  000016cc          	L9_LF2:
  714  000016cc  8fa20000	lw	r2,0(r29)
  715  000016d0  8fa30004	lw	r3,4(r29)
  716  000016d4  8fdffff8	lw	r31,-8(r30)
  717  000016d8  001ee820	add	r29,r0,r30
  718  000016dc  8fdefffc	lw	r30,-4(r30)
  719  000016e0  4be00000	jr	r31
  720  000016e4  54000000	nop
  721  000016e8          	.endproc _dstrcpy
  722  000016e8          	.align 2
  723  000016e8          	.proc _dstrncpy
  724  000016e8          	.global _dstrncpy
  725  000016e8          	_dstrncpy:
  726                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  727  000016e8  afbefffc	sw	-4(r29),r30; push fp
  728  000016ec  001df020	add	r30,r0,r29; fp = sp
  729  000016f0  afbffff8	sw	-8(r29),r31; push ret addr
  730  000016f4  2fbd0018	subui	r29,r29,#24; alloc local storage
  731  000016f8  afa20000	sw	0(r29),r2
  732  000016fc  afa30004	sw	4(r29),r3
  733  00001700  8fc10000	lw	r1,(r30)
  734  00001704  afc1fff4	sw	-12(r30),r1
  735  00001708          	L15_LF2:
  736  00001708  8fc10008	lw	r1,8(r30)
  737  0000170c  2022ffff	addi	r2,r1,#-1
  738  00001710  afc20008	sw	8(r30),r2
  739  00001714  70210000	slei	r1,r1,#0
  740  00001718  1020000c	beqz	r1,L18_LF2
  741  0000171c  54000000	nop; delay slot nop
  742  00001720  08000048	j	L16_LF2
  743  00001724  54000000	nop; delay slot nop
  744  00001728          	L18_LF2:
  745  00001728  8fc10000	lw	r1,(r30)
  746  0000172c  20220001	addi	r2,r1,#1
  747  00001730  afc20000	sw	(r30),r2
  748  00001734  8fc20004	lw	r2,4(r30)
  749  00001738  20430001	addi	r3,r2,#1
  750  0000173c  afc30004	sw	4(r30),r3
  751  00001740  80420000	lb	r2,(r2)
  752  00001744  a0220000	sb	(r1),r2
  753  00001748  a3c2fff3	sb	-13(r30),r2
  754  0000174c          	L17_LF2:
  755  0000174c  93c1fff3	lbu	r1,-13(r30)
  756  00001750  64220000	snei	r2,r1,#0
  757  00001754  1440000c	bnez	r2,L19_LF2
  758  00001758  54000000	nop; delay slot nop
  759  0000175c  0800000c	j	L16_LF2
  760  00001760  54000000	nop; delay slot nop
  761  00001764          	L19_LF2:
  762  00001764  0bffffa0	j	L15_LF2
  763  00001768  54000000	nop; delay slot nop
  764  0000176c          	L16_LF2:
  765  0000176c  8fc1fff4	lw	r1,-12(r30)
  766  00001770  08000004	j	L14_LF2
  767  00001774  54000000	nop; delay slot nop
  768  00001778          	L14_LF2:
  769  00001778  8fa20000	lw	r2,0(r29)
  770  0000177c  8fa30004	lw	r3,4(r29)
  771  00001780  8fdffff8	lw	r31,-8(r30)
  772  00001784  001ee820	add	r29,r0,r30
  773  00001788  8fdefffc	lw	r30,-4(r30)
  774  0000178c  4be00000	jr	r31
  775  00001790  54000000	nop
  776  00001794          	.endproc _dstrncpy
  777  00001794          	.align 2
  778  00001794          	.proc _dstrcat
  779  00001794          	.global _dstrcat
  780  00001794          	_dstrcat:
  781                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  782  00001794  afbefffc	sw	-4(r29),r30; push fp
  783  00001798  001df020	add	r30,r0,r29; fp = sp
  784  0000179c  afbffff8	sw	-8(r29),r31; push ret addr
  785  000017a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  786  000017a4  afa20000	sw	0(r29),r2
  787  000017a8  8fc10000	lw	r1,(r30)
  788  000017ac  afc1fff4	sw	-12(r30),r1
  789  000017b0          	L21_LF2:
  790  000017b0  8fc10000	lw	r1,(r30)
  791  000017b4  90220000	lbu	r2,(r1)
  792  000017b8  64410000	snei	r1,r2,#0
  793  000017bc  1420000c	bnez	r1,L23_LF2
  794  000017c0  54000000	nop; delay slot nop
  795  000017c4  0800001c	j	L22_LF2
  796  000017c8  54000000	nop; delay slot nop
  797  000017cc          	L23_LF2:
  798  000017cc  8fc20000	lw	r2,(r30)
  799  000017d0  20410001	addi	r1,r2,#1
  800  000017d4  00011020	add	r2,r0,r1
  801  000017d8  afc20000	sw	(r30),r2
  802  000017dc  0bffffd0	j	L21_LF2
  803  000017e0  54000000	nop; delay slot nop
  804  000017e4          	L22_LF2:
  805  000017e4  23bdfff8	addi	r29,r29,#-8
  806  000017e8  001d0820	add	r1,r0,r29
  807  000017ec  8fc20000	lw	r2,(r30)
  808  000017f0  ac220000	sw	(r1),r2
  809  000017f4  8fc20004	lw	r2,4(r30)
  810  000017f8  ac220004	sw	4(r1),r2
  811  000017fc  0ffffe5c	jal	_dstrcpy
  812  00001800  54000000	nop; delay slot nop
  813  00001804  23bd0008	addi	r29,r29,#8
  814  00001808  8fc1fff4	lw	r1,-12(r30)
  815  0000180c  08000004	j	L20_LF2
  816  00001810  54000000	nop; delay slot nop
  817  00001814          	L20_LF2:
  818  00001814  8fa20000	lw	r2,0(r29)
  819  00001818  8fdffff8	lw	r31,-8(r30)
  820  0000181c  001ee820	add	r29,r0,r30
  821  00001820  8fdefffc	lw	r30,-4(r30)
  822  00001824  4be00000	jr	r31
  823  00001828  54000000	nop
  824  0000182c          	.endproc _dstrcat
  825  0000182c          	.align 2
  826  0000182c          	.proc _dstrncmp
  827  0000182c          	.global _dstrncmp
  828  0000182c          	_dstrncmp:
  829                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  830  0000182c  afbefffc	sw	-4(r29),r30; push fp
  831  00001830  001df020	add	r30,r0,r29; fp = sp
  832  00001834  afbffff8	sw	-8(r29),r31; push ret addr
  833  00001838  2fbd0018	subui	r29,r29,#24; alloc local storage
  834  0000183c  afa20000	sw	0(r29),r2
  835  00001840  afa30004	sw	4(r29),r3
  836  00001844  54000000	nop
  837  00001848  20010000	addi	r1,r0,#0
  838  0000184c  afc1fff4	sw	-12(r30),r1
  839  00001850          	L25_LF2:
  840  00001850  8fc1fff4	lw	r1,-12(r30)
  841  00001854  8fc20008	lw	r2,8(r30)
  842  00001858  0022082a	slt	r1,r1,r2
  843  0000185c  1420000c	bnez	r1,L28_LF2
  844  00001860  54000000	nop; delay slot nop
  845  00001864  08000088	j	L26_LF2
  846  00001868  54000000	nop; delay slot nop
  847  0000186c          	L28_LF2:
  848  0000186c  8fc10004	lw	r1,4(r30)
  849  00001870  90220000	lbu	r2,(r1)
  850  00001874  64410000	snei	r1,r2,#0
  851  00001878  14200018	bnez	r1,L29_LF2
  852  0000187c  54000000	nop; delay slot nop
  853  00001880  20010000	addi	r1,r0,#0
  854  00001884  080000d8	j	L24_LF2
  855  00001888  54000000	nop; delay slot nop
  856  0000188c  08000028	j	L30_LF2
  857  00001890  54000000	nop; delay slot nop
  858  00001894          	L29_LF2:
  859  00001894  8fc10000	lw	r1,(r30)
  860  00001898  8fc20004	lw	r2,4(r30)
  861  0000189c  90210000	lbu	r1,(r1)
  862  000018a0  90420000	lbu	r2,(r2)
  863  000018a4  00220829	sne	r1,r1,r2
  864  000018a8  1020000c	beqz	r1,L30_LF2
  865  000018ac  54000000	nop; delay slot nop
  866  000018b0  0800003c	j	L26_LF2
  867  000018b4  54000000	nop; delay slot nop
  868  000018b8          	L31_LF2:
  869  000018b8          	L30_LF2:
  870  000018b8  8fc20000	lw	r2,(r30)
  871  000018bc  20410001	addi	r1,r2,#1
  872  000018c0  00011020	add	r2,r0,r1
  873  000018c4  afc20000	sw	(r30),r2
  874  000018c8  8fc20004	lw	r2,4(r30)
  875  000018cc  20410001	addi	r1,r2,#1
  876  000018d0  00011020	add	r2,r0,r1
  877  000018d4  afc20004	sw	4(r30),r2
  878  000018d8          	L27_LF2:
  879  000018d8  8fc2fff4	lw	r2,-12(r30)
  880  000018dc  20410001	addi	r1,r2,#1
  881  000018e0  00011020	add	r2,r0,r1
  882  000018e4  afc2fff4	sw	-12(r30),r2
  883  000018e8  0bffff64	j	L25_LF2
  884  000018ec  54000000	nop; delay slot nop
  885  000018f0          	L26_LF2:
  886  000018f0  8fc1fff4	lw	r1,-12(r30)
  887  000018f4  8fc20008	lw	r2,8(r30)
  888  000018f8  00220828	seq	r1,r1,r2
  889  000018fc  10200018	beqz	r1,L32_LF2
  890  00001900  54000000	nop; delay slot nop
  891  00001904  20010000	addi	r1,r0,#0
  892  00001908  08000054	j	L24_LF2
  893  0000190c  54000000	nop; delay slot nop
  894  00001910  0800004c	j	L33_LF2
  895  00001914  54000000	nop; delay slot nop
  896  00001918          	L32_LF2:
  897  00001918  8fc20000	lw	r2,(r30)
  898  0000191c  90410000	lbu	r1,(r2)
  899  00001920  8fc20004	lw	r2,4(r30)
  900  00001924  90430000	lbu	r3,(r2)
  901  00001928  00230822	sub	r1,r1,r3
  902  0000192c  74220000	sgei	r2,r1,#0
  903  00001930  10400020	beqz	r2,L34_LF2
  904  00001934  54000000	nop; delay slot nop
  905  00001938  8fc10000	lw	r1,(r30)
  906  0000193c  8fc20004	lw	r2,4(r30)
  907  00001940  90210000	lbu	r1,(r1)
  908  00001944  90420000	lbu	r2,(r2)
  909  00001948  00220829	sne	r1,r1,r2
  910  0000194c  08000008	j	L35_LF2
  911  00001950  54000000	nop; delay slot nop
  912  00001954          	L34_LF2:
  913  00001954  2001ffff	addi	r1,r0,#-1
  914  00001958          	L35_LF2:
  915  00001958  08000004	j	L24_LF2
  916  0000195c  54000000	nop; delay slot nop
  917  00001960          	L33_LF2:
  918  00001960          	L24_LF2:
  919  00001960  8fa20000	lw	r2,0(r29)
  920  00001964  8fa30004	lw	r3,4(r29)
  921  00001968  8fdffff8	lw	r31,-8(r30)
  922  0000196c  001ee820	add	r29,r0,r30
  923  00001970  8fdefffc	lw	r30,-4(r30)
  924  00001974  4be00000	jr	r31
  925  00001978  54000000	nop
  926  0000197c          	.endproc _dstrncmp
  927  0000197c          	.align 2
  928  0000197c          	.proc _dstrlen
  929  0000197c          	.global _dstrlen
  930  0000197c          	_dstrlen:
  931                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  932  0000197c  afbefffc	sw	-4(r29),r30; push fp
  933  00001980  001df020	add	r30,r0,r29; fp = sp
  934  00001984  afbffff8	sw	-8(r29),r31; push ret addr
  935  00001988  2fbd0018	subui	r29,r29,#24; alloc local storage
  936  0000198c  afa20000	sw	0(r29),r2
  937  00001990  20010000	addi	r1,r0,#0
  938  00001994  afc1fff4	sw	-12(r30),r1
  939  00001998          	L37_LF2:
  940  00001998  8fc10000	lw	r1,(r30)
  941  0000199c  20220001	addi	r2,r1,#1
  942  000019a0  afc20000	sw	(r30),r2
  943  000019a4  90210000	lbu	r1,(r1)
  944  000019a8  64220000	snei	r2,r1,#0
  945  000019ac  1440000c	bnez	r2,L39_LF2
  946  000019b0  54000000	nop; delay slot nop
  947  000019b4  0800001c	j	L38_LF2
  948  000019b8  54000000	nop; delay slot nop
  949  000019bc          	L39_LF2:
  950  000019bc  8fc2fff4	lw	r2,-12(r30)
  951  000019c0  20410001	addi	r1,r2,#1
  952  000019c4  00011020	add	r2,r0,r1
  953  000019c8  afc2fff4	sw	-12(r30),r2
  954  000019cc  0bffffc8	j	L37_LF2
  955  000019d0  54000000	nop; delay slot nop
  956  000019d4          	L38_LF2:
  957  000019d4  8fc1fff4	lw	r1,-12(r30)
  958  000019d8  08000004	j	L36_LF2
  959  000019dc  54000000	nop; delay slot nop
  960  000019e0          	L36_LF2:
  961  000019e0  8fa20000	lw	r2,0(r29)
  962  000019e4  8fdffff8	lw	r31,-8(r30)
  963  000019e8  001ee820	add	r29,r0,r30
  964  000019ec  8fdefffc	lw	r30,-4(r30)
  965  000019f0  4be00000	jr	r31
  966  000019f4  54000000	nop
  967  000019f8          	.endproc _dstrlen
  968  000019f8          	.align 2
  969  000019f8          	.proc _dstrstr
  970  000019f8          	.global _dstrstr
  971  000019f8          	_dstrstr:
  972                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  973  000019f8  afbefffc	sw	-4(r29),r30; push fp
  974  000019fc  001df020	add	r30,r0,r29; fp = sp
  975  00001a00  afbffff8	sw	-8(r29),r31; push ret addr
  976  00001a04  2fbd0018	subui	r29,r29,#24; alloc local storage
  977  00001a08  afa20000	sw	0(r29),r2
  978  00001a0c  23bdfff8	addi	r29,r29,#-8
  979  00001a10  001d0820	add	r1,r0,r29
  980  00001a14  8fc20004	lw	r2,4(r30)
  981  00001a18  ac220000	sw	(r1),r2
  982  00001a1c  0fffff5c	jal	_dstrlen
  983  00001a20  54000000	nop; delay slot nop
  984  00001a24  23bd0008	addi	r29,r29,#8
  985  00001a28  afc1fff4	sw	-12(r30),r1
  986  00001a2c          	L41_LF2:
  987  00001a2c  8fc10000	lw	r1,(r30)
  988  00001a30  90220000	lbu	r2,(r1)
  989  00001a34  64410000	snei	r1,r2,#0
  990  00001a38  1420000c	bnez	r1,L43_LF2
  991  00001a3c  54000000	nop; delay slot nop
  992  00001a40  08000060	j	L42_LF2
  993  00001a44  54000000	nop; delay slot nop
  994  00001a48          	L43_LF2:
  995  00001a48  23bdfff0	addi	r29,r29,#-16
  996  00001a4c  001d0820	add	r1,r0,r29
  997  00001a50  8fc20000	lw	r2,(r30)
  998  00001a54  ac220000	sw	(r1),r2
  999  00001a58  8fc20004	lw	r2,4(r30)
 1000  00001a5c  ac220004	sw	4(r1),r2
 1001  00001a60  8fc2fff4	lw	r2,-12(r30)
 1002  00001a64  ac220008	sw	8(r1),r2
 1003  00001a68  0ffffdc0	jal	_dstrncmp
 1004  00001a6c  54000000	nop; delay slot nop
 1005  00001a70  23bd0010	addi	r29,r29,#16
 1006  00001a74  64220000	snei	r2,r1,#0
 1007  00001a78  14400010	bnez	r2,L44_LF2
 1008  00001a7c  54000000	nop; delay slot nop
 1009  00001a80  8fc10000	lw	r1,(r30)
 1010  00001a84  08000028	j	L40_LF2
 1011  00001a88  54000000	nop; delay slot nop
 1012  00001a8c          	L44_LF2:
 1013  00001a8c  8fc20000	lw	r2,(r30)
 1014  00001a90  20410001	addi	r1,r2,#1
 1015  00001a94  00011020	add	r2,r0,r1
 1016  00001a98  afc20000	sw	(r30),r2
 1017  00001a9c  0bffff8c	j	L41_LF2
 1018  00001aa0  54000000	nop; delay slot nop
 1019  00001aa4          	L42_LF2:
 1020  00001aa4  20010000	addi	r1,r0,#0
 1021  00001aa8  08000004	j	L40_LF2
 1022  00001aac  54000000	nop; delay slot nop
 1023  00001ab0          	L40_LF2:
 1024  00001ab0  8fa20000	lw	r2,0(r29)
 1025  00001ab4  8fdffff8	lw	r31,-8(r30)
 1026  00001ab8  001ee820	add	r29,r0,r30
 1027  00001abc  8fdefffc	lw	r30,-4(r30)
 1028  00001ac0  4be00000	jr	r31
 1029  00001ac4  54000000	nop
 1030  00001ac8          	.endproc _dstrstr
 1031  00001ac8          	.align 2
 1032  00001ac8          	.proc _dmindex
 1033  00001ac8          	.global _dmindex
 1034  00001ac8          	_dmindex:
 1035                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1036  00001ac8  afbefffc	sw	-4(r29),r30; push fp
 1037  00001acc  001df020	add	r30,r0,r29; fp = sp
 1038  00001ad0  afbffff8	sw	-8(r29),r31; push ret addr
 1039  00001ad4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1040  00001ad8  afa20000	sw	0(r29),r2
 1041  00001adc  54000000	nop
 1042  00001ae0          	L46_LF2:
 1043  00001ae0  8fc10000	lw	r1,(r30)
 1044  00001ae4  90220000	lbu	r2,(r1)
 1045  00001ae8  64410000	snei	r1,r2,#0
 1046  00001aec  1420000c	bnez	r1,L48_LF2
 1047  00001af0  54000000	nop; delay slot nop
 1048  00001af4  08000070	j	L47_LF2
 1049  00001af8  54000000	nop; delay slot nop
 1050  00001afc          	L48_LF2:
 1051  00001afc  8fc10004	lw	r1,4(r30)
 1052  00001b00  afc1fff4	sw	-12(r30),r1
 1053  00001b04          	L49_LF2:
 1054  00001b04  8fc1fff4	lw	r1,-12(r30)
 1055  00001b08  90220000	lbu	r2,(r1)
 1056  00001b0c  64410000	snei	r1,r2,#0
 1057  00001b10  1420000c	bnez	r1,L52_LF2
 1058  00001b14  54000000	nop; delay slot nop
 1059  00001b18  08000044	j	L50_LF2
 1060  00001b1c  54000000	nop; delay slot nop
 1061  00001b20          	L52_LF2:
 1062  00001b20  8fc10000	lw	r1,(r30)
 1063  00001b24  8fc2fff4	lw	r2,-12(r30)
 1064  00001b28  90210000	lbu	r1,(r1)
 1065  00001b2c  90420000	lbu	r2,(r2)
 1066  00001b30  00220828	seq	r1,r1,r2
 1067  00001b34  10200010	beqz	r1,L51_LF2
 1068  00001b38  54000000	nop; delay slot nop
 1069  00001b3c  8fc10000	lw	r1,(r30)
 1070  00001b40  08000030	j	L45_LF2
 1071  00001b44  54000000	nop; delay slot nop
 1072  00001b48          	L53_LF2:
 1073  00001b48          	L51_LF2:
 1074  00001b48  8fc2fff4	lw	r2,-12(r30)
 1075  00001b4c  20410001	addi	r1,r2,#1
 1076  00001b50  00011020	add	r2,r0,r1
 1077  00001b54  afc2fff4	sw	-12(r30),r2
 1078  00001b58  0bffffa8	j	L49_LF2
 1079  00001b5c  54000000	nop; delay slot nop
 1080  00001b60          	L50_LF2:
 1081  00001b60  0bffff7c	j	L46_LF2
 1082  00001b64  54000000	nop; delay slot nop
 1083  00001b68          	L47_LF2:
 1084  00001b68  20010000	addi	r1,r0,#0
 1085  00001b6c  08000004	j	L45_LF2
 1086  00001b70  54000000	nop; delay slot nop
 1087  00001b74          	L45_LF2:
 1088  00001b74  8fa20000	lw	r2,0(r29)
 1089  00001b78  8fdffff8	lw	r31,-8(r30)
 1090  00001b7c  001ee820	add	r29,r0,r30
 1091  00001b80  8fdefffc	lw	r30,-4(r30)
 1092  00001b84  4be00000	jr	r31
 1093  00001b88  54000000	nop
 1094  00001b8c          	.endproc _dmindex
 1095  00001b8c          	.align 2
 1096  00001b8c          	.proc _dindex
 1097  00001b8c          	.global _dindex
 1098  00001b8c          	_dindex:
 1099                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1100  00001b8c  afbefffc	sw	-4(r29),r30; push fp
 1101  00001b90  001df020	add	r30,r0,r29; fp = sp
 1102  00001b94  afbffff8	sw	-8(r29),r31; push ret addr
 1103  00001b98  2fbd0010	subui	r29,r29,#16; alloc local storage
 1104  00001b9c  afa20000	sw	0(r29),r2
 1105  00001ba0  54000000	nop
 1106  00001ba4          	L55_LF2:
 1107  00001ba4  8fc10000	lw	r1,(r30)
 1108  00001ba8  90220000	lbu	r2,(r1)
 1109  00001bac  64410000	snei	r1,r2,#0
 1110  00001bb0  1420000c	bnez	r1,L57_LF2
 1111  00001bb4  54000000	nop; delay slot nop
 1112  00001bb8  08000040	j	L56_LF2
 1113  00001bbc  54000000	nop; delay slot nop
 1114  00001bc0          	L57_LF2:
 1115  00001bc0  8fc10000	lw	r1,(r30)
 1116  00001bc4  90220000	lbu	r2,(r1)
 1117  00001bc8  8fc10004	lw	r1,4(r30)
 1118  00001bcc  00411028	seq	r2,r2,r1
 1119  00001bd0  10400010	beqz	r2,L58_LF2
 1120  00001bd4  54000000	nop; delay slot nop
 1121  00001bd8  8fc10000	lw	r1,(r30)
 1122  00001bdc  08000028	j	L54_LF2
 1123  00001be0  54000000	nop; delay slot nop
 1124  00001be4          	L58_LF2:
 1125  00001be4  8fc20000	lw	r2,(r30)
 1126  00001be8  20410001	addi	r1,r2,#1
 1127  00001bec  00011020	add	r2,r0,r1
 1128  00001bf0  afc20000	sw	(r30),r2
 1129  00001bf4  0bffffac	j	L55_LF2
 1130  00001bf8  54000000	nop; delay slot nop
 1131  00001bfc          	L56_LF2:
 1132  00001bfc  20010000	addi	r1,r0,#0
 1133  00001c00  08000004	j	L54_LF2
 1134  00001c04  54000000	nop; delay slot nop
 1135  00001c08          	L54_LF2:
 1136  00001c08  8fa20000	lw	r2,0(r29)
 1137  00001c0c  8fdffff8	lw	r31,-8(r30)
 1138  00001c10  001ee820	add	r29,r0,r30
 1139  00001c14  8fdefffc	lw	r30,-4(r30)
 1140  00001c18  4be00000	jr	r31
 1141  00001c1c  54000000	nop
 1142  00001c20          	.endproc _dindex
 1143  00001c20          	.align 2
 1144  00001c20          	.proc _ditoa
 1145  00001c20          	.global _ditoa
 1146  00001c20          	_ditoa:
 1147                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1148  00001c20  afbefffc	sw	-4(r29),r30; push fp
 1149  00001c24  001df020	add	r30,r0,r29; fp = sp
 1150  00001c28  afbffff8	sw	-8(r29),r31; push ret addr
 1151  00001c2c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1152  00001c30  afa20000	sw	0(r29),r2
 1153  00001c34  afa30004	sw	4(r29),r3
 1154  00001c38  8fc10000	lw	r1,(r30)
 1155  00001c3c  68220000	slti	r2,r1,#0
 1156  00001c40  1040002c	beqz	r2,L60_LF2
 1157  00001c44  54000000	nop; delay slot nop
 1158  00001c48  8fc10004	lw	r1,4(r30)
 1159  00001c4c  20220001	addi	r2,r1,#1
 1160  00001c50  afc20004	sw	4(r30),r2
 1161  00001c54  2002002d	addi	r2,r0,(#0x2d)&0xff
 1162  00001c58  a0220000	sb	(r1),r2
 1163  00001c5c  8fc10000	lw	r1,(r30)
 1164  00001c60  00011022	sub	r2,r0,r1
 1165  00001c64  afc20000	sw	(r30),r2
 1166  00001c68  08000118	j	L61_LF2
 1167  00001c6c  54000000	nop; delay slot nop
 1168  00001c70          	L60_LF2:
 1169  00001c70  8fc10000	lw	r1,(r30)
 1170  00001c74  64220000	snei	r2,r1,#0
 1171  00001c78  14400020	bnez	r2,L62_LF2
 1172  00001c7c  54000000	nop; delay slot nop
 1173  00001c80  8fc10004	lw	r1,4(r30)
 1174  00001c84  20220001	addi	r2,r1,#1
 1175  00001c88  afc20004	sw	4(r30),r2
 1176  00001c8c  20020030	addi	r2,r0,(#0x30)&0xff
 1177  00001c90  a0220000	sb	(r1),r2
 1178  00001c94  080000ec	j	L61_LF2
 1179  00001c98  54000000	nop; delay slot nop
 1180  00001c9c          	L62_LF2:
 1181  00001c9c  20010001	addi	r1,r0,#1
 1182  00001ca0  afc1fff4	sw	-12(r30),r1
 1183  00001ca4          	L64_LF2:
 1184  00001ca4  8fc1fff4	lw	r1,-12(r30)
 1185  00001ca8  8fc20000	lw	r2,(r30)
 1186  00001cac  0022082c	sle	r1,r1,r2
 1187  00001cb0  1420000c	bnez	r1,L66_LF2
 1188  00001cb4  54000000	nop; delay slot nop
 1189  00001cb8  08000024	j	L65_LF2
 1190  00001cbc  54000000	nop; delay slot nop
 1191  00001cc0          	L67_LF2:
 1192  00001cc0          	L66_LF2:
 1193  00001cc0  8fc1fff4	lw	r1,-12(r30)
 1194  00001cc4  00011820	add	r3,r0,r1
 1195  00001cc8  50620002	slli	r2,r3,#0x2
 1196  00001ccc  00411020	add	r2,r2,r1
 1197  00001cd0  50410001	slli	r1,r2,#0x1
 1198  00001cd4  afc1fff4	sw	-12(r30),r1
 1199  00001cd8  0bffffc8	j	L64_LF2
 1200  00001cdc  54000000	nop; delay slot nop
 1201  00001ce0          	L65_LF2:
 1202  00001ce0  54000000	nop
 1203  00001ce4          	L68_LF2:
 1204  00001ce4  8fc1fff4	lw	r1,-12(r30)
 1205  00001ce8  2002000a	addi	r2,r0,#10
 1206  00001cec  00200035	movi2fp	f0,r1
 1207  00001cf0  00400835	movi2fp	f1,r2
 1208  00001cf4  0401000f	div	f0,f0,f1
 1209  00001cf8  00000834	movfp2i	r1,f0
 1210  00001cfc  afc1fff4	sw	-12(r30),r1
 1211  00001d00  8fc10004	lw	r1,4(r30)
 1212  00001d04  20220001	addi	r2,r1,#1
 1213  00001d08  afc20004	sw	4(r30),r2
 1214  00001d0c  8fc20000	lw	r2,(r30)
 1215  00001d10  8fc3fff4	lw	r3,-12(r30)
 1216  00001d14  00400035	movi2fp	f0,r2
 1217  00001d18  00600835	movi2fp	f1,r3
 1218  00001d1c  0401000f	div	f0,f0,f1
 1219  00001d20  00001034	movfp2i	r2,f0
 1220  00001d24  00021820	add	r3,r0,r2
 1221  00001d28  20620030	addi	r2,r3,#48
 1222  00001d2c  a0220000	sb	(r1),r2
 1223  00001d30  8fc10000	lw	r1,(r30)
 1224  00001d34  8fc3fff4	lw	r3,-12(r30)
 1225  00001d38  00200035	movi2fp	f0,r1
 1226  00001d3c  00600835	movi2fp	f1,r3
 1227  00001d40  0401000f	div	f0,f0,f1
 1228  00001d44  00001034	movfp2i	r2,f0
 1229  00001d48  8fc3fff4	lw	r3,-12(r30)
 1230  00001d4c  00400035	movi2fp	f0,r2
 1231  00001d50  00600835	movi2fp	f1,r3
 1232  00001d54  0401000e	mult	f0,f0,f1
 1233  00001d58  00001034	movfp2i	r2,f0
 1234  00001d5c  00220822	sub	r1,r1,r2
 1235  00001d60  afc10000	sw	(r30),r1
 1236  00001d64          	L70_LF2:
 1237  00001d64  8fc1fff4	lw	r1,-12(r30)
 1238  00001d68  6c220001	sgti	r2,r1,#1
 1239  00001d6c  1440000c	bnez	r2,L71_LF2
 1240  00001d70  54000000	nop; delay slot nop
 1241  00001d74  0800000c	j	L61_LF2
 1242  00001d78  54000000	nop; delay slot nop
 1243  00001d7c          	L71_LF2:
 1244  00001d7c  0bffff64	j	L68_LF2
 1245  00001d80  54000000	nop; delay slot nop
 1246  00001d84          	L69_LF2:
 1247  00001d84          	L63_LF2:
 1248  00001d84          	L61_LF2:
 1249  00001d84  8fc10004	lw	r1,4(r30)
 1250  00001d88  20020000	addi	r2,r0,(#0x0)&0xff
 1251  00001d8c  a0220000	sb	(r1),r2
 1252  00001d90          	L59_LF2:
 1253  00001d90  8fa20000	lw	r2,0(r29)
 1254  00001d94  8fa30004	lw	r3,4(r29)
 1255  00001d98  8fdffff8	lw	r31,-8(r30)
 1256  00001d9c  001ee820	add	r29,r0,r30
 1257  00001da0  8fdefffc	lw	r30,-4(r30)
 1258  00001da4  4be00000	jr	r31
 1259  00001da8  54000000	nop
 1260  00001dac          	.endproc _ditoa
 1261  00001dac          	.align 2
 1262  00001dac          	.proc _dstrtol
 1263  00001dac          	.global _dstrtol
 1264  00001dac          	_dstrtol:
 1265                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1266  00001dac  afbefffc	sw	-4(r29),r30; push fp
 1267  00001db0  001df020	add	r30,r0,r29; fp = sp
 1268  00001db4  afbffff8	sw	-8(r29),r31; push ret addr
 1269  00001db8  2fbd0020	subui	r29,r29,#32; alloc local storage
 1270  00001dbc  afa20000	sw	0(r29),r2
 1271  00001dc0  20010000	addi	r1,r0,#0
 1272  00001dc4  afc1fff4	sw	-12(r30),r1
 1273  00001dc8          	L73_LF2:
 1274  00001dc8  8fc10000	lw	r1,(r30)
 1275  00001dcc  90220000	lbu	r2,(r1)
 1276  00001dd0  60410020	seqi	r1,r2,#32
 1277  00001dd4  14200034	bnez	r1,L75_LF2
 1278  00001dd8  54000000	nop; delay slot nop
 1279  00001ddc  8fc10000	lw	r1,(r30)
 1280  00001de0  90220000	lbu	r2,(r1)
 1281  00001de4  60410009	seqi	r1,r2,#9
 1282  00001de8  14200020	bnez	r1,L75_LF2
 1283  00001dec  54000000	nop; delay slot nop
 1284  00001df0  8fc10000	lw	r1,(r30)
 1285  00001df4  90220000	lbu	r2,(r1)
 1286  00001df8  6041000a	seqi	r1,r2,#10
 1287  00001dfc  1420000c	bnez	r1,L75_LF2
 1288  00001e00  54000000	nop; delay slot nop
 1289  00001e04  0800001c	j	L74_LF2
 1290  00001e08  54000000	nop; delay slot nop
 1291  00001e0c          	L75_LF2:
 1292  00001e0c  8fc20000	lw	r2,(r30)
 1293  00001e10  20410001	addi	r1,r2,#1
 1294  00001e14  00011020	add	r2,r0,r1
 1295  00001e18  afc20000	sw	(r30),r2
 1296  00001e1c  0bffffa8	j	L73_LF2
 1297  00001e20  54000000	nop; delay slot nop
 1298  00001e24          	L74_LF2:
 1299  00001e24  8fc10004	lw	r1,4(r30)
 1300  00001e28  64220000	snei	r2,r1,#0
 1301  00001e2c  10400010	beqz	r2,L76_LF2
 1302  00001e30  54000000	nop; delay slot nop
 1303  00001e34  8fc10004	lw	r1,4(r30)
 1304  00001e38  8fc20000	lw	r2,(r30)
 1305  00001e3c  ac220000	sw	(r1),r2
 1306  00001e40          	L76_LF2:
 1307  00001e40  8fc10000	lw	r1,(r30)
 1308  00001e44  90220000	lbu	r2,(r1)
 1309  00001e48  64410000	snei	r1,r2,#0
 1310  00001e4c  14200010	bnez	r1,L77_LF2
 1311  00001e50  54000000	nop; delay slot nop
 1312  00001e54  8fc1fff4	lw	r1,-12(r30)
 1313  00001e58  08000294	j	L72_LF2
 1314  00001e5c  54000000	nop; delay slot nop
 1315  00001e60          	L77_LF2:
 1316  00001e60  8fc10000	lw	r1,(r30)
 1317  00001e64  90220000	lbu	r2,(r1)
 1318  00001e68  6041002d	seqi	r1,r2,#45
 1319  00001e6c  10200024	beqz	r1,L78_LF2
 1320  00001e70  54000000	nop; delay slot nop
 1321  00001e74  2001ffff	addi	r1,r0,#-1
 1322  00001e78  afc1ffec	sw	-20(r30),r1
 1323  00001e7c  8fc20000	lw	r2,(r30)
 1324  00001e80  20410001	addi	r1,r2,#1
 1325  00001e84  00011020	add	r2,r0,r1
 1326  00001e88  afc20000	sw	(r30),r2
 1327  00001e8c  0800000c	j	L79_LF2
 1328  00001e90  54000000	nop; delay slot nop
 1329  00001e94          	L78_LF2:
 1330  00001e94  20010001	addi	r1,r0,#1
 1331  00001e98  afc1ffec	sw	-20(r30),r1
 1332  00001e9c          	L79_LF2:
 1333  00001e9c  8fc10008	lw	r1,8(r30)
 1334  00001ea0  64220000	snei	r2,r1,#0
 1335  00001ea4  14400090	bnez	r2,L80_LF2
 1336  00001ea8  54000000	nop; delay slot nop
 1337  00001eac  8fc10000	lw	r1,(r30)
 1338  00001eb0  90220000	lbu	r2,(r1)
 1339  00001eb4  60410030	seqi	r1,r2,#48
 1340  00001eb8  10200074	beqz	r1,L81_LF2
 1341  00001ebc  54000000	nop; delay slot nop
 1342  00001ec0  8fc20000	lw	r2,(r30)
 1343  00001ec4  20410001	addi	r1,r2,#1
 1344  00001ec8  00011020	add	r2,r0,r1
 1345  00001ecc  afc20000	sw	(r30),r2
 1346  00001ed0  8fc10000	lw	r1,(r30)
 1347  00001ed4  90220000	lbu	r2,(r1)
 1348  00001ed8  60410078	seqi	r1,r2,#120
 1349  00001edc  14200020	bnez	r1,L83_LF2
 1350  00001ee0  54000000	nop; delay slot nop
 1351  00001ee4  8fc10000	lw	r1,(r30)
 1352  00001ee8  90220000	lbu	r2,(r1)
 1353  00001eec  60410058	seqi	r1,r2,#88
 1354  00001ef0  1420000c	bnez	r1,L83_LF2
 1355  00001ef4  54000000	nop; delay slot nop
 1356  00001ef8  08000024	j	L82_LF2
 1357  00001efc  54000000	nop; delay slot nop
 1358  00001f00          	L83_LF2:
 1359  00001f00  20010010	addi	r1,r0,#16
 1360  00001f04  afc10008	sw	8(r30),r1
 1361  00001f08  8fc20000	lw	r2,(r30)
 1362  00001f0c  20410001	addi	r1,r2,#1
 1363  00001f10  00011020	add	r2,r0,r1
 1364  00001f14  afc20000	sw	(r30),r2
 1365  00001f18  0800000c	j	L84_LF2
 1366  00001f1c  54000000	nop; delay slot nop
 1367  00001f20          	L82_LF2:
 1368  00001f20  20010008	addi	r1,r0,#8
 1369  00001f24  afc10008	sw	8(r30),r1
 1370  00001f28          	L84_LF2:
 1371  00001f28  0800000c	j	L80_LF2
 1372  00001f2c  54000000	nop; delay slot nop
 1373  00001f30          	L81_LF2:
 1374  00001f30  2001000a	addi	r1,r0,#10
 1375  00001f34  afc10008	sw	8(r30),r1
 1376  00001f38          	L85_LF2:
 1377  00001f38          	L80_LF2:
 1378  00001f38  8fc10008	lw	r1,8(r30)
 1379  00001f3c  70220000	slei	r2,r1,#0
 1380  00001f40  1440001c	bnez	r2,L87_LF2
 1381  00001f44  54000000	nop; delay slot nop
 1382  00001f48  8fc10008	lw	r1,8(r30)
 1383  00001f4c  6c220010	sgti	r2,r1,#16
 1384  00001f50  1440000c	bnez	r2,L87_LF2
 1385  00001f54  54000000	nop; delay slot nop
 1386  00001f58  08000010	j	L86_LF2
 1387  00001f5c  54000000	nop; delay slot nop
 1388  00001f60          	L87_LF2:
 1389  00001f60  8fc1fff4	lw	r1,-12(r30)
 1390  00001f64  08000188	j	L72_LF2
 1391  00001f68  54000000	nop; delay slot nop
 1392  00001f6c          	L86_LF2:
 1393  00001f6c  54000000	nop
 1394  00001f70          	L88_LF2:
 1395  00001f70  8fc10000	lw	r1,(r30)
 1396  00001f74  90220000	lbu	r2,(r1)
 1397  00001f78  6c41002f	sgtui	r1,r2,#47
 1398  00001f7c  10200030	beqz	r1,L91_LF2
 1399  00001f80  54000000	nop; delay slot nop
 1400  00001f84  8fc10000	lw	r1,(r30)
 1401  00001f88  90220000	lbu	r2,(r1)
 1402  00001f8c  70410039	sleui	r1,r2,#57
 1403  00001f90  1020001c	beqz	r1,L91_LF2
 1404  00001f94  54000000	nop; delay slot nop
 1405  00001f98  8fc10000	lw	r1,(r30)
 1406  00001f9c  90220000	lbu	r2,(r1)
 1407  00001fa0  2041ffd0	addi	r1,r2,#-48
 1408  00001fa4  afc1fff0	sw	-16(r30),r1
 1409  00001fa8  0800008c	j	L92_LF2
 1410  00001fac  54000000	nop; delay slot nop
 1411  00001fb0          	L91_LF2:
 1412  00001fb0  8fc10000	lw	r1,(r30)
 1413  00001fb4  90220000	lbu	r2,(r1)
 1414  00001fb8  6c410060	sgtui	r1,r2,#96
 1415  00001fbc  10200030	beqz	r1,L93_LF2
 1416  00001fc0  54000000	nop; delay slot nop
 1417  00001fc4  8fc10000	lw	r1,(r30)
 1418  00001fc8  90220000	lbu	r2,(r1)
 1419  00001fcc  7041007a	sleui	r1,r2,#122
 1420  00001fd0  1020001c	beqz	r1,L93_LF2
 1421  00001fd4  54000000	nop; delay slot nop
 1422  00001fd8  8fc10000	lw	r1,(r30)
 1423  00001fdc  90220000	lbu	r2,(r1)
 1424  00001fe0  2041ffa9	addi	r1,r2,#-87
 1425  00001fe4  afc1fff0	sw	-16(r30),r1
 1426  00001fe8  0800004c	j	L92_LF2
 1427  00001fec  54000000	nop; delay slot nop
 1428  00001ff0          	L93_LF2:
 1429  00001ff0  8fc10000	lw	r1,(r30)
 1430  00001ff4  90220000	lbu	r2,(r1)
 1431  00001ff8  6c410040	sgtui	r1,r2,#64
 1432  00001ffc  10200030	beqz	r1,L95_LF2
 1433  00002000  54000000	nop; delay slot nop
 1434  00002004  8fc10000	lw	r1,(r30)
 1435  00002008  90220000	lbu	r2,(r1)
 1436  0000200c  7041005a	sleui	r1,r2,#90
 1437  00002010  1020001c	beqz	r1,L95_LF2
 1438  00002014  54000000	nop; delay slot nop
 1439  00002018  8fc10000	lw	r1,(r30)
 1440  0000201c  90220000	lbu	r2,(r1)
 1441  00002020  2041ffc9	addi	r1,r2,#-55
 1442  00002024  afc1fff0	sw	-16(r30),r1
 1443  00002028  0800000c	j	L92_LF2
 1444  0000202c  54000000	nop; delay slot nop
 1445  00002030          	L95_LF2:
 1446  00002030  200103e8	addi	r1,r0,#1000
 1447  00002034  afc1fff0	sw	-16(r30),r1
 1448  00002038          	L96_LF2:
 1449  00002038          	L94_LF2:
 1450  00002038          	L92_LF2:
 1451  00002038  8fc1fff0	lw	r1,-16(r30)
 1452  0000203c  8fc20008	lw	r2,8(r30)
 1453  00002040  0022082a	slt	r1,r1,r2
 1454  00002044  10200040	beqz	r1,L90_LF2
 1455  00002048  54000000	nop; delay slot nop
 1456  0000204c  8fc1fff4	lw	r1,-12(r30)
 1457  00002050  8fc20008	lw	r2,8(r30)
 1458  00002054  00200035	movi2fp	f0,r1
 1459  00002058  00400835	movi2fp	f1,r2
 1460  0000205c  0401000e	mult	f0,f0,f1
 1461  00002060  00000834	movfp2i	r1,f0
 1462  00002064  afc1fff4	sw	-12(r30),r1
 1463  00002068  8fc1fff4	lw	r1,-12(r30)
 1464  0000206c  8fc2fff0	lw	r2,-16(r30)
 1465  00002070  00220820	add	r1,r1,r2
 1466  00002074  afc1fff4	sw	-12(r30),r1
 1467  00002078  8fc20000	lw	r2,(r30)
 1468  0000207c  20410001	addi	r1,r2,#1
 1469  00002080  00011020	add	r2,r0,r1
 1470  00002084  afc20000	sw	(r30),r2
 1471  00002088          	L97_LF2:
 1472  00002088          	L90_LF2:
 1473  00002088  8fc1fff0	lw	r1,-16(r30)
 1474  0000208c  8fc20008	lw	r2,8(r30)
 1475  00002090  0022082a	slt	r1,r1,r2
 1476  00002094  1420000c	bnez	r1,L98_LF2
 1477  00002098  54000000	nop; delay slot nop
 1478  0000209c  0800000c	j	L89_LF2
 1479  000020a0  54000000	nop; delay slot nop
 1480  000020a4          	L98_LF2:
 1481  000020a4  0bfffec8	j	L88_LF2
 1482  000020a8  54000000	nop; delay slot nop
 1483  000020ac          	L89_LF2:
 1484  000020ac  8fc10004	lw	r1,4(r30)
 1485  000020b0  64220000	snei	r2,r1,#0
 1486  000020b4  10400010	beqz	r2,L99_LF2
 1487  000020b8  54000000	nop; delay slot nop
 1488  000020bc  8fc10004	lw	r1,4(r30)
 1489  000020c0  8fc20000	lw	r2,(r30)
 1490  000020c4  ac220000	sw	(r1),r2
 1491  000020c8          	L99_LF2:
 1492  000020c8  8fc1fff4	lw	r1,-12(r30)
 1493  000020cc  8fc2ffec	lw	r2,-20(r30)
 1494  000020d0  00200035	movi2fp	f0,r1
 1495  000020d4  00400835	movi2fp	f1,r2
 1496  000020d8  0401000e	mult	f0,f0,f1
 1497  000020dc  00000834	movfp2i	r1,f0
 1498  000020e0  afc1fff4	sw	-12(r30),r1
 1499  000020e4  8fc1fff4	lw	r1,-12(r30)
 1500  000020e8  08000004	j	L72_LF2
 1501  000020ec  54000000	nop; delay slot nop
 1502  000020f0          	L72_LF2:
 1503  000020f0  8fa20000	lw	r2,0(r29)
 1504  000020f4  8fdffff8	lw	r31,-8(r30)
 1505  000020f8  001ee820	add	r29,r0,r30
 1506  000020fc  8fdefffc	lw	r30,-4(r30)
 1507  00002100  4be00000	jr	r31
 1508  00002104  54000000	nop
 1509  00002108          	.endproc _dstrtol
 1510  00002108          	.align 2
 1511  00002108          	.proc _bcopy
 1512  00002108          	.global _bcopy
 1513  00002108          	_bcopy:
 1514                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1515  00002108  afbefffc	sw	-4(r29),r30; push fp
 1516  0000210c  001df020	add	r30,r0,r29; fp = sp
 1517  00002110  afbffff8	sw	-8(r29),r31; push ret addr
 1518  00002114  2fbd0010	subui	r29,r29,#16; alloc local storage
 1519  00002118  afa20000	sw	0(r29),r2
 1520  0000211c  afa30004	sw	4(r29),r3
 1521  00002120  54000000	nop
 1522  00002124          	L101_LF2:
 1523  00002124  8fc10008	lw	r1,8(r30)
 1524  00002128  2022ffff	addi	r2,r1,#-1
 1525  0000212c  afc20008	sw	8(r30),r2
 1526  00002130  6c210000	sgti	r1,r1,#0
 1527  00002134  1420000c	bnez	r1,L103_LF2
 1528  00002138  54000000	nop; delay slot nop
 1529  0000213c  0800002c	j	L102_LF2
 1530  00002140  54000000	nop; delay slot nop
 1531  00002144          	L103_LF2:
 1532  00002144  8fc10004	lw	r1,4(r30)
 1533  00002148  20220001	addi	r2,r1,#1
 1534  0000214c  afc20004	sw	4(r30),r2
 1535  00002150  8fc20000	lw	r2,(r30)
 1536  00002154  20430001	addi	r3,r2,#1
 1537  00002158  afc30000	sw	(r30),r3
 1538  0000215c  80420000	lb	r2,(r2)
 1539  00002160  a0220000	sb	(r1),r2
 1540  00002164  0bffffbc	j	L101_LF2
 1541  00002168  54000000	nop; delay slot nop
 1542  0000216c          	L102_LF2:
 1543  0000216c          	L100_LF2:
 1544  0000216c  8fa20000	lw	r2,0(r29)
 1545  00002170  8fa30004	lw	r3,4(r29)
 1546  00002174  8fdffff8	lw	r31,-8(r30)
 1547  00002178  001ee820	add	r29,r0,r30
 1548  0000217c  8fdefffc	lw	r30,-4(r30)
 1549  00002180  4be00000	jr	r31
 1550  00002184  54000000	nop
 1551  00002188          	.endproc _bcopy
 1552  00002188          	.align 2
 1553  00002188          	.proc _bzero
 1554  00002188          	.global _bzero
 1555  00002188          	_bzero:
 1556                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1557  00002188  afbefffc	sw	-4(r29),r30; push fp
 1558  0000218c  001df020	add	r30,r0,r29; fp = sp
 1559  00002190  afbffff8	sw	-8(r29),r31; push ret addr
 1560  00002194  2fbd0010	subui	r29,r29,#16; alloc local storage
 1561  00002198  afa20000	sw	0(r29),r2
 1562  0000219c  54000000	nop
 1563  000021a0          	L105_LF2:
 1564  000021a0  8fc10004	lw	r1,4(r30)
 1565  000021a4  2022ffff	addi	r2,r1,#-1
 1566  000021a8  afc20004	sw	4(r30),r2
 1567  000021ac  6c210000	sgti	r1,r1,#0
 1568  000021b0  1420000c	bnez	r1,L107_LF2
 1569  000021b4  54000000	nop; delay slot nop
 1570  000021b8  08000020	j	L106_LF2
 1571  000021bc  54000000	nop; delay slot nop
 1572  000021c0          	L107_LF2:
 1573  000021c0  8fc10000	lw	r1,(r30)
 1574  000021c4  20220001	addi	r2,r1,#1
 1575  000021c8  afc20000	sw	(r30),r2
 1576  000021cc  20020000	addi	r2,r0,(#0x0)&0xff
 1577  000021d0  a0220000	sb	(r1),r2
 1578  000021d4  0bffffc8	j	L105_LF2
 1579  000021d8  54000000	nop; delay slot nop
 1580  000021dc          	L106_LF2:
 1581  000021dc          	L104_LF2:
 1582  000021dc  8fa20000	lw	r2,0(r29)
 1583  000021e0  8fdffff8	lw	r31,-8(r30)
 1584  000021e4  001ee820	add	r29,r0,r30
 1585  000021e8  8fdefffc	lw	r30,-4(r30)
 1586  000021ec  4be00000	jr	r31
 1587  000021f0  54000000	nop
 1588  000021f4          	.endproc _bzero
 1589  000021f4          	.align 2
 1590  000021f4          	.proc _min
 1591  000021f4          	.global _min
 1592  000021f4          	_min:
 1593                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1594  000021f4  afbefffc	sw	-4(r29),r30; push fp
 1595  000021f8  001df020	add	r30,r0,r29; fp = sp
 1596  000021fc  afbffff8	sw	-8(r29),r31; push ret addr
 1597  00002200  2fbd0010	subui	r29,r29,#16; alloc local storage
 1598  00002204  afa20000	sw	0(r29),r2
 1599  00002208  afa30004	sw	4(r29),r3
 1600  0000220c  8fc10000	lw	r1,(r30)
 1601  00002210  8fc20004	lw	r2,4(r30)
 1602  00002214  0022182c	sle	r3,r1,r2
 1603  00002218  14600008	bnez	r3,L109_LF2
 1604  0000221c  54000000	nop; delay slot nop
 1605  00002220  8fc10004	lw	r1,4(r30)
 1606  00002224          	L109_LF2:
 1607  00002224  08000004	j	L108_LF2
 1608  00002228  54000000	nop; delay slot nop
 1609  0000222c          	L108_LF2:
 1610  0000222c  8fa20000	lw	r2,0(r29)
 1611  00002230  8fa30004	lw	r3,4(r29)
 1612  00002234  8fdffff8	lw	r31,-8(r30)
 1613  00002238  001ee820	add	r29,r0,r30
 1614  0000223c  8fdefffc	lw	r30,-4(r30)
 1615  00002240  4be00000	jr	r31
 1616  00002244  54000000	nop
 1617  00002248          	.endproc _min
 1618  00002248          	.align 2
 1619  00002248          	.proc _max
 1620  00002248          	.global _max
 1621  00002248          	_max:
 1622                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1623  00002248  afbefffc	sw	-4(r29),r30; push fp
 1624  0000224c  001df020	add	r30,r0,r29; fp = sp
 1625  00002250  afbffff8	sw	-8(r29),r31; push ret addr
 1626  00002254  2fbd0010	subui	r29,r29,#16; alloc local storage
 1627  00002258  afa20000	sw	0(r29),r2
 1628  0000225c  afa30004	sw	4(r29),r3
 1629  00002260  8fc10000	lw	r1,(r30)
 1630  00002264  8fc20004	lw	r2,4(r30)
 1631  00002268  0022182d	sge	r3,r1,r2
 1632  0000226c  14600008	bnez	r3,L111_LF2
 1633  00002270  54000000	nop; delay slot nop
 1634  00002274  8fc10004	lw	r1,4(r30)
 1635  00002278          	L111_LF2:
 1636  00002278  08000004	j	L110_LF2
 1637  0000227c  54000000	nop; delay slot nop
 1638  00002280          	L110_LF2:
 1639  00002280  8fa20000	lw	r2,0(r29)
 1640  00002284  8fa30004	lw	r3,4(r29)
 1641  00002288  8fdffff8	lw	r31,-8(r30)
 1642  0000228c  001ee820	add	r29,r0,r30
 1643  00002290  8fdefffc	lw	r30,-4(r30)
 1644  00002294  4be00000	jr	r31
 1645  00002298  54000000	nop
 1646  0000229c          	.endproc _max
 1647                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1648                      ;;;
 1649                      ;;; Most of the traps are called in files from libtraps.
 1652  0000229c          	.align 2
 1653  0000229c          	.proc _exit
 1654  0000229c          	.global _exit
 1655  0000229c          	_exit:
 1656  0000229c  44000300	trap	#0x300
 1657  000022a0  4be00000	jr	r31
 1658  000022a4  54000000	nop
 1659  000022a8          	.endproc _exit
 1661                      ; for the benefit of gcc.
 1662  000022a8          	.proc ___main
 1663  000022a8          	.global ___main
 1664  000022a8          	___main:
 1665  000022a8  4be00000	jr	r31
 1666  000022ac  54000000	nop
 1667  000022b0          	.endproc ___main
 1668  000022b0          	.text
 1669  000022b0          	.global _etext
 1670  000022b0          	_etext:
 1671  000022b0          	.align 3
 1672  000022b0          	.data
 1673  0000305c          	.global _edata
 1674  0000305c          	_edata:
