 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 4
    4                      ; Text size: 4288
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  25640a00	.ascii "%d\n\000"
   83  00003004          	.text
   84  000010d4          	.align 2
   85  000010d4          	.proc _main
   86  000010d4          	.global _main
   87  000010d4          	_main:
   88                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   89  000010d4  afbefffc	sw	-4(r29),r30; push fp
   90  000010d8  001df020	add	r30,r0,r29; fp = sp
   91  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   92  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
   93  000010e4  0c000fd0	jal	___main
   94  000010e8  54000000	nop; not filled.
   95  000010ec  23bdfff8	addi	r29,r29,#-8
   96  000010f0  20060020	addi	r6,r0,#32
   97  000010f4  afa60000	sw	(r29),r6
   98  000010f8  0c000210	jal	_malloc
   99  000010fc  54000000	nop; not filled.
  100  00001100  00011020	add	r2,r0,r1
  101  00001104  3c060000	lhi	r6,((LC0_LF0)>>16)&0xffff
  102  00001108  24c63000	addui	r6,r6,(LC0_LF0)&0xffff
  103  0000110c  afa60000	sw	(r29),r6
  104  00001110  afa20004	sw	4(r29),r2
  105  00001114  0c0000e0	jal	_Printf
  106  00001118  54000000	nop; not filled.
  107  0000111c  afa20000	sw	(r29),r2
  108  00001120  0c0001f0	jal	_mfree
  109  00001124  54000000	nop; not filled.
  110  00001128  20060028	addi	r6,r0,#40
  111  0000112c  afa60000	sw	(r29),r6
  112  00001130  0c0001d8	jal	_malloc
  113  00001134  54000000	nop; not filled.
  114  00001138  00012820	add	r5,r0,r1
  115  0000113c  20060023	addi	r6,r0,#35
  116  00001140  afa60000	sw	(r29),r6
  117  00001144  0c0001c4	jal	_malloc
  118  00001148  54000000	nop; not filled.
  119  0000114c  00012020	add	r4,r0,r1
  120  00001150  20060020	addi	r6,r0,#32
  121  00001154  afa60000	sw	(r29),r6
  122  00001158  0c0001b0	jal	_malloc
  123  0000115c  54000000	nop; not filled.
  124  00001160  00011820	add	r3,r0,r1
  125  00001164  afa60000	sw	(r29),r6
  126  00001168  0c0001a0	jal	_malloc
  127  0000116c  54000000	nop; not filled.
  128  00001170  00011020	add	r2,r0,r1
  129  00001174  afa50000	sw	(r29),r5
  130  00001178  0c000198	jal	_mfree
  131  0000117c  54000000	nop; not filled.
  132  00001180  afa40000	sw	(r29),r4
  133  00001184  0c00018c	jal	_mfree
  134  00001188  54000000	nop; not filled.
  135  0000118c  afa30000	sw	(r29),r3
  136  00001190  0c000180	jal	_mfree
  137  00001194  54000000	nop; not filled.
  138  00001198  afa20000	sw	(r29),r2
  139  0000119c  0c000174	jal	_mfree
  140  000011a0  54000000	nop; not filled.
  141  000011a4  23bd0008	addi	r29,r29,#8
  142  000011a8  0c000f00	jal	_exit
  143  000011ac  54000000	nop
  144  000011b0          	.endproc _main
  145                      ;;;
  146                      ;;; Stub functions for DLX traps.
  147                      ;;;
  148                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  149                      ;;;
  150                      ;;; The traps such as Open and Close
  151                      ;;; (note the capital letters) are for use by user programs.  The traps
  152                      ;;; with names such as open and close (lower case) are for use by the OS.
  153                      ;;;
  156  000011b0          	.align 2
  158                      ;;; The following are the traps to be used by user-level programs
  159                      ;;;
  161  000011b0          	.align 2
  162  000011b0          	.proc _Open
  163  000011b0          	.global _Open
  164  000011b0          	_Open:
  165                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  166                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  167                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  168  000011b0  44000213	trap	#0x213
  169  000011b4  4be00000	jr	r31
  170  000011b8  54000000	nop
  171  000011bc          	.endproc _Open
  173  000011bc          	.proc _Close
  174  000011bc          	.global _Close
  175  000011bc          	_Close:
  176  000011bc  44000214	trap	#0x214
  177  000011c0  4be00000	jr	r31
  178  000011c4  54000000	nop
  179  000011c8          	.endproc _Close
  181  000011c8          	.proc _Read
  182  000011c8          	.global _Read
  183  000011c8          	_Read:
  184  000011c8  44000210	trap	#0x210
  185  000011cc  4be00000	jr	r31
  186  000011d0  54000000	nop
  187  000011d4          	.endproc _Read
  189  000011d4          	.proc _Write
  190  000011d4          	.global _Write
  191  000011d4          	_Write:
  192  000011d4  44000211	trap	#0x211
  193  000011d8  4be00000	jr	r31
  194  000011dc  54000000	nop
  195  000011e0          	.endproc _Write
  197  000011e0          	.proc _Lseek
  198  000011e0          	.global _Lseek
  199  000011e0          	_Lseek:
  200  000011e0  44000212	trap	#0x212
  201  000011e4  4be00000	jr	r31
  202  000011e8  54000000	nop
  203  000011ec          	.endproc _Lseek
  205  000011ec          	.proc _Putchar
  206  000011ec          	.global _Putchar
  207  000011ec          	_Putchar:
  208  000011ec  44000280	trap	#0x280
  209  000011f0  4be00000	jr	r31
  210  000011f4  54000000	nop
  211  000011f8          	.endproc _Putchar
  213  000011f8          	.proc _Printf
  214  000011f8          	.global _Printf
  215  000011f8          	_Printf:
  216  000011f8  44000201	trap	#0x201
  217  000011fc  4be00000	jr	r31
  218  00001200  54000000	nop
  219  00001204          	.endproc _Printf
  221  00001204          	.proc _getpid
  222  00001204          	.global _getpid
  223  00001204          	_getpid:
  224  00001204  44000431	trap	#0x431
  225  00001208  4be00000	jr	r31
  226  0000120c  54000000	nop
  227  00001210          	.endproc _getpid
  229  00001210          	.proc _process_create
  230  00001210          	.global _process_create
  231  00001210          	_process_create:
  232  00001210  44000432	trap	#0x432
  233  00001214  4be00000	jr	r31
  234  00001218  54000000	nop
  235  0000121c          	.endproc _process_create
  237  0000121c          	.proc _shmget
  238  0000121c          	.global _shmget
  239  0000121c          	_shmget:
  240  0000121c  44000440	trap	#0x440
  241  00001220  4be00000	jr	r31
  242  00001224  54000000	nop
  243  00001228          	.endproc _shmget
  245  00001228          	.proc _shmat
  246  00001228          	.global _shmat
  247  00001228          	_shmat:
  248  00001228  44000441	trap	#0x441
  249  0000122c  4be00000	jr	r31
  250  00001230  54000000	nop
  251  00001234          	.endproc _shmat
  253  00001234          	.proc _sem_create
  254  00001234          	.global _sem_create
  255  00001234          	_sem_create:
  256  00001234  44000450	trap	#0x450
  257  00001238  4be00000	jr	r31
  258  0000123c  54000000	nop
  259  00001240          	.endproc _sem_create
  261  00001240          	.proc _sem_wait
  262  00001240          	.global _sem_wait
  263  00001240          	_sem_wait:
  264  00001240  44000451	trap	#0x451
  265  00001244  4be00000	jr	r31
  266  00001248  54000000	nop
  267  0000124c          	.endproc _sem_wait
  269  0000124c          	.proc _sem_signal
  270  0000124c          	.global _sem_signal
  271  0000124c          	_sem_signal:
  272  0000124c  44000452	trap	#0x452
  273  00001250  4be00000	jr	r31
  274  00001254  54000000	nop
  275  00001258          	.endproc _sem_signal
  277  00001258          	.proc _lock_create
  278  00001258          	.global _lock_create
  279  00001258          	_lock_create:
  280  00001258  44000453	trap	#0x453
  281  0000125c  4be00000	jr	r31
  282  00001260  54000000	nop
  283  00001264          	.endproc _lock_create
  285  00001264          	.proc _lock_acquire
  286  00001264          	.global _lock_acquire
  287  00001264          	_lock_acquire:
  288  00001264  44000454	trap	#0x454
  289  00001268  4be00000	jr	r31
  290  0000126c  54000000	nop
  291  00001270          	.endproc _lock_acquire
  293  00001270          	.proc _lock_release
  294  00001270          	.global _lock_release
  295  00001270          	_lock_release:
  296  00001270  44000455	trap	#0x455
  297  00001274  4be00000	jr	r31
  298  00001278  54000000	nop
  299  0000127c          	.endproc _lock_release
  301  0000127c          	.proc _cond_create
  302  0000127c          	.global _cond_create
  303  0000127c          	_cond_create:
  304  0000127c  44000456	trap	#0x456
  305  00001280  4be00000	jr	r31
  306  00001284  54000000	nop
  307  00001288          	.endproc _cond_create
  309  00001288          	.proc _cond_wait
  310  00001288          	.global _cond_wait
  311  00001288          	_cond_wait:
  312  00001288  44000457	trap	#0x457
  313  0000128c  4be00000	jr	r31
  314  00001290  54000000	nop
  315  00001294          	.endproc _cond_wait
  317  00001294          	.proc _cond_signal
  318  00001294          	.global _cond_signal
  319  00001294          	_cond_signal:
  320  00001294  44000458	trap	#0x458
  321  00001298  4be00000	jr	r31
  322  0000129c  54000000	nop
  323  000012a0          	.endproc _cond_signal
  325  000012a0          	.proc _cond_broadcast
  326  000012a0          	.global _cond_broadcast
  327  000012a0          	_cond_broadcast:
  328  000012a0  44000459	trap	#0x459
  329  000012a4  4be00000	jr	r31
  330  000012a8  54000000	nop
  331  000012ac          	.endproc _cond_broadcast
  333  000012ac          	.proc _mbox_create
  334  000012ac          	.global _mbox_create
  335  000012ac          	_mbox_create:
  336  000012ac  44000460	trap	#0x460
  337  000012b0  4be00000	jr	r31
  338  000012b4  54000000	nop
  339  000012b8          	.endproc _mbox_create
  341  000012b8          	.proc _mbox_open
  342  000012b8          	.global _mbox_open
  343  000012b8          	_mbox_open:
  344  000012b8  44000461	trap	#0x461
  345  000012bc  4be00000	jr	r31
  346  000012c0  54000000	nop
  347  000012c4          	.endproc _mbox_open
  349  000012c4          	.proc _mbox_close
  350  000012c4          	.global _mbox_close
  351  000012c4          	_mbox_close:
  352  000012c4  44000462	trap	#0x462
  353  000012c8  4be00000	jr	r31
  354  000012cc  54000000	nop
  355  000012d0          	.endproc _mbox_close
  357  000012d0          	.proc _mbox_send
  358  000012d0          	.global _mbox_send
  359  000012d0          	_mbox_send:
  360  000012d0  44000463	trap	#0x463
  361  000012d4  4be00000	jr	r31
  362  000012d8  54000000	nop
  363  000012dc          	.endproc _mbox_send
  365  000012dc          	.proc _mbox_recv
  366  000012dc          	.global _mbox_recv
  367  000012dc          	_mbox_recv:
  368  000012dc  44000464	trap	#0x464
  369  000012e0  4be00000	jr	r31
  370  000012e4  54000000	nop
  371  000012e8          	.endproc _mbox_recv
  373  000012e8          	.proc _sleep
  374  000012e8          	.global _sleep
  375  000012e8          	_sleep:
  376  000012e8  44000465	trap	#0x465
  377  000012ec  4be00000	jr	r31
  378  000012f0  54000000	nop
  379  000012f4          	.endproc _sleep
  381  000012f4          	.proc _yield
  382  000012f4          	.global _yield
  383  000012f4          	_yield:
  384  000012f4  44000466	trap	#0x466
  385  000012f8  4be00000	jr	r31
  386  000012fc  54000000	nop
  387  00001300          	.endproc _yield
  390  00001300          	.proc _Exit
  391  00001300          	.global _Exit
  392  00001300          	_Exit:
  393  00001300  44000500	trap	#0x500
  394  00001304  4be00000	jr	r31
  395  00001308  54000000	nop
  396  0000130c          	.endproc _Exit
  399  0000130c          	.proc _malloc
  400  0000130c          	.global _malloc
  401  0000130c          	_malloc:
  402  0000130c  44000467	trap	#0x467
  403  00001310  4be00000	jr	r31
  404  00001314          	.endproc _malloc
  407  00001314          	.proc _mfree
  408  00001314          	.global _mfree
  409  00001314          	_mfree:
  410  00001314  44000468	trap	#0x468
  411  00001318  4be00000	jr	r31
  412  0000131c          	.endproc _mfree
  413                      ; Compiled by GCC
  415  0000131c          	.align 2
  416  0000131c          	.proc _isspace
  417  0000131c          	.global _isspace
  418  0000131c          	_isspace:
  419                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  420  0000131c  afbefffc	sw	-4(r29),r30; push fp
  421  00001320  001df020	add	r30,r0,r29; fp = sp
  422  00001324  afbffff8	sw	-8(r29),r31; push ret addr
  423  00001328  2fbd0018	subui	r29,r29,#24; alloc local storage
  424  0000132c  afa20000	sw	0(r29),r2
  425  00001330  afa30004	sw	4(r29),r3
  426  00001334  afa40008	sw	8(r29),r4
  427  00001338  83c20003	lb	r2,3(r30)
  428  0000133c  20010000	addi	r1,r0,#0
  429  00001340  304300ff	andi	r3,r2,#0x00ff
  430  00001344  60640020	seqi	r4,r3,#32
  431  00001348  1480002c	bnez	r4,L3_LF2
  432  0000134c  54000000	nop; delay slot nop
  433  00001350  304300ff	andi	r3,r2,#0x00ff
  434  00001354  60640009	seqi	r4,r3,#9
  435  00001358  1480001c	bnez	r4,L3_LF2
  436  0000135c  54000000	nop; delay slot nop
  437  00001360  304300ff	andi	r3,r2,#0x00ff
  438  00001364  6064000a	seqi	r4,r3,#10
  439  00001368  1480000c	bnez	r4,L3_LF2
  440  0000136c  54000000	nop; delay slot nop
  441  00001370  08000008	j	L2_LF2
  442  00001374  54000000	nop; delay slot nop
  443  00001378          	L3_LF2:
  444  00001378  20010001	addi	r1,r0,#1
  445  0000137c          	L2_LF2:
  446  0000137c  08000004	j	L1_LF2
  447  00001380  54000000	nop; delay slot nop
  448  00001384          	L1_LF2:
  449  00001384  8fa20000	lw	r2,0(r29)
  450  00001388  8fa30004	lw	r3,4(r29)
  451  0000138c  8fa40008	lw	r4,8(r29)
  452  00001390  8fdffff8	lw	r31,-8(r30)
  453  00001394  001ee820	add	r29,r0,r30
  454  00001398  8fdefffc	lw	r30,-4(r30)
  455  0000139c  4be00000	jr	r31
  456  000013a0  54000000	nop
  457  000013a4          	.endproc _isspace
  458  000013a4          	.align 2
  459  000013a4          	.proc _isxdigit
  460  000013a4          	.global _isxdigit
  461  000013a4          	_isxdigit:
  462                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  463  000013a4  afbefffc	sw	-4(r29),r30; push fp
  464  000013a8  001df020	add	r30,r0,r29; fp = sp
  465  000013ac  afbffff8	sw	-8(r29),r31; push ret addr
  466  000013b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  467  000013b4  afa20000	sw	0(r29),r2
  468  000013b8  afa30004	sw	4(r29),r3
  469  000013bc  afa40008	sw	8(r29),r4
  470  000013c0  83c20003	lb	r2,3(r30)
  471  000013c4  20010000	addi	r1,r0,#0
  472  000013c8  304300ff	andi	r3,r2,#0x00ff
  473  000013cc  6c64002f	sgtui	r4,r3,#47
  474  000013d0  1080001c	beqz	r4,L7_LF2
  475  000013d4  54000000	nop; delay slot nop
  476  000013d8  304300ff	andi	r3,r2,#0x00ff
  477  000013dc  70640039	sleui	r4,r3,#57
  478  000013e0  1480005c	bnez	r4,L6_LF2
  479  000013e4  54000000	nop; delay slot nop
  480  000013e8  08000004	j	L7_LF2
  481  000013ec  54000000	nop; delay slot nop
  482  000013f0          	L7_LF2:
  483  000013f0  304300ff	andi	r3,r2,#0x00ff
  484  000013f4  6c640060	sgtui	r4,r3,#96
  485  000013f8  1080001c	beqz	r4,L8_LF2
  486  000013fc  54000000	nop; delay slot nop
  487  00001400  304300ff	andi	r3,r2,#0x00ff
  488  00001404  70640066	sleui	r4,r3,#102
  489  00001408  14800034	bnez	r4,L6_LF2
  490  0000140c  54000000	nop; delay slot nop
  491  00001410  08000004	j	L8_LF2
  492  00001414  54000000	nop; delay slot nop
  493  00001418          	L8_LF2:
  494  00001418  304300ff	andi	r3,r2,#0x00ff
  495  0000141c  6c640040	sgtui	r4,r3,#64
  496  00001420  10800020	beqz	r4,L5_LF2
  497  00001424  54000000	nop; delay slot nop
  498  00001428  304300ff	andi	r3,r2,#0x00ff
  499  0000142c  70640041	sleui	r4,r3,#65
  500  00001430  1480000c	bnez	r4,L6_LF2
  501  00001434  54000000	nop; delay slot nop
  502  00001438  08000008	j	L5_LF2
  503  0000143c  54000000	nop; delay slot nop
  504  00001440          	L6_LF2:
  505  00001440  20010001	addi	r1,r0,#1
  506  00001444          	L5_LF2:
  507  00001444  08000004	j	L4_LF2
  508  00001448  54000000	nop; delay slot nop
  509  0000144c          	L4_LF2:
  510  0000144c  8fa20000	lw	r2,0(r29)
  511  00001450  8fa30004	lw	r3,4(r29)
  512  00001454  8fa40008	lw	r4,8(r29)
  513  00001458  8fdffff8	lw	r31,-8(r30)
  514  0000145c  001ee820	add	r29,r0,r30
  515  00001460  8fdefffc	lw	r30,-4(r30)
  516  00001464  4be00000	jr	r31
  517  00001468  54000000	nop
  518  0000146c          	.endproc _isxdigit
  519  0000146c          	.align 2
  520  0000146c          	.proc _dstrcpy
  521  0000146c          	.global _dstrcpy
  522  0000146c          	_dstrcpy:
  523                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  524  0000146c  afbefffc	sw	-4(r29),r30; push fp
  525  00001470  001df020	add	r30,r0,r29; fp = sp
  526  00001474  afbffff8	sw	-8(r29),r31; push ret addr
  527  00001478  2fbd0018	subui	r29,r29,#24; alloc local storage
  528  0000147c  afa20000	sw	0(r29),r2
  529  00001480  afa30004	sw	4(r29),r3
  530  00001484  8fc10000	lw	r1,(r30)
  531  00001488  afc1fff4	sw	-12(r30),r1
  532  0000148c          	L10_LF2:
  533  0000148c  8fc10000	lw	r1,(r30)
  534  00001490  20220001	addi	r2,r1,#1
  535  00001494  afc20000	sw	(r30),r2
  536  00001498  8fc20004	lw	r2,4(r30)
  537  0000149c  20430001	addi	r3,r2,#1
  538  000014a0  afc30004	sw	4(r30),r3
  539  000014a4  80420000	lb	r2,(r2)
  540  000014a8  a0220000	sb	(r1),r2
  541  000014ac  a3c2fff3	sb	-13(r30),r2
  542  000014b0          	L12_LF2:
  543  000014b0  93c1fff3	lbu	r1,-13(r30)
  544  000014b4  64220000	snei	r2,r1,#0
  545  000014b8  1440000c	bnez	r2,L13_LF2
  546  000014bc  54000000	nop; delay slot nop
  547  000014c0  0800000c	j	L11_LF2
  548  000014c4  54000000	nop; delay slot nop
  549  000014c8          	L13_LF2:
  550  000014c8  0bffffc0	j	L10_LF2
  551  000014cc  54000000	nop; delay slot nop
  552  000014d0          	L11_LF2:
  553  000014d0  8fc1fff4	lw	r1,-12(r30)
  554  000014d4  08000004	j	L9_LF2
  555  000014d8  54000000	nop; delay slot nop
  556  000014dc          	L9_LF2:
  557  000014dc  8fa20000	lw	r2,0(r29)
  558  000014e0  8fa30004	lw	r3,4(r29)
  559  000014e4  8fdffff8	lw	r31,-8(r30)
  560  000014e8  001ee820	add	r29,r0,r30
  561  000014ec  8fdefffc	lw	r30,-4(r30)
  562  000014f0  4be00000	jr	r31
  563  000014f4  54000000	nop
  564  000014f8          	.endproc _dstrcpy
  565  000014f8          	.align 2
  566  000014f8          	.proc _dstrncpy
  567  000014f8          	.global _dstrncpy
  568  000014f8          	_dstrncpy:
  569                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  570  000014f8  afbefffc	sw	-4(r29),r30; push fp
  571  000014fc  001df020	add	r30,r0,r29; fp = sp
  572  00001500  afbffff8	sw	-8(r29),r31; push ret addr
  573  00001504  2fbd0018	subui	r29,r29,#24; alloc local storage
  574  00001508  afa20000	sw	0(r29),r2
  575  0000150c  afa30004	sw	4(r29),r3
  576  00001510  8fc10000	lw	r1,(r30)
  577  00001514  afc1fff4	sw	-12(r30),r1
  578  00001518          	L15_LF2:
  579  00001518  8fc10008	lw	r1,8(r30)
  580  0000151c  2022ffff	addi	r2,r1,#-1
  581  00001520  afc20008	sw	8(r30),r2
  582  00001524  70210000	slei	r1,r1,#0
  583  00001528  1020000c	beqz	r1,L18_LF2
  584  0000152c  54000000	nop; delay slot nop
  585  00001530  08000048	j	L16_LF2
  586  00001534  54000000	nop; delay slot nop
  587  00001538          	L18_LF2:
  588  00001538  8fc10000	lw	r1,(r30)
  589  0000153c  20220001	addi	r2,r1,#1
  590  00001540  afc20000	sw	(r30),r2
  591  00001544  8fc20004	lw	r2,4(r30)
  592  00001548  20430001	addi	r3,r2,#1
  593  0000154c  afc30004	sw	4(r30),r3
  594  00001550  80420000	lb	r2,(r2)
  595  00001554  a0220000	sb	(r1),r2
  596  00001558  a3c2fff3	sb	-13(r30),r2
  597  0000155c          	L17_LF2:
  598  0000155c  93c1fff3	lbu	r1,-13(r30)
  599  00001560  64220000	snei	r2,r1,#0
  600  00001564  1440000c	bnez	r2,L19_LF2
  601  00001568  54000000	nop; delay slot nop
  602  0000156c  0800000c	j	L16_LF2
  603  00001570  54000000	nop; delay slot nop
  604  00001574          	L19_LF2:
  605  00001574  0bffffa0	j	L15_LF2
  606  00001578  54000000	nop; delay slot nop
  607  0000157c          	L16_LF2:
  608  0000157c  8fc1fff4	lw	r1,-12(r30)
  609  00001580  08000004	j	L14_LF2
  610  00001584  54000000	nop; delay slot nop
  611  00001588          	L14_LF2:
  612  00001588  8fa20000	lw	r2,0(r29)
  613  0000158c  8fa30004	lw	r3,4(r29)
  614  00001590  8fdffff8	lw	r31,-8(r30)
  615  00001594  001ee820	add	r29,r0,r30
  616  00001598  8fdefffc	lw	r30,-4(r30)
  617  0000159c  4be00000	jr	r31
  618  000015a0  54000000	nop
  619  000015a4          	.endproc _dstrncpy
  620  000015a4          	.align 2
  621  000015a4          	.proc _dstrcat
  622  000015a4          	.global _dstrcat
  623  000015a4          	_dstrcat:
  624                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  625  000015a4  afbefffc	sw	-4(r29),r30; push fp
  626  000015a8  001df020	add	r30,r0,r29; fp = sp
  627  000015ac  afbffff8	sw	-8(r29),r31; push ret addr
  628  000015b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  629  000015b4  afa20000	sw	0(r29),r2
  630  000015b8  8fc10000	lw	r1,(r30)
  631  000015bc  afc1fff4	sw	-12(r30),r1
  632  000015c0          	L21_LF2:
  633  000015c0  8fc10000	lw	r1,(r30)
  634  000015c4  90220000	lbu	r2,(r1)
  635  000015c8  64410000	snei	r1,r2,#0
  636  000015cc  1420000c	bnez	r1,L23_LF2
  637  000015d0  54000000	nop; delay slot nop
  638  000015d4  0800001c	j	L22_LF2
  639  000015d8  54000000	nop; delay slot nop
  640  000015dc          	L23_LF2:
  641  000015dc  8fc20000	lw	r2,(r30)
  642  000015e0  20410001	addi	r1,r2,#1
  643  000015e4  00011020	add	r2,r0,r1
  644  000015e8  afc20000	sw	(r30),r2
  645  000015ec  0bffffd0	j	L21_LF2
  646  000015f0  54000000	nop; delay slot nop
  647  000015f4          	L22_LF2:
  648  000015f4  23bdfff8	addi	r29,r29,#-8
  649  000015f8  001d0820	add	r1,r0,r29
  650  000015fc  8fc20000	lw	r2,(r30)
  651  00001600  ac220000	sw	(r1),r2
  652  00001604  8fc20004	lw	r2,4(r30)
  653  00001608  ac220004	sw	4(r1),r2
  654  0000160c  0ffffe5c	jal	_dstrcpy
  655  00001610  54000000	nop; delay slot nop
  656  00001614  23bd0008	addi	r29,r29,#8
  657  00001618  8fc1fff4	lw	r1,-12(r30)
  658  0000161c  08000004	j	L20_LF2
  659  00001620  54000000	nop; delay slot nop
  660  00001624          	L20_LF2:
  661  00001624  8fa20000	lw	r2,0(r29)
  662  00001628  8fdffff8	lw	r31,-8(r30)
  663  0000162c  001ee820	add	r29,r0,r30
  664  00001630  8fdefffc	lw	r30,-4(r30)
  665  00001634  4be00000	jr	r31
  666  00001638  54000000	nop
  667  0000163c          	.endproc _dstrcat
  668  0000163c          	.align 2
  669  0000163c          	.proc _dstrncmp
  670  0000163c          	.global _dstrncmp
  671  0000163c          	_dstrncmp:
  672                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  673  0000163c  afbefffc	sw	-4(r29),r30; push fp
  674  00001640  001df020	add	r30,r0,r29; fp = sp
  675  00001644  afbffff8	sw	-8(r29),r31; push ret addr
  676  00001648  2fbd0018	subui	r29,r29,#24; alloc local storage
  677  0000164c  afa20000	sw	0(r29),r2
  678  00001650  afa30004	sw	4(r29),r3
  679  00001654  54000000	nop
  680  00001658  20010000	addi	r1,r0,#0
  681  0000165c  afc1fff4	sw	-12(r30),r1
  682  00001660          	L25_LF2:
  683  00001660  8fc1fff4	lw	r1,-12(r30)
  684  00001664  8fc20008	lw	r2,8(r30)
  685  00001668  0022082a	slt	r1,r1,r2
  686  0000166c  1420000c	bnez	r1,L28_LF2
  687  00001670  54000000	nop; delay slot nop
  688  00001674  08000088	j	L26_LF2
  689  00001678  54000000	nop; delay slot nop
  690  0000167c          	L28_LF2:
  691  0000167c  8fc10004	lw	r1,4(r30)
  692  00001680  90220000	lbu	r2,(r1)
  693  00001684  64410000	snei	r1,r2,#0
  694  00001688  14200018	bnez	r1,L29_LF2
  695  0000168c  54000000	nop; delay slot nop
  696  00001690  20010000	addi	r1,r0,#0
  697  00001694  080000d8	j	L24_LF2
  698  00001698  54000000	nop; delay slot nop
  699  0000169c  08000028	j	L30_LF2
  700  000016a0  54000000	nop; delay slot nop
  701  000016a4          	L29_LF2:
  702  000016a4  8fc10000	lw	r1,(r30)
  703  000016a8  8fc20004	lw	r2,4(r30)
  704  000016ac  90210000	lbu	r1,(r1)
  705  000016b0  90420000	lbu	r2,(r2)
  706  000016b4  00220829	sne	r1,r1,r2
  707  000016b8  1020000c	beqz	r1,L30_LF2
  708  000016bc  54000000	nop; delay slot nop
  709  000016c0  0800003c	j	L26_LF2
  710  000016c4  54000000	nop; delay slot nop
  711  000016c8          	L31_LF2:
  712  000016c8          	L30_LF2:
  713  000016c8  8fc20000	lw	r2,(r30)
  714  000016cc  20410001	addi	r1,r2,#1
  715  000016d0  00011020	add	r2,r0,r1
  716  000016d4  afc20000	sw	(r30),r2
  717  000016d8  8fc20004	lw	r2,4(r30)
  718  000016dc  20410001	addi	r1,r2,#1
  719  000016e0  00011020	add	r2,r0,r1
  720  000016e4  afc20004	sw	4(r30),r2
  721  000016e8          	L27_LF2:
  722  000016e8  8fc2fff4	lw	r2,-12(r30)
  723  000016ec  20410001	addi	r1,r2,#1
  724  000016f0  00011020	add	r2,r0,r1
  725  000016f4  afc2fff4	sw	-12(r30),r2
  726  000016f8  0bffff64	j	L25_LF2
  727  000016fc  54000000	nop; delay slot nop
  728  00001700          	L26_LF2:
  729  00001700  8fc1fff4	lw	r1,-12(r30)
  730  00001704  8fc20008	lw	r2,8(r30)
  731  00001708  00220828	seq	r1,r1,r2
  732  0000170c  10200018	beqz	r1,L32_LF2
  733  00001710  54000000	nop; delay slot nop
  734  00001714  20010000	addi	r1,r0,#0
  735  00001718  08000054	j	L24_LF2
  736  0000171c  54000000	nop; delay slot nop
  737  00001720  0800004c	j	L33_LF2
  738  00001724  54000000	nop; delay slot nop
  739  00001728          	L32_LF2:
  740  00001728  8fc20000	lw	r2,(r30)
  741  0000172c  90410000	lbu	r1,(r2)
  742  00001730  8fc20004	lw	r2,4(r30)
  743  00001734  90430000	lbu	r3,(r2)
  744  00001738  00230822	sub	r1,r1,r3
  745  0000173c  74220000	sgei	r2,r1,#0
  746  00001740  10400020	beqz	r2,L34_LF2
  747  00001744  54000000	nop; delay slot nop
  748  00001748  8fc10000	lw	r1,(r30)
  749  0000174c  8fc20004	lw	r2,4(r30)
  750  00001750  90210000	lbu	r1,(r1)
  751  00001754  90420000	lbu	r2,(r2)
  752  00001758  00220829	sne	r1,r1,r2
  753  0000175c  08000008	j	L35_LF2
  754  00001760  54000000	nop; delay slot nop
  755  00001764          	L34_LF2:
  756  00001764  2001ffff	addi	r1,r0,#-1
  757  00001768          	L35_LF2:
  758  00001768  08000004	j	L24_LF2
  759  0000176c  54000000	nop; delay slot nop
  760  00001770          	L33_LF2:
  761  00001770          	L24_LF2:
  762  00001770  8fa20000	lw	r2,0(r29)
  763  00001774  8fa30004	lw	r3,4(r29)
  764  00001778  8fdffff8	lw	r31,-8(r30)
  765  0000177c  001ee820	add	r29,r0,r30
  766  00001780  8fdefffc	lw	r30,-4(r30)
  767  00001784  4be00000	jr	r31
  768  00001788  54000000	nop
  769  0000178c          	.endproc _dstrncmp
  770  0000178c          	.align 2
  771  0000178c          	.proc _dstrlen
  772  0000178c          	.global _dstrlen
  773  0000178c          	_dstrlen:
  774                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  775  0000178c  afbefffc	sw	-4(r29),r30; push fp
  776  00001790  001df020	add	r30,r0,r29; fp = sp
  777  00001794  afbffff8	sw	-8(r29),r31; push ret addr
  778  00001798  2fbd0018	subui	r29,r29,#24; alloc local storage
  779  0000179c  afa20000	sw	0(r29),r2
  780  000017a0  20010000	addi	r1,r0,#0
  781  000017a4  afc1fff4	sw	-12(r30),r1
  782  000017a8          	L37_LF2:
  783  000017a8  8fc10000	lw	r1,(r30)
  784  000017ac  20220001	addi	r2,r1,#1
  785  000017b0  afc20000	sw	(r30),r2
  786  000017b4  90210000	lbu	r1,(r1)
  787  000017b8  64220000	snei	r2,r1,#0
  788  000017bc  1440000c	bnez	r2,L39_LF2
  789  000017c0  54000000	nop; delay slot nop
  790  000017c4  0800001c	j	L38_LF2
  791  000017c8  54000000	nop; delay slot nop
  792  000017cc          	L39_LF2:
  793  000017cc  8fc2fff4	lw	r2,-12(r30)
  794  000017d0  20410001	addi	r1,r2,#1
  795  000017d4  00011020	add	r2,r0,r1
  796  000017d8  afc2fff4	sw	-12(r30),r2
  797  000017dc  0bffffc8	j	L37_LF2
  798  000017e0  54000000	nop; delay slot nop
  799  000017e4          	L38_LF2:
  800  000017e4  8fc1fff4	lw	r1,-12(r30)
  801  000017e8  08000004	j	L36_LF2
  802  000017ec  54000000	nop; delay slot nop
  803  000017f0          	L36_LF2:
  804  000017f0  8fa20000	lw	r2,0(r29)
  805  000017f4  8fdffff8	lw	r31,-8(r30)
  806  000017f8  001ee820	add	r29,r0,r30
  807  000017fc  8fdefffc	lw	r30,-4(r30)
  808  00001800  4be00000	jr	r31
  809  00001804  54000000	nop
  810  00001808          	.endproc _dstrlen
  811  00001808          	.align 2
  812  00001808          	.proc _dstrstr
  813  00001808          	.global _dstrstr
  814  00001808          	_dstrstr:
  815                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  816  00001808  afbefffc	sw	-4(r29),r30; push fp
  817  0000180c  001df020	add	r30,r0,r29; fp = sp
  818  00001810  afbffff8	sw	-8(r29),r31; push ret addr
  819  00001814  2fbd0018	subui	r29,r29,#24; alloc local storage
  820  00001818  afa20000	sw	0(r29),r2
  821  0000181c  23bdfff8	addi	r29,r29,#-8
  822  00001820  001d0820	add	r1,r0,r29
  823  00001824  8fc20004	lw	r2,4(r30)
  824  00001828  ac220000	sw	(r1),r2
  825  0000182c  0fffff5c	jal	_dstrlen
  826  00001830  54000000	nop; delay slot nop
  827  00001834  23bd0008	addi	r29,r29,#8
  828  00001838  afc1fff4	sw	-12(r30),r1
  829  0000183c          	L41_LF2:
  830  0000183c  8fc10000	lw	r1,(r30)
  831  00001840  90220000	lbu	r2,(r1)
  832  00001844  64410000	snei	r1,r2,#0
  833  00001848  1420000c	bnez	r1,L43_LF2
  834  0000184c  54000000	nop; delay slot nop
  835  00001850  08000060	j	L42_LF2
  836  00001854  54000000	nop; delay slot nop
  837  00001858          	L43_LF2:
  838  00001858  23bdfff0	addi	r29,r29,#-16
  839  0000185c  001d0820	add	r1,r0,r29
  840  00001860  8fc20000	lw	r2,(r30)
  841  00001864  ac220000	sw	(r1),r2
  842  00001868  8fc20004	lw	r2,4(r30)
  843  0000186c  ac220004	sw	4(r1),r2
  844  00001870  8fc2fff4	lw	r2,-12(r30)
  845  00001874  ac220008	sw	8(r1),r2
  846  00001878  0ffffdc0	jal	_dstrncmp
  847  0000187c  54000000	nop; delay slot nop
  848  00001880  23bd0010	addi	r29,r29,#16
  849  00001884  64220000	snei	r2,r1,#0
  850  00001888  14400010	bnez	r2,L44_LF2
  851  0000188c  54000000	nop; delay slot nop
  852  00001890  8fc10000	lw	r1,(r30)
  853  00001894  08000028	j	L40_LF2
  854  00001898  54000000	nop; delay slot nop
  855  0000189c          	L44_LF2:
  856  0000189c  8fc20000	lw	r2,(r30)
  857  000018a0  20410001	addi	r1,r2,#1
  858  000018a4  00011020	add	r2,r0,r1
  859  000018a8  afc20000	sw	(r30),r2
  860  000018ac  0bffff8c	j	L41_LF2
  861  000018b0  54000000	nop; delay slot nop
  862  000018b4          	L42_LF2:
  863  000018b4  20010000	addi	r1,r0,#0
  864  000018b8  08000004	j	L40_LF2
  865  000018bc  54000000	nop; delay slot nop
  866  000018c0          	L40_LF2:
  867  000018c0  8fa20000	lw	r2,0(r29)
  868  000018c4  8fdffff8	lw	r31,-8(r30)
  869  000018c8  001ee820	add	r29,r0,r30
  870  000018cc  8fdefffc	lw	r30,-4(r30)
  871  000018d0  4be00000	jr	r31
  872  000018d4  54000000	nop
  873  000018d8          	.endproc _dstrstr
  874  000018d8          	.align 2
  875  000018d8          	.proc _dmindex
  876  000018d8          	.global _dmindex
  877  000018d8          	_dmindex:
  878                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  879  000018d8  afbefffc	sw	-4(r29),r30; push fp
  880  000018dc  001df020	add	r30,r0,r29; fp = sp
  881  000018e0  afbffff8	sw	-8(r29),r31; push ret addr
  882  000018e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  883  000018e8  afa20000	sw	0(r29),r2
  884  000018ec  54000000	nop
  885  000018f0          	L46_LF2:
  886  000018f0  8fc10000	lw	r1,(r30)
  887  000018f4  90220000	lbu	r2,(r1)
  888  000018f8  64410000	snei	r1,r2,#0
  889  000018fc  1420000c	bnez	r1,L48_LF2
  890  00001900  54000000	nop; delay slot nop
  891  00001904  08000070	j	L47_LF2
  892  00001908  54000000	nop; delay slot nop
  893  0000190c          	L48_LF2:
  894  0000190c  8fc10004	lw	r1,4(r30)
  895  00001910  afc1fff4	sw	-12(r30),r1
  896  00001914          	L49_LF2:
  897  00001914  8fc1fff4	lw	r1,-12(r30)
  898  00001918  90220000	lbu	r2,(r1)
  899  0000191c  64410000	snei	r1,r2,#0
  900  00001920  1420000c	bnez	r1,L52_LF2
  901  00001924  54000000	nop; delay slot nop
  902  00001928  08000044	j	L50_LF2
  903  0000192c  54000000	nop; delay slot nop
  904  00001930          	L52_LF2:
  905  00001930  8fc10000	lw	r1,(r30)
  906  00001934  8fc2fff4	lw	r2,-12(r30)
  907  00001938  90210000	lbu	r1,(r1)
  908  0000193c  90420000	lbu	r2,(r2)
  909  00001940  00220828	seq	r1,r1,r2
  910  00001944  10200010	beqz	r1,L51_LF2
  911  00001948  54000000	nop; delay slot nop
  912  0000194c  8fc10000	lw	r1,(r30)
  913  00001950  08000030	j	L45_LF2
  914  00001954  54000000	nop; delay slot nop
  915  00001958          	L53_LF2:
  916  00001958          	L51_LF2:
  917  00001958  8fc2fff4	lw	r2,-12(r30)
  918  0000195c  20410001	addi	r1,r2,#1
  919  00001960  00011020	add	r2,r0,r1
  920  00001964  afc2fff4	sw	-12(r30),r2
  921  00001968  0bffffa8	j	L49_LF2
  922  0000196c  54000000	nop; delay slot nop
  923  00001970          	L50_LF2:
  924  00001970  0bffff7c	j	L46_LF2
  925  00001974  54000000	nop; delay slot nop
  926  00001978          	L47_LF2:
  927  00001978  20010000	addi	r1,r0,#0
  928  0000197c  08000004	j	L45_LF2
  929  00001980  54000000	nop; delay slot nop
  930  00001984          	L45_LF2:
  931  00001984  8fa20000	lw	r2,0(r29)
  932  00001988  8fdffff8	lw	r31,-8(r30)
  933  0000198c  001ee820	add	r29,r0,r30
  934  00001990  8fdefffc	lw	r30,-4(r30)
  935  00001994  4be00000	jr	r31
  936  00001998  54000000	nop
  937  0000199c          	.endproc _dmindex
  938  0000199c          	.align 2
  939  0000199c          	.proc _dindex
  940  0000199c          	.global _dindex
  941  0000199c          	_dindex:
  942                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  943  0000199c  afbefffc	sw	-4(r29),r30; push fp
  944  000019a0  001df020	add	r30,r0,r29; fp = sp
  945  000019a4  afbffff8	sw	-8(r29),r31; push ret addr
  946  000019a8  2fbd0010	subui	r29,r29,#16; alloc local storage
  947  000019ac  afa20000	sw	0(r29),r2
  948  000019b0  54000000	nop
  949  000019b4          	L55_LF2:
  950  000019b4  8fc10000	lw	r1,(r30)
  951  000019b8  90220000	lbu	r2,(r1)
  952  000019bc  64410000	snei	r1,r2,#0
  953  000019c0  1420000c	bnez	r1,L57_LF2
  954  000019c4  54000000	nop; delay slot nop
  955  000019c8  08000040	j	L56_LF2
  956  000019cc  54000000	nop; delay slot nop
  957  000019d0          	L57_LF2:
  958  000019d0  8fc10000	lw	r1,(r30)
  959  000019d4  90220000	lbu	r2,(r1)
  960  000019d8  8fc10004	lw	r1,4(r30)
  961  000019dc  00411028	seq	r2,r2,r1
  962  000019e0  10400010	beqz	r2,L58_LF2
  963  000019e4  54000000	nop; delay slot nop
  964  000019e8  8fc10000	lw	r1,(r30)
  965  000019ec  08000028	j	L54_LF2
  966  000019f0  54000000	nop; delay slot nop
  967  000019f4          	L58_LF2:
  968  000019f4  8fc20000	lw	r2,(r30)
  969  000019f8  20410001	addi	r1,r2,#1
  970  000019fc  00011020	add	r2,r0,r1
  971  00001a00  afc20000	sw	(r30),r2
  972  00001a04  0bffffac	j	L55_LF2
  973  00001a08  54000000	nop; delay slot nop
  974  00001a0c          	L56_LF2:
  975  00001a0c  20010000	addi	r1,r0,#0
  976  00001a10  08000004	j	L54_LF2
  977  00001a14  54000000	nop; delay slot nop
  978  00001a18          	L54_LF2:
  979  00001a18  8fa20000	lw	r2,0(r29)
  980  00001a1c  8fdffff8	lw	r31,-8(r30)
  981  00001a20  001ee820	add	r29,r0,r30
  982  00001a24  8fdefffc	lw	r30,-4(r30)
  983  00001a28  4be00000	jr	r31
  984  00001a2c  54000000	nop
  985  00001a30          	.endproc _dindex
  986  00001a30          	.align 2
  987  00001a30          	.proc _ditoa
  988  00001a30          	.global _ditoa
  989  00001a30          	_ditoa:
  990                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
  991  00001a30  afbefffc	sw	-4(r29),r30; push fp
  992  00001a34  001df020	add	r30,r0,r29; fp = sp
  993  00001a38  afbffff8	sw	-8(r29),r31; push ret addr
  994  00001a3c  2fbd0018	subui	r29,r29,#24; alloc local storage
  995  00001a40  afa20000	sw	0(r29),r2
  996  00001a44  afa30004	sw	4(r29),r3
  997  00001a48  8fc10000	lw	r1,(r30)
  998  00001a4c  68220000	slti	r2,r1,#0
  999  00001a50  1040002c	beqz	r2,L60_LF2
 1000  00001a54  54000000	nop; delay slot nop
 1001  00001a58  8fc10004	lw	r1,4(r30)
 1002  00001a5c  20220001	addi	r2,r1,#1
 1003  00001a60  afc20004	sw	4(r30),r2
 1004  00001a64  2002002d	addi	r2,r0,(#0x2d)&0xff
 1005  00001a68  a0220000	sb	(r1),r2
 1006  00001a6c  8fc10000	lw	r1,(r30)
 1007  00001a70  00011022	sub	r2,r0,r1
 1008  00001a74  afc20000	sw	(r30),r2
 1009  00001a78  08000118	j	L61_LF2
 1010  00001a7c  54000000	nop; delay slot nop
 1011  00001a80          	L60_LF2:
 1012  00001a80  8fc10000	lw	r1,(r30)
 1013  00001a84  64220000	snei	r2,r1,#0
 1014  00001a88  14400020	bnez	r2,L62_LF2
 1015  00001a8c  54000000	nop; delay slot nop
 1016  00001a90  8fc10004	lw	r1,4(r30)
 1017  00001a94  20220001	addi	r2,r1,#1
 1018  00001a98  afc20004	sw	4(r30),r2
 1019  00001a9c  20020030	addi	r2,r0,(#0x30)&0xff
 1020  00001aa0  a0220000	sb	(r1),r2
 1021  00001aa4  080000ec	j	L61_LF2
 1022  00001aa8  54000000	nop; delay slot nop
 1023  00001aac          	L62_LF2:
 1024  00001aac  20010001	addi	r1,r0,#1
 1025  00001ab0  afc1fff4	sw	-12(r30),r1
 1026  00001ab4          	L64_LF2:
 1027  00001ab4  8fc1fff4	lw	r1,-12(r30)
 1028  00001ab8  8fc20000	lw	r2,(r30)
 1029  00001abc  0022082c	sle	r1,r1,r2
 1030  00001ac0  1420000c	bnez	r1,L66_LF2
 1031  00001ac4  54000000	nop; delay slot nop
 1032  00001ac8  08000024	j	L65_LF2
 1033  00001acc  54000000	nop; delay slot nop
 1034  00001ad0          	L67_LF2:
 1035  00001ad0          	L66_LF2:
 1036  00001ad0  8fc1fff4	lw	r1,-12(r30)
 1037  00001ad4  00011820	add	r3,r0,r1
 1038  00001ad8  50620002	slli	r2,r3,#0x2
 1039  00001adc  00411020	add	r2,r2,r1
 1040  00001ae0  50410001	slli	r1,r2,#0x1
 1041  00001ae4  afc1fff4	sw	-12(r30),r1
 1042  00001ae8  0bffffc8	j	L64_LF2
 1043  00001aec  54000000	nop; delay slot nop
 1044  00001af0          	L65_LF2:
 1045  00001af0  54000000	nop
 1046  00001af4          	L68_LF2:
 1047  00001af4  8fc1fff4	lw	r1,-12(r30)
 1048  00001af8  2002000a	addi	r2,r0,#10
 1049  00001afc  00200035	movi2fp	f0,r1
 1050  00001b00  00400835	movi2fp	f1,r2
 1051  00001b04  0401000f	div	f0,f0,f1
 1052  00001b08  00000834	movfp2i	r1,f0
 1053  00001b0c  afc1fff4	sw	-12(r30),r1
 1054  00001b10  8fc10004	lw	r1,4(r30)
 1055  00001b14  20220001	addi	r2,r1,#1
 1056  00001b18  afc20004	sw	4(r30),r2
 1057  00001b1c  8fc20000	lw	r2,(r30)
 1058  00001b20  8fc3fff4	lw	r3,-12(r30)
 1059  00001b24  00400035	movi2fp	f0,r2
 1060  00001b28  00600835	movi2fp	f1,r3
 1061  00001b2c  0401000f	div	f0,f0,f1
 1062  00001b30  00001034	movfp2i	r2,f0
 1063  00001b34  00021820	add	r3,r0,r2
 1064  00001b38  20620030	addi	r2,r3,#48
 1065  00001b3c  a0220000	sb	(r1),r2
 1066  00001b40  8fc10000	lw	r1,(r30)
 1067  00001b44  8fc3fff4	lw	r3,-12(r30)
 1068  00001b48  00200035	movi2fp	f0,r1
 1069  00001b4c  00600835	movi2fp	f1,r3
 1070  00001b50  0401000f	div	f0,f0,f1
 1071  00001b54  00001034	movfp2i	r2,f0
 1072  00001b58  8fc3fff4	lw	r3,-12(r30)
 1073  00001b5c  00400035	movi2fp	f0,r2
 1074  00001b60  00600835	movi2fp	f1,r3
 1075  00001b64  0401000e	mult	f0,f0,f1
 1076  00001b68  00001034	movfp2i	r2,f0
 1077  00001b6c  00220822	sub	r1,r1,r2
 1078  00001b70  afc10000	sw	(r30),r1
 1079  00001b74          	L70_LF2:
 1080  00001b74  8fc1fff4	lw	r1,-12(r30)
 1081  00001b78  6c220001	sgti	r2,r1,#1
 1082  00001b7c  1440000c	bnez	r2,L71_LF2
 1083  00001b80  54000000	nop; delay slot nop
 1084  00001b84  0800000c	j	L61_LF2
 1085  00001b88  54000000	nop; delay slot nop
 1086  00001b8c          	L71_LF2:
 1087  00001b8c  0bffff64	j	L68_LF2
 1088  00001b90  54000000	nop; delay slot nop
 1089  00001b94          	L69_LF2:
 1090  00001b94          	L63_LF2:
 1091  00001b94          	L61_LF2:
 1092  00001b94  8fc10004	lw	r1,4(r30)
 1093  00001b98  20020000	addi	r2,r0,(#0x0)&0xff
 1094  00001b9c  a0220000	sb	(r1),r2
 1095  00001ba0          	L59_LF2:
 1096  00001ba0  8fa20000	lw	r2,0(r29)
 1097  00001ba4  8fa30004	lw	r3,4(r29)
 1098  00001ba8  8fdffff8	lw	r31,-8(r30)
 1099  00001bac  001ee820	add	r29,r0,r30
 1100  00001bb0  8fdefffc	lw	r30,-4(r30)
 1101  00001bb4  4be00000	jr	r31
 1102  00001bb8  54000000	nop
 1103  00001bbc          	.endproc _ditoa
 1104  00001bbc          	.align 2
 1105  00001bbc          	.proc _dstrtol
 1106  00001bbc          	.global _dstrtol
 1107  00001bbc          	_dstrtol:
 1108                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1109  00001bbc  afbefffc	sw	-4(r29),r30; push fp
 1110  00001bc0  001df020	add	r30,r0,r29; fp = sp
 1111  00001bc4  afbffff8	sw	-8(r29),r31; push ret addr
 1112  00001bc8  2fbd0020	subui	r29,r29,#32; alloc local storage
 1113  00001bcc  afa20000	sw	0(r29),r2
 1114  00001bd0  20010000	addi	r1,r0,#0
 1115  00001bd4  afc1fff4	sw	-12(r30),r1
 1116  00001bd8          	L73_LF2:
 1117  00001bd8  8fc10000	lw	r1,(r30)
 1118  00001bdc  90220000	lbu	r2,(r1)
 1119  00001be0  60410020	seqi	r1,r2,#32
 1120  00001be4  14200034	bnez	r1,L75_LF2
 1121  00001be8  54000000	nop; delay slot nop
 1122  00001bec  8fc10000	lw	r1,(r30)
 1123  00001bf0  90220000	lbu	r2,(r1)
 1124  00001bf4  60410009	seqi	r1,r2,#9
 1125  00001bf8  14200020	bnez	r1,L75_LF2
 1126  00001bfc  54000000	nop; delay slot nop
 1127  00001c00  8fc10000	lw	r1,(r30)
 1128  00001c04  90220000	lbu	r2,(r1)
 1129  00001c08  6041000a	seqi	r1,r2,#10
 1130  00001c0c  1420000c	bnez	r1,L75_LF2
 1131  00001c10  54000000	nop; delay slot nop
 1132  00001c14  0800001c	j	L74_LF2
 1133  00001c18  54000000	nop; delay slot nop
 1134  00001c1c          	L75_LF2:
 1135  00001c1c  8fc20000	lw	r2,(r30)
 1136  00001c20  20410001	addi	r1,r2,#1
 1137  00001c24  00011020	add	r2,r0,r1
 1138  00001c28  afc20000	sw	(r30),r2
 1139  00001c2c  0bffffa8	j	L73_LF2
 1140  00001c30  54000000	nop; delay slot nop
 1141  00001c34          	L74_LF2:
 1142  00001c34  8fc10004	lw	r1,4(r30)
 1143  00001c38  64220000	snei	r2,r1,#0
 1144  00001c3c  10400010	beqz	r2,L76_LF2
 1145  00001c40  54000000	nop; delay slot nop
 1146  00001c44  8fc10004	lw	r1,4(r30)
 1147  00001c48  8fc20000	lw	r2,(r30)
 1148  00001c4c  ac220000	sw	(r1),r2
 1149  00001c50          	L76_LF2:
 1150  00001c50  8fc10000	lw	r1,(r30)
 1151  00001c54  90220000	lbu	r2,(r1)
 1152  00001c58  64410000	snei	r1,r2,#0
 1153  00001c5c  14200010	bnez	r1,L77_LF2
 1154  00001c60  54000000	nop; delay slot nop
 1155  00001c64  8fc1fff4	lw	r1,-12(r30)
 1156  00001c68  08000294	j	L72_LF2
 1157  00001c6c  54000000	nop; delay slot nop
 1158  00001c70          	L77_LF2:
 1159  00001c70  8fc10000	lw	r1,(r30)
 1160  00001c74  90220000	lbu	r2,(r1)
 1161  00001c78  6041002d	seqi	r1,r2,#45
 1162  00001c7c  10200024	beqz	r1,L78_LF2
 1163  00001c80  54000000	nop; delay slot nop
 1164  00001c84  2001ffff	addi	r1,r0,#-1
 1165  00001c88  afc1ffec	sw	-20(r30),r1
 1166  00001c8c  8fc20000	lw	r2,(r30)
 1167  00001c90  20410001	addi	r1,r2,#1
 1168  00001c94  00011020	add	r2,r0,r1
 1169  00001c98  afc20000	sw	(r30),r2
 1170  00001c9c  0800000c	j	L79_LF2
 1171  00001ca0  54000000	nop; delay slot nop
 1172  00001ca4          	L78_LF2:
 1173  00001ca4  20010001	addi	r1,r0,#1
 1174  00001ca8  afc1ffec	sw	-20(r30),r1
 1175  00001cac          	L79_LF2:
 1176  00001cac  8fc10008	lw	r1,8(r30)
 1177  00001cb0  64220000	snei	r2,r1,#0
 1178  00001cb4  14400090	bnez	r2,L80_LF2
 1179  00001cb8  54000000	nop; delay slot nop
 1180  00001cbc  8fc10000	lw	r1,(r30)
 1181  00001cc0  90220000	lbu	r2,(r1)
 1182  00001cc4  60410030	seqi	r1,r2,#48
 1183  00001cc8  10200074	beqz	r1,L81_LF2
 1184  00001ccc  54000000	nop; delay slot nop
 1185  00001cd0  8fc20000	lw	r2,(r30)
 1186  00001cd4  20410001	addi	r1,r2,#1
 1187  00001cd8  00011020	add	r2,r0,r1
 1188  00001cdc  afc20000	sw	(r30),r2
 1189  00001ce0  8fc10000	lw	r1,(r30)
 1190  00001ce4  90220000	lbu	r2,(r1)
 1191  00001ce8  60410078	seqi	r1,r2,#120
 1192  00001cec  14200020	bnez	r1,L83_LF2
 1193  00001cf0  54000000	nop; delay slot nop
 1194  00001cf4  8fc10000	lw	r1,(r30)
 1195  00001cf8  90220000	lbu	r2,(r1)
 1196  00001cfc  60410058	seqi	r1,r2,#88
 1197  00001d00  1420000c	bnez	r1,L83_LF2
 1198  00001d04  54000000	nop; delay slot nop
 1199  00001d08  08000024	j	L82_LF2
 1200  00001d0c  54000000	nop; delay slot nop
 1201  00001d10          	L83_LF2:
 1202  00001d10  20010010	addi	r1,r0,#16
 1203  00001d14  afc10008	sw	8(r30),r1
 1204  00001d18  8fc20000	lw	r2,(r30)
 1205  00001d1c  20410001	addi	r1,r2,#1
 1206  00001d20  00011020	add	r2,r0,r1
 1207  00001d24  afc20000	sw	(r30),r2
 1208  00001d28  0800000c	j	L84_LF2
 1209  00001d2c  54000000	nop; delay slot nop
 1210  00001d30          	L82_LF2:
 1211  00001d30  20010008	addi	r1,r0,#8
 1212  00001d34  afc10008	sw	8(r30),r1
 1213  00001d38          	L84_LF2:
 1214  00001d38  0800000c	j	L80_LF2
 1215  00001d3c  54000000	nop; delay slot nop
 1216  00001d40          	L81_LF2:
 1217  00001d40  2001000a	addi	r1,r0,#10
 1218  00001d44  afc10008	sw	8(r30),r1
 1219  00001d48          	L85_LF2:
 1220  00001d48          	L80_LF2:
 1221  00001d48  8fc10008	lw	r1,8(r30)
 1222  00001d4c  70220000	slei	r2,r1,#0
 1223  00001d50  1440001c	bnez	r2,L87_LF2
 1224  00001d54  54000000	nop; delay slot nop
 1225  00001d58  8fc10008	lw	r1,8(r30)
 1226  00001d5c  6c220010	sgti	r2,r1,#16
 1227  00001d60  1440000c	bnez	r2,L87_LF2
 1228  00001d64  54000000	nop; delay slot nop
 1229  00001d68  08000010	j	L86_LF2
 1230  00001d6c  54000000	nop; delay slot nop
 1231  00001d70          	L87_LF2:
 1232  00001d70  8fc1fff4	lw	r1,-12(r30)
 1233  00001d74  08000188	j	L72_LF2
 1234  00001d78  54000000	nop; delay slot nop
 1235  00001d7c          	L86_LF2:
 1236  00001d7c  54000000	nop
 1237  00001d80          	L88_LF2:
 1238  00001d80  8fc10000	lw	r1,(r30)
 1239  00001d84  90220000	lbu	r2,(r1)
 1240  00001d88  6c41002f	sgtui	r1,r2,#47
 1241  00001d8c  10200030	beqz	r1,L91_LF2
 1242  00001d90  54000000	nop; delay slot nop
 1243  00001d94  8fc10000	lw	r1,(r30)
 1244  00001d98  90220000	lbu	r2,(r1)
 1245  00001d9c  70410039	sleui	r1,r2,#57
 1246  00001da0  1020001c	beqz	r1,L91_LF2
 1247  00001da4  54000000	nop; delay slot nop
 1248  00001da8  8fc10000	lw	r1,(r30)
 1249  00001dac  90220000	lbu	r2,(r1)
 1250  00001db0  2041ffd0	addi	r1,r2,#-48
 1251  00001db4  afc1fff0	sw	-16(r30),r1
 1252  00001db8  0800008c	j	L92_LF2
 1253  00001dbc  54000000	nop; delay slot nop
 1254  00001dc0          	L91_LF2:
 1255  00001dc0  8fc10000	lw	r1,(r30)
 1256  00001dc4  90220000	lbu	r2,(r1)
 1257  00001dc8  6c410060	sgtui	r1,r2,#96
 1258  00001dcc  10200030	beqz	r1,L93_LF2
 1259  00001dd0  54000000	nop; delay slot nop
 1260  00001dd4  8fc10000	lw	r1,(r30)
 1261  00001dd8  90220000	lbu	r2,(r1)
 1262  00001ddc  7041007a	sleui	r1,r2,#122
 1263  00001de0  1020001c	beqz	r1,L93_LF2
 1264  00001de4  54000000	nop; delay slot nop
 1265  00001de8  8fc10000	lw	r1,(r30)
 1266  00001dec  90220000	lbu	r2,(r1)
 1267  00001df0  2041ffa9	addi	r1,r2,#-87
 1268  00001df4  afc1fff0	sw	-16(r30),r1
 1269  00001df8  0800004c	j	L92_LF2
 1270  00001dfc  54000000	nop; delay slot nop
 1271  00001e00          	L93_LF2:
 1272  00001e00  8fc10000	lw	r1,(r30)
 1273  00001e04  90220000	lbu	r2,(r1)
 1274  00001e08  6c410040	sgtui	r1,r2,#64
 1275  00001e0c  10200030	beqz	r1,L95_LF2
 1276  00001e10  54000000	nop; delay slot nop
 1277  00001e14  8fc10000	lw	r1,(r30)
 1278  00001e18  90220000	lbu	r2,(r1)
 1279  00001e1c  7041005a	sleui	r1,r2,#90
 1280  00001e20  1020001c	beqz	r1,L95_LF2
 1281  00001e24  54000000	nop; delay slot nop
 1282  00001e28  8fc10000	lw	r1,(r30)
 1283  00001e2c  90220000	lbu	r2,(r1)
 1284  00001e30  2041ffc9	addi	r1,r2,#-55
 1285  00001e34  afc1fff0	sw	-16(r30),r1
 1286  00001e38  0800000c	j	L92_LF2
 1287  00001e3c  54000000	nop; delay slot nop
 1288  00001e40          	L95_LF2:
 1289  00001e40  200103e8	addi	r1,r0,#1000
 1290  00001e44  afc1fff0	sw	-16(r30),r1
 1291  00001e48          	L96_LF2:
 1292  00001e48          	L94_LF2:
 1293  00001e48          	L92_LF2:
 1294  00001e48  8fc1fff0	lw	r1,-16(r30)
 1295  00001e4c  8fc20008	lw	r2,8(r30)
 1296  00001e50  0022082a	slt	r1,r1,r2
 1297  00001e54  10200040	beqz	r1,L90_LF2
 1298  00001e58  54000000	nop; delay slot nop
 1299  00001e5c  8fc1fff4	lw	r1,-12(r30)
 1300  00001e60  8fc20008	lw	r2,8(r30)
 1301  00001e64  00200035	movi2fp	f0,r1
 1302  00001e68  00400835	movi2fp	f1,r2
 1303  00001e6c  0401000e	mult	f0,f0,f1
 1304  00001e70  00000834	movfp2i	r1,f0
 1305  00001e74  afc1fff4	sw	-12(r30),r1
 1306  00001e78  8fc1fff4	lw	r1,-12(r30)
 1307  00001e7c  8fc2fff0	lw	r2,-16(r30)
 1308  00001e80  00220820	add	r1,r1,r2
 1309  00001e84  afc1fff4	sw	-12(r30),r1
 1310  00001e88  8fc20000	lw	r2,(r30)
 1311  00001e8c  20410001	addi	r1,r2,#1
 1312  00001e90  00011020	add	r2,r0,r1
 1313  00001e94  afc20000	sw	(r30),r2
 1314  00001e98          	L97_LF2:
 1315  00001e98          	L90_LF2:
 1316  00001e98  8fc1fff0	lw	r1,-16(r30)
 1317  00001e9c  8fc20008	lw	r2,8(r30)
 1318  00001ea0  0022082a	slt	r1,r1,r2
 1319  00001ea4  1420000c	bnez	r1,L98_LF2
 1320  00001ea8  54000000	nop; delay slot nop
 1321  00001eac  0800000c	j	L89_LF2
 1322  00001eb0  54000000	nop; delay slot nop
 1323  00001eb4          	L98_LF2:
 1324  00001eb4  0bfffec8	j	L88_LF2
 1325  00001eb8  54000000	nop; delay slot nop
 1326  00001ebc          	L89_LF2:
 1327  00001ebc  8fc10004	lw	r1,4(r30)
 1328  00001ec0  64220000	snei	r2,r1,#0
 1329  00001ec4  10400010	beqz	r2,L99_LF2
 1330  00001ec8  54000000	nop; delay slot nop
 1331  00001ecc  8fc10004	lw	r1,4(r30)
 1332  00001ed0  8fc20000	lw	r2,(r30)
 1333  00001ed4  ac220000	sw	(r1),r2
 1334  00001ed8          	L99_LF2:
 1335  00001ed8  8fc1fff4	lw	r1,-12(r30)
 1336  00001edc  8fc2ffec	lw	r2,-20(r30)
 1337  00001ee0  00200035	movi2fp	f0,r1
 1338  00001ee4  00400835	movi2fp	f1,r2
 1339  00001ee8  0401000e	mult	f0,f0,f1
 1340  00001eec  00000834	movfp2i	r1,f0
 1341  00001ef0  afc1fff4	sw	-12(r30),r1
 1342  00001ef4  8fc1fff4	lw	r1,-12(r30)
 1343  00001ef8  08000004	j	L72_LF2
 1344  00001efc  54000000	nop; delay slot nop
 1345  00001f00          	L72_LF2:
 1346  00001f00  8fa20000	lw	r2,0(r29)
 1347  00001f04  8fdffff8	lw	r31,-8(r30)
 1348  00001f08  001ee820	add	r29,r0,r30
 1349  00001f0c  8fdefffc	lw	r30,-4(r30)
 1350  00001f10  4be00000	jr	r31
 1351  00001f14  54000000	nop
 1352  00001f18          	.endproc _dstrtol
 1353  00001f18          	.align 2
 1354  00001f18          	.proc _bcopy
 1355  00001f18          	.global _bcopy
 1356  00001f18          	_bcopy:
 1357                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1358  00001f18  afbefffc	sw	-4(r29),r30; push fp
 1359  00001f1c  001df020	add	r30,r0,r29; fp = sp
 1360  00001f20  afbffff8	sw	-8(r29),r31; push ret addr
 1361  00001f24  2fbd0010	subui	r29,r29,#16; alloc local storage
 1362  00001f28  afa20000	sw	0(r29),r2
 1363  00001f2c  afa30004	sw	4(r29),r3
 1364  00001f30  54000000	nop
 1365  00001f34          	L101_LF2:
 1366  00001f34  8fc10008	lw	r1,8(r30)
 1367  00001f38  2022ffff	addi	r2,r1,#-1
 1368  00001f3c  afc20008	sw	8(r30),r2
 1369  00001f40  6c210000	sgti	r1,r1,#0
 1370  00001f44  1420000c	bnez	r1,L103_LF2
 1371  00001f48  54000000	nop; delay slot nop
 1372  00001f4c  0800002c	j	L102_LF2
 1373  00001f50  54000000	nop; delay slot nop
 1374  00001f54          	L103_LF2:
 1375  00001f54  8fc10004	lw	r1,4(r30)
 1376  00001f58  20220001	addi	r2,r1,#1
 1377  00001f5c  afc20004	sw	4(r30),r2
 1378  00001f60  8fc20000	lw	r2,(r30)
 1379  00001f64  20430001	addi	r3,r2,#1
 1380  00001f68  afc30000	sw	(r30),r3
 1381  00001f6c  80420000	lb	r2,(r2)
 1382  00001f70  a0220000	sb	(r1),r2
 1383  00001f74  0bffffbc	j	L101_LF2
 1384  00001f78  54000000	nop; delay slot nop
 1385  00001f7c          	L102_LF2:
 1386  00001f7c          	L100_LF2:
 1387  00001f7c  8fa20000	lw	r2,0(r29)
 1388  00001f80  8fa30004	lw	r3,4(r29)
 1389  00001f84  8fdffff8	lw	r31,-8(r30)
 1390  00001f88  001ee820	add	r29,r0,r30
 1391  00001f8c  8fdefffc	lw	r30,-4(r30)
 1392  00001f90  4be00000	jr	r31
 1393  00001f94  54000000	nop
 1394  00001f98          	.endproc _bcopy
 1395  00001f98          	.align 2
 1396  00001f98          	.proc _bzero
 1397  00001f98          	.global _bzero
 1398  00001f98          	_bzero:
 1399                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1400  00001f98  afbefffc	sw	-4(r29),r30; push fp
 1401  00001f9c  001df020	add	r30,r0,r29; fp = sp
 1402  00001fa0  afbffff8	sw	-8(r29),r31; push ret addr
 1403  00001fa4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1404  00001fa8  afa20000	sw	0(r29),r2
 1405  00001fac  54000000	nop
 1406  00001fb0          	L105_LF2:
 1407  00001fb0  8fc10004	lw	r1,4(r30)
 1408  00001fb4  2022ffff	addi	r2,r1,#-1
 1409  00001fb8  afc20004	sw	4(r30),r2
 1410  00001fbc  6c210000	sgti	r1,r1,#0
 1411  00001fc0  1420000c	bnez	r1,L107_LF2
 1412  00001fc4  54000000	nop; delay slot nop
 1413  00001fc8  08000020	j	L106_LF2
 1414  00001fcc  54000000	nop; delay slot nop
 1415  00001fd0          	L107_LF2:
 1416  00001fd0  8fc10000	lw	r1,(r30)
 1417  00001fd4  20220001	addi	r2,r1,#1
 1418  00001fd8  afc20000	sw	(r30),r2
 1419  00001fdc  20020000	addi	r2,r0,(#0x0)&0xff
 1420  00001fe0  a0220000	sb	(r1),r2
 1421  00001fe4  0bffffc8	j	L105_LF2
 1422  00001fe8  54000000	nop; delay slot nop
 1423  00001fec          	L106_LF2:
 1424  00001fec          	L104_LF2:
 1425  00001fec  8fa20000	lw	r2,0(r29)
 1426  00001ff0  8fdffff8	lw	r31,-8(r30)
 1427  00001ff4  001ee820	add	r29,r0,r30
 1428  00001ff8  8fdefffc	lw	r30,-4(r30)
 1429  00001ffc  4be00000	jr	r31
 1430  00002000  54000000	nop
 1431  00002004          	.endproc _bzero
 1432  00002004          	.align 2
 1433  00002004          	.proc _min
 1434  00002004          	.global _min
 1435  00002004          	_min:
 1436                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1437  00002004  afbefffc	sw	-4(r29),r30; push fp
 1438  00002008  001df020	add	r30,r0,r29; fp = sp
 1439  0000200c  afbffff8	sw	-8(r29),r31; push ret addr
 1440  00002010  2fbd0010	subui	r29,r29,#16; alloc local storage
 1441  00002014  afa20000	sw	0(r29),r2
 1442  00002018  afa30004	sw	4(r29),r3
 1443  0000201c  8fc10000	lw	r1,(r30)
 1444  00002020  8fc20004	lw	r2,4(r30)
 1445  00002024  0022182c	sle	r3,r1,r2
 1446  00002028  14600008	bnez	r3,L109_LF2
 1447  0000202c  54000000	nop; delay slot nop
 1448  00002030  8fc10004	lw	r1,4(r30)
 1449  00002034          	L109_LF2:
 1450  00002034  08000004	j	L108_LF2
 1451  00002038  54000000	nop; delay slot nop
 1452  0000203c          	L108_LF2:
 1453  0000203c  8fa20000	lw	r2,0(r29)
 1454  00002040  8fa30004	lw	r3,4(r29)
 1455  00002044  8fdffff8	lw	r31,-8(r30)
 1456  00002048  001ee820	add	r29,r0,r30
 1457  0000204c  8fdefffc	lw	r30,-4(r30)
 1458  00002050  4be00000	jr	r31
 1459  00002054  54000000	nop
 1460  00002058          	.endproc _min
 1461  00002058          	.align 2
 1462  00002058          	.proc _max
 1463  00002058          	.global _max
 1464  00002058          	_max:
 1465                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1466  00002058  afbefffc	sw	-4(r29),r30; push fp
 1467  0000205c  001df020	add	r30,r0,r29; fp = sp
 1468  00002060  afbffff8	sw	-8(r29),r31; push ret addr
 1469  00002064  2fbd0010	subui	r29,r29,#16; alloc local storage
 1470  00002068  afa20000	sw	0(r29),r2
 1471  0000206c  afa30004	sw	4(r29),r3
 1472  00002070  8fc10000	lw	r1,(r30)
 1473  00002074  8fc20004	lw	r2,4(r30)
 1474  00002078  0022182d	sge	r3,r1,r2
 1475  0000207c  14600008	bnez	r3,L111_LF2
 1476  00002080  54000000	nop; delay slot nop
 1477  00002084  8fc10004	lw	r1,4(r30)
 1478  00002088          	L111_LF2:
 1479  00002088  08000004	j	L110_LF2
 1480  0000208c  54000000	nop; delay slot nop
 1481  00002090          	L110_LF2:
 1482  00002090  8fa20000	lw	r2,0(r29)
 1483  00002094  8fa30004	lw	r3,4(r29)
 1484  00002098  8fdffff8	lw	r31,-8(r30)
 1485  0000209c  001ee820	add	r29,r0,r30
 1486  000020a0  8fdefffc	lw	r30,-4(r30)
 1487  000020a4  4be00000	jr	r31
 1488  000020a8  54000000	nop
 1489  000020ac          	.endproc _max
 1490                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1491                      ;;;
 1492                      ;;; Most of the traps are called in files from libtraps.
 1495  000020ac          	.align 2
 1496  000020ac          	.proc _exit
 1497  000020ac          	.global _exit
 1498  000020ac          	_exit:
 1499  000020ac  44000300	trap	#0x300
 1500  000020b0  4be00000	jr	r31
 1501  000020b4  54000000	nop
 1502  000020b8          	.endproc _exit
 1504                      ; for the benefit of gcc.
 1505  000020b8          	.proc ___main
 1506  000020b8          	.global ___main
 1507  000020b8          	___main:
 1508  000020b8  4be00000	jr	r31
 1509  000020bc  54000000	nop
 1510  000020c0          	.endproc ___main
 1511  000020c0          	.text
 1512  000020c0          	.global _etext
 1513  000020c0          	_etext:
 1514  000020c0          	.align 3
 1515  000020c0          	.data
 1516  00003004          	.global _edata
 1517  00003004          	_edata:
