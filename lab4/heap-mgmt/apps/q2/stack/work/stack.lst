 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 69
    4                      ; Text size: 4456
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.align 2
   80  000010d4          	.proc _func
   81  000010d4          	.global _func
   82  000010d4          	_func:
   83                      ;  Function 'func'; 0 bytes of locals, 0 regs to save.
   84  000010d4  afbefffc	sw	-4(r29),r30; push fp
   85  000010d8  001df020	add	r30,r0,r29; fp = sp
   86  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   87  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
   88  000010e4  8fdf0000	lw	r31,(r30)
   89  000010e8  67e10000	snei	r1,r31,#0
   90  000010ec  1020001c	beqz	r1,L15_LF0
   91  000010f0  54000000	nop; not filled.
   92  000010f4  23bdfff8	addi	r29,r29,#-8
   93  000010f8  23e1ffff	addi	r1,r31,#-1
   94  000010fc  afa10000	sw	(r29),r1
   95  00001100  0fffffd0	jal	_func
   96  00001104  54000000	nop; not filled.
   97  00001108  23bd0008	addi	r29,r29,#8
   98  0000110c          	L15_LF0:
   99  0000110c  8fdffff8	lw	r31,-8(r30)
  100  00001110  001ee820	add	r29,r0,r30
  101  00001114  8fdefffc	lw	r30,-4(r30)
  102  00001118  4be00000	jr	r31
  103  0000111c  54000000	nop
  104  00001120          	.endproc _func
  105  00001120          	.data
  106  00003000          	.align 2
  107  00003000          	LC0_LF0:
  108  00003000  57726f6e	.ascii "Wrong number of arguments\n\000"
  108  00003004  67206e75	
  108  00003008  6d626572	
  108  0000300c  206f6620	
  108  00003010  61726775	
  108  00003014  6d656e74	
  108  00003018  730a00  	
  109  0000301b          	.align 2
  110  0000301c          	LC1_LF0:
  111  0000301c  25730a00	.ascii "%s\n\000"
  112  00003020          	.align 2
  113  00003020          	LC2_LF0:
  114  00003020  74657374	.ascii "test\n\000"
  114  00003024  0a00    	
  115  00003026          	.align 2
  116  00003028          	LC3_LF0:
  117  00003028  4661696c	.ascii "Failed to signal semaphore!\n\000"
  117  0000302c  65642074	
  117  00003030  6f207369	
  117  00003034  676e616c	
  117  00003038  2073656d	
  117  0000303c  6170686f	
  117  00003040  7265210a	
  117  00003044  00      	
  118  00003045          	.text
  119  00001120          	.align 2
  120  00001120          	.proc _main
  121  00001120          	.global _main
  122  00001120          	_main:
  123                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  124  00001120  afbefffc	sw	-4(r29),r30; push fp
  125  00001124  001df020	add	r30,r0,r29; fp = sp
  126  00001128  afbffff8	sw	-8(r29),r31; push ret addr
  127  0000112c  2fbd0008	subui	r29,r29,#8; alloc local storage
  128  00001130  8fc40000	lw	r4,(r30)
  129  00001134  8fc50004	lw	r5,4(r30)
  130  00001138  0c001024	jal	___main
  131  0000113c  54000000	nop; not filled.
  132  00001140  64810003	snei	r1,r4,#3
  133  00001144  10200020	beqz	r1,L28_LF0
  134  00001148  54000000	nop; not filled.
  135  0000114c  23bdfff8	addi	r29,r29,#-8
  136  00001150  3c060000	lhi	r6,((LC0_LF0)>>16)&0xffff
  137  00001154  24c63000	addui	r6,r6,(LC0_LF0)&0xffff
  138  00001158  afa60000	sw	(r29),r6
  139  0000115c  0c000140	jal	_Printf
  140  00001160  54000000	nop; not filled.
  141  00001164  23bd0008	addi	r29,r29,#8
  142  00001168          	L28_LF0:
  143  00001168  20020000	addi	r2,r0,#0
  144  0000116c  0044082a	slt	r1,r2,r4
  145  00001170  10200040	beqz	r1,L30_LF0
  146  00001174  54000000	nop; not filled.
  147  00001178  00051820	add	r3,r0,r5
  148  0000117c          	L32_LF0:
  149  0000117c  23bdfff8	addi	r29,r29,#-8
  150  00001180  3c060000	lhi	r6,((LC1_LF0)>>16)&0xffff
  151  00001184  24c6301c	addui	r6,r6,(LC1_LF0)&0xffff
  152  00001188  afa60000	sw	(r29),r6
  153  0000118c  8c610000	lw	r1,(r3)
  154  00001190  afa10004	sw	4(r29),r1
  155  00001194  0c000108	jal	_Printf
  156  00001198  54000000	nop; not filled.
  157  0000119c  23bd0008	addi	r29,r29,#8
  158  000011a0  20630004	addi	r3,r3,#4
  159  000011a4  20420001	addi	r2,r2,#1
  160  000011a8  0044082a	slt	r1,r2,r4
  161  000011ac  1420ffcc	bnez	r1,L32_LF0
  162  000011b0  54000000	nop; not filled.
  163  000011b4          	L30_LF0:
  164  000011b4  23bdfff0	addi	r29,r29,#-16
  165  000011b8  8ca50008	lw	r5,8(r5)
  166  000011bc  afa50000	sw	(r29),r5
  167  000011c0  2006000a	addi	r6,r0,#10
  168  000011c4  afa60004	sw	4(r29),r6
  169  000011c8  20060000	addi	r6,r0,#0
  170  000011cc  afa60008	sw	8(r29),r6
  171  000011d0  0c000a90	jal	_dstrtol
  172  000011d4  54000000	nop; not filled.
  173  000011d8  00011020	add	r2,r0,r1
  174  000011dc  3c060000	lhi	r6,((LC2_LF0)>>16)&0xffff
  175  000011e0  24c63020	addui	r6,r6,(LC2_LF0)&0xffff
  176  000011e4  afa60000	sw	(r29),r6
  177  000011e8  0c0000b4	jal	_Printf
  178  000011ec  54000000	nop; not filled.
  179  000011f0  23bd0010	addi	r29,r29,#16
  180  000011f4  23bdfff8	addi	r29,r29,#-8
  181  000011f8  2006270f	addi	r6,r0,#9999
  182  000011fc  afa60000	sw	(r29),r6
  183  00001200  0ffffed0	jal	_func
  184  00001204  54000000	nop; not filled.
  185  00001208  23bd0008	addi	r29,r29,#8
  186  0000120c  23bdfff8	addi	r29,r29,#-8
  187  00001210  afa20000	sw	(r29),r2
  188  00001214  0c0000dc	jal	_sem_signal
  189  00001218  54000000	nop; not filled.
  190  0000121c  23bd0008	addi	r29,r29,#8
  191  00001220  64210001	snei	r1,r1,#1
  192  00001224  10200028	beqz	r1,L36_LF0
  193  00001228  54000000	nop; not filled.
  194  0000122c  23bdfff8	addi	r29,r29,#-8
  195  00001230  3c060000	lhi	r6,((LC3_LF0)>>16)&0xffff
  196  00001234  24c63028	addui	r6,r6,(LC3_LF0)&0xffff
  197  00001238  afa60000	sw	(r29),r6
  198  0000123c  0c000060	jal	_Printf
  199  00001240  54000000	nop; not filled.
  200  00001244  0c000160	jal	_Exit
  201  00001248  54000000	nop; not filled.
  202  0000124c  23bd0008	addi	r29,r29,#8
  203  00001250          	L36_LF0:
  204  00001250  0c000f00	jal	_exit
  205  00001254  54000000	nop
  206  00001258          	.endproc _main
  207                      ;;;
  208                      ;;; Stub functions for DLX traps.
  209                      ;;;
  210                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  211                      ;;;
  212                      ;;; The traps such as Open and Close
  213                      ;;; (note the capital letters) are for use by user programs.  The traps
  214                      ;;; with names such as open and close (lower case) are for use by the OS.
  215                      ;;;
  218  00001258          	.align 2
  220                      ;;; The following are the traps to be used by user-level programs
  221                      ;;;
  223  00001258          	.align 2
  224  00001258          	.proc _Open
  225  00001258          	.global _Open
  226  00001258          	_Open:
  227                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  228                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  229                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  230  00001258  44000213	trap	#0x213
  231  0000125c  4be00000	jr	r31
  232  00001260  54000000	nop
  233  00001264          	.endproc _Open
  235  00001264          	.proc _Close
  236  00001264          	.global _Close
  237  00001264          	_Close:
  238  00001264  44000214	trap	#0x214
  239  00001268  4be00000	jr	r31
  240  0000126c  54000000	nop
  241  00001270          	.endproc _Close
  243  00001270          	.proc _Read
  244  00001270          	.global _Read
  245  00001270          	_Read:
  246  00001270  44000210	trap	#0x210
  247  00001274  4be00000	jr	r31
  248  00001278  54000000	nop
  249  0000127c          	.endproc _Read
  251  0000127c          	.proc _Write
  252  0000127c          	.global _Write
  253  0000127c          	_Write:
  254  0000127c  44000211	trap	#0x211
  255  00001280  4be00000	jr	r31
  256  00001284  54000000	nop
  257  00001288          	.endproc _Write
  259  00001288          	.proc _Lseek
  260  00001288          	.global _Lseek
  261  00001288          	_Lseek:
  262  00001288  44000212	trap	#0x212
  263  0000128c  4be00000	jr	r31
  264  00001290  54000000	nop
  265  00001294          	.endproc _Lseek
  267  00001294          	.proc _Putchar
  268  00001294          	.global _Putchar
  269  00001294          	_Putchar:
  270  00001294  44000280	trap	#0x280
  271  00001298  4be00000	jr	r31
  272  0000129c  54000000	nop
  273  000012a0          	.endproc _Putchar
  275  000012a0          	.proc _Printf
  276  000012a0          	.global _Printf
  277  000012a0          	_Printf:
  278  000012a0  44000201	trap	#0x201
  279  000012a4  4be00000	jr	r31
  280  000012a8  54000000	nop
  281  000012ac          	.endproc _Printf
  283  000012ac          	.proc _getpid
  284  000012ac          	.global _getpid
  285  000012ac          	_getpid:
  286  000012ac  44000431	trap	#0x431
  287  000012b0  4be00000	jr	r31
  288  000012b4  54000000	nop
  289  000012b8          	.endproc _getpid
  291  000012b8          	.proc _process_create
  292  000012b8          	.global _process_create
  293  000012b8          	_process_create:
  294  000012b8  44000432	trap	#0x432
  295  000012bc  4be00000	jr	r31
  296  000012c0  54000000	nop
  297  000012c4          	.endproc _process_create
  299  000012c4          	.proc _shmget
  300  000012c4          	.global _shmget
  301  000012c4          	_shmget:
  302  000012c4  44000440	trap	#0x440
  303  000012c8  4be00000	jr	r31
  304  000012cc  54000000	nop
  305  000012d0          	.endproc _shmget
  307  000012d0          	.proc _shmat
  308  000012d0          	.global _shmat
  309  000012d0          	_shmat:
  310  000012d0  44000441	trap	#0x441
  311  000012d4  4be00000	jr	r31
  312  000012d8  54000000	nop
  313  000012dc          	.endproc _shmat
  315  000012dc          	.proc _sem_create
  316  000012dc          	.global _sem_create
  317  000012dc          	_sem_create:
  318  000012dc  44000450	trap	#0x450
  319  000012e0  4be00000	jr	r31
  320  000012e4  54000000	nop
  321  000012e8          	.endproc _sem_create
  323  000012e8          	.proc _sem_wait
  324  000012e8          	.global _sem_wait
  325  000012e8          	_sem_wait:
  326  000012e8  44000451	trap	#0x451
  327  000012ec  4be00000	jr	r31
  328  000012f0  54000000	nop
  329  000012f4          	.endproc _sem_wait
  331  000012f4          	.proc _sem_signal
  332  000012f4          	.global _sem_signal
  333  000012f4          	_sem_signal:
  334  000012f4  44000452	trap	#0x452
  335  000012f8  4be00000	jr	r31
  336  000012fc  54000000	nop
  337  00001300          	.endproc _sem_signal
  339  00001300          	.proc _lock_create
  340  00001300          	.global _lock_create
  341  00001300          	_lock_create:
  342  00001300  44000453	trap	#0x453
  343  00001304  4be00000	jr	r31
  344  00001308  54000000	nop
  345  0000130c          	.endproc _lock_create
  347  0000130c          	.proc _lock_acquire
  348  0000130c          	.global _lock_acquire
  349  0000130c          	_lock_acquire:
  350  0000130c  44000454	trap	#0x454
  351  00001310  4be00000	jr	r31
  352  00001314  54000000	nop
  353  00001318          	.endproc _lock_acquire
  355  00001318          	.proc _lock_release
  356  00001318          	.global _lock_release
  357  00001318          	_lock_release:
  358  00001318  44000455	trap	#0x455
  359  0000131c  4be00000	jr	r31
  360  00001320  54000000	nop
  361  00001324          	.endproc _lock_release
  363  00001324          	.proc _cond_create
  364  00001324          	.global _cond_create
  365  00001324          	_cond_create:
  366  00001324  44000456	trap	#0x456
  367  00001328  4be00000	jr	r31
  368  0000132c  54000000	nop
  369  00001330          	.endproc _cond_create
  371  00001330          	.proc _cond_wait
  372  00001330          	.global _cond_wait
  373  00001330          	_cond_wait:
  374  00001330  44000457	trap	#0x457
  375  00001334  4be00000	jr	r31
  376  00001338  54000000	nop
  377  0000133c          	.endproc _cond_wait
  379  0000133c          	.proc _cond_signal
  380  0000133c          	.global _cond_signal
  381  0000133c          	_cond_signal:
  382  0000133c  44000458	trap	#0x458
  383  00001340  4be00000	jr	r31
  384  00001344  54000000	nop
  385  00001348          	.endproc _cond_signal
  387  00001348          	.proc _cond_broadcast
  388  00001348          	.global _cond_broadcast
  389  00001348          	_cond_broadcast:
  390  00001348  44000459	trap	#0x459
  391  0000134c  4be00000	jr	r31
  392  00001350  54000000	nop
  393  00001354          	.endproc _cond_broadcast
  395  00001354          	.proc _mbox_create
  396  00001354          	.global _mbox_create
  397  00001354          	_mbox_create:
  398  00001354  44000460	trap	#0x460
  399  00001358  4be00000	jr	r31
  400  0000135c  54000000	nop
  401  00001360          	.endproc _mbox_create
  403  00001360          	.proc _mbox_open
  404  00001360          	.global _mbox_open
  405  00001360          	_mbox_open:
  406  00001360  44000461	trap	#0x461
  407  00001364  4be00000	jr	r31
  408  00001368  54000000	nop
  409  0000136c          	.endproc _mbox_open
  411  0000136c          	.proc _mbox_close
  412  0000136c          	.global _mbox_close
  413  0000136c          	_mbox_close:
  414  0000136c  44000462	trap	#0x462
  415  00001370  4be00000	jr	r31
  416  00001374  54000000	nop
  417  00001378          	.endproc _mbox_close
  419  00001378          	.proc _mbox_send
  420  00001378          	.global _mbox_send
  421  00001378          	_mbox_send:
  422  00001378  44000463	trap	#0x463
  423  0000137c  4be00000	jr	r31
  424  00001380  54000000	nop
  425  00001384          	.endproc _mbox_send
  427  00001384          	.proc _mbox_recv
  428  00001384          	.global _mbox_recv
  429  00001384          	_mbox_recv:
  430  00001384  44000464	trap	#0x464
  431  00001388  4be00000	jr	r31
  432  0000138c  54000000	nop
  433  00001390          	.endproc _mbox_recv
  435  00001390          	.proc _sleep
  436  00001390          	.global _sleep
  437  00001390          	_sleep:
  438  00001390  44000465	trap	#0x465
  439  00001394  4be00000	jr	r31
  440  00001398  54000000	nop
  441  0000139c          	.endproc _sleep
  443  0000139c          	.proc _yield
  444  0000139c          	.global _yield
  445  0000139c          	_yield:
  446  0000139c  44000466	trap	#0x466
  447  000013a0  4be00000	jr	r31
  448  000013a4  54000000	nop
  449  000013a8          	.endproc _yield
  452  000013a8          	.proc _Exit
  453  000013a8          	.global _Exit
  454  000013a8          	_Exit:
  455  000013a8  44000500	trap	#0x500
  456  000013ac  4be00000	jr	r31
  457  000013b0  54000000	nop
  458  000013b4          	.endproc _Exit
  461  000013b4          	.proc _malloc
  462  000013b4          	.global _malloc
  463  000013b4          	_malloc:
  464  000013b4  44000467	trap	#0x467
  465  000013b8  4be00000	jr	r31
  466  000013bc          	.endproc _malloc
  469  000013bc          	.proc _mfree
  470  000013bc          	.global _mfree
  471  000013bc          	_mfree:
  472  000013bc  44000468	trap	#0x468
  473  000013c0  4be00000	jr	r31
  474  000013c4          	.endproc _mfree
  475                      ; Compiled by GCC
  477  000013c4          	.align 2
  478  000013c4          	.proc _isspace
  479  000013c4          	.global _isspace
  480  000013c4          	_isspace:
  481                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  482  000013c4  afbefffc	sw	-4(r29),r30; push fp
  483  000013c8  001df020	add	r30,r0,r29; fp = sp
  484  000013cc  afbffff8	sw	-8(r29),r31; push ret addr
  485  000013d0  2fbd0018	subui	r29,r29,#24; alloc local storage
  486  000013d4  afa20000	sw	0(r29),r2
  487  000013d8  afa30004	sw	4(r29),r3
  488  000013dc  afa40008	sw	8(r29),r4
  489  000013e0  83c20003	lb	r2,3(r30)
  490  000013e4  20010000	addi	r1,r0,#0
  491  000013e8  304300ff	andi	r3,r2,#0x00ff
  492  000013ec  60640020	seqi	r4,r3,#32
  493  000013f0  1480002c	bnez	r4,L3_LF2
  494  000013f4  54000000	nop; delay slot nop
  495  000013f8  304300ff	andi	r3,r2,#0x00ff
  496  000013fc  60640009	seqi	r4,r3,#9
  497  00001400  1480001c	bnez	r4,L3_LF2
  498  00001404  54000000	nop; delay slot nop
  499  00001408  304300ff	andi	r3,r2,#0x00ff
  500  0000140c  6064000a	seqi	r4,r3,#10
  501  00001410  1480000c	bnez	r4,L3_LF2
  502  00001414  54000000	nop; delay slot nop
  503  00001418  08000008	j	L2_LF2
  504  0000141c  54000000	nop; delay slot nop
  505  00001420          	L3_LF2:
  506  00001420  20010001	addi	r1,r0,#1
  507  00001424          	L2_LF2:
  508  00001424  08000004	j	L1_LF2
  509  00001428  54000000	nop; delay slot nop
  510  0000142c          	L1_LF2:
  511  0000142c  8fa20000	lw	r2,0(r29)
  512  00001430  8fa30004	lw	r3,4(r29)
  513  00001434  8fa40008	lw	r4,8(r29)
  514  00001438  8fdffff8	lw	r31,-8(r30)
  515  0000143c  001ee820	add	r29,r0,r30
  516  00001440  8fdefffc	lw	r30,-4(r30)
  517  00001444  4be00000	jr	r31
  518  00001448  54000000	nop
  519  0000144c          	.endproc _isspace
  520  0000144c          	.align 2
  521  0000144c          	.proc _isxdigit
  522  0000144c          	.global _isxdigit
  523  0000144c          	_isxdigit:
  524                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  525  0000144c  afbefffc	sw	-4(r29),r30; push fp
  526  00001450  001df020	add	r30,r0,r29; fp = sp
  527  00001454  afbffff8	sw	-8(r29),r31; push ret addr
  528  00001458  2fbd0018	subui	r29,r29,#24; alloc local storage
  529  0000145c  afa20000	sw	0(r29),r2
  530  00001460  afa30004	sw	4(r29),r3
  531  00001464  afa40008	sw	8(r29),r4
  532  00001468  83c20003	lb	r2,3(r30)
  533  0000146c  20010000	addi	r1,r0,#0
  534  00001470  304300ff	andi	r3,r2,#0x00ff
  535  00001474  6c64002f	sgtui	r4,r3,#47
  536  00001478  1080001c	beqz	r4,L7_LF2
  537  0000147c  54000000	nop; delay slot nop
  538  00001480  304300ff	andi	r3,r2,#0x00ff
  539  00001484  70640039	sleui	r4,r3,#57
  540  00001488  1480005c	bnez	r4,L6_LF2
  541  0000148c  54000000	nop; delay slot nop
  542  00001490  08000004	j	L7_LF2
  543  00001494  54000000	nop; delay slot nop
  544  00001498          	L7_LF2:
  545  00001498  304300ff	andi	r3,r2,#0x00ff
  546  0000149c  6c640060	sgtui	r4,r3,#96
  547  000014a0  1080001c	beqz	r4,L8_LF2
  548  000014a4  54000000	nop; delay slot nop
  549  000014a8  304300ff	andi	r3,r2,#0x00ff
  550  000014ac  70640066	sleui	r4,r3,#102
  551  000014b0  14800034	bnez	r4,L6_LF2
  552  000014b4  54000000	nop; delay slot nop
  553  000014b8  08000004	j	L8_LF2
  554  000014bc  54000000	nop; delay slot nop
  555  000014c0          	L8_LF2:
  556  000014c0  304300ff	andi	r3,r2,#0x00ff
  557  000014c4  6c640040	sgtui	r4,r3,#64
  558  000014c8  10800020	beqz	r4,L5_LF2
  559  000014cc  54000000	nop; delay slot nop
  560  000014d0  304300ff	andi	r3,r2,#0x00ff
  561  000014d4  70640041	sleui	r4,r3,#65
  562  000014d8  1480000c	bnez	r4,L6_LF2
  563  000014dc  54000000	nop; delay slot nop
  564  000014e0  08000008	j	L5_LF2
  565  000014e4  54000000	nop; delay slot nop
  566  000014e8          	L6_LF2:
  567  000014e8  20010001	addi	r1,r0,#1
  568  000014ec          	L5_LF2:
  569  000014ec  08000004	j	L4_LF2
  570  000014f0  54000000	nop; delay slot nop
  571  000014f4          	L4_LF2:
  572  000014f4  8fa20000	lw	r2,0(r29)
  573  000014f8  8fa30004	lw	r3,4(r29)
  574  000014fc  8fa40008	lw	r4,8(r29)
  575  00001500  8fdffff8	lw	r31,-8(r30)
  576  00001504  001ee820	add	r29,r0,r30
  577  00001508  8fdefffc	lw	r30,-4(r30)
  578  0000150c  4be00000	jr	r31
  579  00001510  54000000	nop
  580  00001514          	.endproc _isxdigit
  581  00001514          	.align 2
  582  00001514          	.proc _dstrcpy
  583  00001514          	.global _dstrcpy
  584  00001514          	_dstrcpy:
  585                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  586  00001514  afbefffc	sw	-4(r29),r30; push fp
  587  00001518  001df020	add	r30,r0,r29; fp = sp
  588  0000151c  afbffff8	sw	-8(r29),r31; push ret addr
  589  00001520  2fbd0018	subui	r29,r29,#24; alloc local storage
  590  00001524  afa20000	sw	0(r29),r2
  591  00001528  afa30004	sw	4(r29),r3
  592  0000152c  8fc10000	lw	r1,(r30)
  593  00001530  afc1fff4	sw	-12(r30),r1
  594  00001534          	L10_LF2:
  595  00001534  8fc10000	lw	r1,(r30)
  596  00001538  20220001	addi	r2,r1,#1
  597  0000153c  afc20000	sw	(r30),r2
  598  00001540  8fc20004	lw	r2,4(r30)
  599  00001544  20430001	addi	r3,r2,#1
  600  00001548  afc30004	sw	4(r30),r3
  601  0000154c  80420000	lb	r2,(r2)
  602  00001550  a0220000	sb	(r1),r2
  603  00001554  a3c2fff3	sb	-13(r30),r2
  604  00001558          	L12_LF2:
  605  00001558  93c1fff3	lbu	r1,-13(r30)
  606  0000155c  64220000	snei	r2,r1,#0
  607  00001560  1440000c	bnez	r2,L13_LF2
  608  00001564  54000000	nop; delay slot nop
  609  00001568  0800000c	j	L11_LF2
  610  0000156c  54000000	nop; delay slot nop
  611  00001570          	L13_LF2:
  612  00001570  0bffffc0	j	L10_LF2
  613  00001574  54000000	nop; delay slot nop
  614  00001578          	L11_LF2:
  615  00001578  8fc1fff4	lw	r1,-12(r30)
  616  0000157c  08000004	j	L9_LF2
  617  00001580  54000000	nop; delay slot nop
  618  00001584          	L9_LF2:
  619  00001584  8fa20000	lw	r2,0(r29)
  620  00001588  8fa30004	lw	r3,4(r29)
  621  0000158c  8fdffff8	lw	r31,-8(r30)
  622  00001590  001ee820	add	r29,r0,r30
  623  00001594  8fdefffc	lw	r30,-4(r30)
  624  00001598  4be00000	jr	r31
  625  0000159c  54000000	nop
  626  000015a0          	.endproc _dstrcpy
  627  000015a0          	.align 2
  628  000015a0          	.proc _dstrncpy
  629  000015a0          	.global _dstrncpy
  630  000015a0          	_dstrncpy:
  631                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  632  000015a0  afbefffc	sw	-4(r29),r30; push fp
  633  000015a4  001df020	add	r30,r0,r29; fp = sp
  634  000015a8  afbffff8	sw	-8(r29),r31; push ret addr
  635  000015ac  2fbd0018	subui	r29,r29,#24; alloc local storage
  636  000015b0  afa20000	sw	0(r29),r2
  637  000015b4  afa30004	sw	4(r29),r3
  638  000015b8  8fc10000	lw	r1,(r30)
  639  000015bc  afc1fff4	sw	-12(r30),r1
  640  000015c0          	L15_LF2:
  641  000015c0  8fc10008	lw	r1,8(r30)
  642  000015c4  2022ffff	addi	r2,r1,#-1
  643  000015c8  afc20008	sw	8(r30),r2
  644  000015cc  70210000	slei	r1,r1,#0
  645  000015d0  1020000c	beqz	r1,L18_LF2
  646  000015d4  54000000	nop; delay slot nop
  647  000015d8  08000048	j	L16_LF2
  648  000015dc  54000000	nop; delay slot nop
  649  000015e0          	L18_LF2:
  650  000015e0  8fc10000	lw	r1,(r30)
  651  000015e4  20220001	addi	r2,r1,#1
  652  000015e8  afc20000	sw	(r30),r2
  653  000015ec  8fc20004	lw	r2,4(r30)
  654  000015f0  20430001	addi	r3,r2,#1
  655  000015f4  afc30004	sw	4(r30),r3
  656  000015f8  80420000	lb	r2,(r2)
  657  000015fc  a0220000	sb	(r1),r2
  658  00001600  a3c2fff3	sb	-13(r30),r2
  659  00001604          	L17_LF2:
  660  00001604  93c1fff3	lbu	r1,-13(r30)
  661  00001608  64220000	snei	r2,r1,#0
  662  0000160c  1440000c	bnez	r2,L19_LF2
  663  00001610  54000000	nop; delay slot nop
  664  00001614  0800000c	j	L16_LF2
  665  00001618  54000000	nop; delay slot nop
  666  0000161c          	L19_LF2:
  667  0000161c  0bffffa0	j	L15_LF2
  668  00001620  54000000	nop; delay slot nop
  669  00001624          	L16_LF2:
  670  00001624  8fc1fff4	lw	r1,-12(r30)
  671  00001628  08000004	j	L14_LF2
  672  0000162c  54000000	nop; delay slot nop
  673  00001630          	L14_LF2:
  674  00001630  8fa20000	lw	r2,0(r29)
  675  00001634  8fa30004	lw	r3,4(r29)
  676  00001638  8fdffff8	lw	r31,-8(r30)
  677  0000163c  001ee820	add	r29,r0,r30
  678  00001640  8fdefffc	lw	r30,-4(r30)
  679  00001644  4be00000	jr	r31
  680  00001648  54000000	nop
  681  0000164c          	.endproc _dstrncpy
  682  0000164c          	.align 2
  683  0000164c          	.proc _dstrcat
  684  0000164c          	.global _dstrcat
  685  0000164c          	_dstrcat:
  686                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  687  0000164c  afbefffc	sw	-4(r29),r30; push fp
  688  00001650  001df020	add	r30,r0,r29; fp = sp
  689  00001654  afbffff8	sw	-8(r29),r31; push ret addr
  690  00001658  2fbd0018	subui	r29,r29,#24; alloc local storage
  691  0000165c  afa20000	sw	0(r29),r2
  692  00001660  8fc10000	lw	r1,(r30)
  693  00001664  afc1fff4	sw	-12(r30),r1
  694  00001668          	L21_LF2:
  695  00001668  8fc10000	lw	r1,(r30)
  696  0000166c  90220000	lbu	r2,(r1)
  697  00001670  64410000	snei	r1,r2,#0
  698  00001674  1420000c	bnez	r1,L23_LF2
  699  00001678  54000000	nop; delay slot nop
  700  0000167c  0800001c	j	L22_LF2
  701  00001680  54000000	nop; delay slot nop
  702  00001684          	L23_LF2:
  703  00001684  8fc20000	lw	r2,(r30)
  704  00001688  20410001	addi	r1,r2,#1
  705  0000168c  00011020	add	r2,r0,r1
  706  00001690  afc20000	sw	(r30),r2
  707  00001694  0bffffd0	j	L21_LF2
  708  00001698  54000000	nop; delay slot nop
  709  0000169c          	L22_LF2:
  710  0000169c  23bdfff8	addi	r29,r29,#-8
  711  000016a0  001d0820	add	r1,r0,r29
  712  000016a4  8fc20000	lw	r2,(r30)
  713  000016a8  ac220000	sw	(r1),r2
  714  000016ac  8fc20004	lw	r2,4(r30)
  715  000016b0  ac220004	sw	4(r1),r2
  716  000016b4  0ffffe5c	jal	_dstrcpy
  717  000016b8  54000000	nop; delay slot nop
  718  000016bc  23bd0008	addi	r29,r29,#8
  719  000016c0  8fc1fff4	lw	r1,-12(r30)
  720  000016c4  08000004	j	L20_LF2
  721  000016c8  54000000	nop; delay slot nop
  722  000016cc          	L20_LF2:
  723  000016cc  8fa20000	lw	r2,0(r29)
  724  000016d0  8fdffff8	lw	r31,-8(r30)
  725  000016d4  001ee820	add	r29,r0,r30
  726  000016d8  8fdefffc	lw	r30,-4(r30)
  727  000016dc  4be00000	jr	r31
  728  000016e0  54000000	nop
  729  000016e4          	.endproc _dstrcat
  730  000016e4          	.align 2
  731  000016e4          	.proc _dstrncmp
  732  000016e4          	.global _dstrncmp
  733  000016e4          	_dstrncmp:
  734                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  735  000016e4  afbefffc	sw	-4(r29),r30; push fp
  736  000016e8  001df020	add	r30,r0,r29; fp = sp
  737  000016ec  afbffff8	sw	-8(r29),r31; push ret addr
  738  000016f0  2fbd0018	subui	r29,r29,#24; alloc local storage
  739  000016f4  afa20000	sw	0(r29),r2
  740  000016f8  afa30004	sw	4(r29),r3
  741  000016fc  54000000	nop
  742  00001700  20010000	addi	r1,r0,#0
  743  00001704  afc1fff4	sw	-12(r30),r1
  744  00001708          	L25_LF2:
  745  00001708  8fc1fff4	lw	r1,-12(r30)
  746  0000170c  8fc20008	lw	r2,8(r30)
  747  00001710  0022082a	slt	r1,r1,r2
  748  00001714  1420000c	bnez	r1,L28_LF2
  749  00001718  54000000	nop; delay slot nop
  750  0000171c  08000088	j	L26_LF2
  751  00001720  54000000	nop; delay slot nop
  752  00001724          	L28_LF2:
  753  00001724  8fc10004	lw	r1,4(r30)
  754  00001728  90220000	lbu	r2,(r1)
  755  0000172c  64410000	snei	r1,r2,#0
  756  00001730  14200018	bnez	r1,L29_LF2
  757  00001734  54000000	nop; delay slot nop
  758  00001738  20010000	addi	r1,r0,#0
  759  0000173c  080000d8	j	L24_LF2
  760  00001740  54000000	nop; delay slot nop
  761  00001744  08000028	j	L30_LF2
  762  00001748  54000000	nop; delay slot nop
  763  0000174c          	L29_LF2:
  764  0000174c  8fc10000	lw	r1,(r30)
  765  00001750  8fc20004	lw	r2,4(r30)
  766  00001754  90210000	lbu	r1,(r1)
  767  00001758  90420000	lbu	r2,(r2)
  768  0000175c  00220829	sne	r1,r1,r2
  769  00001760  1020000c	beqz	r1,L30_LF2
  770  00001764  54000000	nop; delay slot nop
  771  00001768  0800003c	j	L26_LF2
  772  0000176c  54000000	nop; delay slot nop
  773  00001770          	L31_LF2:
  774  00001770          	L30_LF2:
  775  00001770  8fc20000	lw	r2,(r30)
  776  00001774  20410001	addi	r1,r2,#1
  777  00001778  00011020	add	r2,r0,r1
  778  0000177c  afc20000	sw	(r30),r2
  779  00001780  8fc20004	lw	r2,4(r30)
  780  00001784  20410001	addi	r1,r2,#1
  781  00001788  00011020	add	r2,r0,r1
  782  0000178c  afc20004	sw	4(r30),r2
  783  00001790          	L27_LF2:
  784  00001790  8fc2fff4	lw	r2,-12(r30)
  785  00001794  20410001	addi	r1,r2,#1
  786  00001798  00011020	add	r2,r0,r1
  787  0000179c  afc2fff4	sw	-12(r30),r2
  788  000017a0  0bffff64	j	L25_LF2
  789  000017a4  54000000	nop; delay slot nop
  790  000017a8          	L26_LF2:
  791  000017a8  8fc1fff4	lw	r1,-12(r30)
  792  000017ac  8fc20008	lw	r2,8(r30)
  793  000017b0  00220828	seq	r1,r1,r2
  794  000017b4  10200018	beqz	r1,L32_LF2
  795  000017b8  54000000	nop; delay slot nop
  796  000017bc  20010000	addi	r1,r0,#0
  797  000017c0  08000054	j	L24_LF2
  798  000017c4  54000000	nop; delay slot nop
  799  000017c8  0800004c	j	L33_LF2
  800  000017cc  54000000	nop; delay slot nop
  801  000017d0          	L32_LF2:
  802  000017d0  8fc20000	lw	r2,(r30)
  803  000017d4  90410000	lbu	r1,(r2)
  804  000017d8  8fc20004	lw	r2,4(r30)
  805  000017dc  90430000	lbu	r3,(r2)
  806  000017e0  00230822	sub	r1,r1,r3
  807  000017e4  74220000	sgei	r2,r1,#0
  808  000017e8  10400020	beqz	r2,L34_LF2
  809  000017ec  54000000	nop; delay slot nop
  810  000017f0  8fc10000	lw	r1,(r30)
  811  000017f4  8fc20004	lw	r2,4(r30)
  812  000017f8  90210000	lbu	r1,(r1)
  813  000017fc  90420000	lbu	r2,(r2)
  814  00001800  00220829	sne	r1,r1,r2
  815  00001804  08000008	j	L35_LF2
  816  00001808  54000000	nop; delay slot nop
  817  0000180c          	L34_LF2:
  818  0000180c  2001ffff	addi	r1,r0,#-1
  819  00001810          	L35_LF2:
  820  00001810  08000004	j	L24_LF2
  821  00001814  54000000	nop; delay slot nop
  822  00001818          	L33_LF2:
  823  00001818          	L24_LF2:
  824  00001818  8fa20000	lw	r2,0(r29)
  825  0000181c  8fa30004	lw	r3,4(r29)
  826  00001820  8fdffff8	lw	r31,-8(r30)
  827  00001824  001ee820	add	r29,r0,r30
  828  00001828  8fdefffc	lw	r30,-4(r30)
  829  0000182c  4be00000	jr	r31
  830  00001830  54000000	nop
  831  00001834          	.endproc _dstrncmp
  832  00001834          	.align 2
  833  00001834          	.proc _dstrlen
  834  00001834          	.global _dstrlen
  835  00001834          	_dstrlen:
  836                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  837  00001834  afbefffc	sw	-4(r29),r30; push fp
  838  00001838  001df020	add	r30,r0,r29; fp = sp
  839  0000183c  afbffff8	sw	-8(r29),r31; push ret addr
  840  00001840  2fbd0018	subui	r29,r29,#24; alloc local storage
  841  00001844  afa20000	sw	0(r29),r2
  842  00001848  20010000	addi	r1,r0,#0
  843  0000184c  afc1fff4	sw	-12(r30),r1
  844  00001850          	L37_LF2:
  845  00001850  8fc10000	lw	r1,(r30)
  846  00001854  20220001	addi	r2,r1,#1
  847  00001858  afc20000	sw	(r30),r2
  848  0000185c  90210000	lbu	r1,(r1)
  849  00001860  64220000	snei	r2,r1,#0
  850  00001864  1440000c	bnez	r2,L39_LF2
  851  00001868  54000000	nop; delay slot nop
  852  0000186c  0800001c	j	L38_LF2
  853  00001870  54000000	nop; delay slot nop
  854  00001874          	L39_LF2:
  855  00001874  8fc2fff4	lw	r2,-12(r30)
  856  00001878  20410001	addi	r1,r2,#1
  857  0000187c  00011020	add	r2,r0,r1
  858  00001880  afc2fff4	sw	-12(r30),r2
  859  00001884  0bffffc8	j	L37_LF2
  860  00001888  54000000	nop; delay slot nop
  861  0000188c          	L38_LF2:
  862  0000188c  8fc1fff4	lw	r1,-12(r30)
  863  00001890  08000004	j	L36_LF2
  864  00001894  54000000	nop; delay slot nop
  865  00001898          	L36_LF2:
  866  00001898  8fa20000	lw	r2,0(r29)
  867  0000189c  8fdffff8	lw	r31,-8(r30)
  868  000018a0  001ee820	add	r29,r0,r30
  869  000018a4  8fdefffc	lw	r30,-4(r30)
  870  000018a8  4be00000	jr	r31
  871  000018ac  54000000	nop
  872  000018b0          	.endproc _dstrlen
  873  000018b0          	.align 2
  874  000018b0          	.proc _dstrstr
  875  000018b0          	.global _dstrstr
  876  000018b0          	_dstrstr:
  877                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  878  000018b0  afbefffc	sw	-4(r29),r30; push fp
  879  000018b4  001df020	add	r30,r0,r29; fp = sp
  880  000018b8  afbffff8	sw	-8(r29),r31; push ret addr
  881  000018bc  2fbd0018	subui	r29,r29,#24; alloc local storage
  882  000018c0  afa20000	sw	0(r29),r2
  883  000018c4  23bdfff8	addi	r29,r29,#-8
  884  000018c8  001d0820	add	r1,r0,r29
  885  000018cc  8fc20004	lw	r2,4(r30)
  886  000018d0  ac220000	sw	(r1),r2
  887  000018d4  0fffff5c	jal	_dstrlen
  888  000018d8  54000000	nop; delay slot nop
  889  000018dc  23bd0008	addi	r29,r29,#8
  890  000018e0  afc1fff4	sw	-12(r30),r1
  891  000018e4          	L41_LF2:
  892  000018e4  8fc10000	lw	r1,(r30)
  893  000018e8  90220000	lbu	r2,(r1)
  894  000018ec  64410000	snei	r1,r2,#0
  895  000018f0  1420000c	bnez	r1,L43_LF2
  896  000018f4  54000000	nop; delay slot nop
  897  000018f8  08000060	j	L42_LF2
  898  000018fc  54000000	nop; delay slot nop
  899  00001900          	L43_LF2:
  900  00001900  23bdfff0	addi	r29,r29,#-16
  901  00001904  001d0820	add	r1,r0,r29
  902  00001908  8fc20000	lw	r2,(r30)
  903  0000190c  ac220000	sw	(r1),r2
  904  00001910  8fc20004	lw	r2,4(r30)
  905  00001914  ac220004	sw	4(r1),r2
  906  00001918  8fc2fff4	lw	r2,-12(r30)
  907  0000191c  ac220008	sw	8(r1),r2
  908  00001920  0ffffdc0	jal	_dstrncmp
  909  00001924  54000000	nop; delay slot nop
  910  00001928  23bd0010	addi	r29,r29,#16
  911  0000192c  64220000	snei	r2,r1,#0
  912  00001930  14400010	bnez	r2,L44_LF2
  913  00001934  54000000	nop; delay slot nop
  914  00001938  8fc10000	lw	r1,(r30)
  915  0000193c  08000028	j	L40_LF2
  916  00001940  54000000	nop; delay slot nop
  917  00001944          	L44_LF2:
  918  00001944  8fc20000	lw	r2,(r30)
  919  00001948  20410001	addi	r1,r2,#1
  920  0000194c  00011020	add	r2,r0,r1
  921  00001950  afc20000	sw	(r30),r2
  922  00001954  0bffff8c	j	L41_LF2
  923  00001958  54000000	nop; delay slot nop
  924  0000195c          	L42_LF2:
  925  0000195c  20010000	addi	r1,r0,#0
  926  00001960  08000004	j	L40_LF2
  927  00001964  54000000	nop; delay slot nop
  928  00001968          	L40_LF2:
  929  00001968  8fa20000	lw	r2,0(r29)
  930  0000196c  8fdffff8	lw	r31,-8(r30)
  931  00001970  001ee820	add	r29,r0,r30
  932  00001974  8fdefffc	lw	r30,-4(r30)
  933  00001978  4be00000	jr	r31
  934  0000197c  54000000	nop
  935  00001980          	.endproc _dstrstr
  936  00001980          	.align 2
  937  00001980          	.proc _dmindex
  938  00001980          	.global _dmindex
  939  00001980          	_dmindex:
  940                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  941  00001980  afbefffc	sw	-4(r29),r30; push fp
  942  00001984  001df020	add	r30,r0,r29; fp = sp
  943  00001988  afbffff8	sw	-8(r29),r31; push ret addr
  944  0000198c  2fbd0018	subui	r29,r29,#24; alloc local storage
  945  00001990  afa20000	sw	0(r29),r2
  946  00001994  54000000	nop
  947  00001998          	L46_LF2:
  948  00001998  8fc10000	lw	r1,(r30)
  949  0000199c  90220000	lbu	r2,(r1)
  950  000019a0  64410000	snei	r1,r2,#0
  951  000019a4  1420000c	bnez	r1,L48_LF2
  952  000019a8  54000000	nop; delay slot nop
  953  000019ac  08000070	j	L47_LF2
  954  000019b0  54000000	nop; delay slot nop
  955  000019b4          	L48_LF2:
  956  000019b4  8fc10004	lw	r1,4(r30)
  957  000019b8  afc1fff4	sw	-12(r30),r1
  958  000019bc          	L49_LF2:
  959  000019bc  8fc1fff4	lw	r1,-12(r30)
  960  000019c0  90220000	lbu	r2,(r1)
  961  000019c4  64410000	snei	r1,r2,#0
  962  000019c8  1420000c	bnez	r1,L52_LF2
  963  000019cc  54000000	nop; delay slot nop
  964  000019d0  08000044	j	L50_LF2
  965  000019d4  54000000	nop; delay slot nop
  966  000019d8          	L52_LF2:
  967  000019d8  8fc10000	lw	r1,(r30)
  968  000019dc  8fc2fff4	lw	r2,-12(r30)
  969  000019e0  90210000	lbu	r1,(r1)
  970  000019e4  90420000	lbu	r2,(r2)
  971  000019e8  00220828	seq	r1,r1,r2
  972  000019ec  10200010	beqz	r1,L51_LF2
  973  000019f0  54000000	nop; delay slot nop
  974  000019f4  8fc10000	lw	r1,(r30)
  975  000019f8  08000030	j	L45_LF2
  976  000019fc  54000000	nop; delay slot nop
  977  00001a00          	L53_LF2:
  978  00001a00          	L51_LF2:
  979  00001a00  8fc2fff4	lw	r2,-12(r30)
  980  00001a04  20410001	addi	r1,r2,#1
  981  00001a08  00011020	add	r2,r0,r1
  982  00001a0c  afc2fff4	sw	-12(r30),r2
  983  00001a10  0bffffa8	j	L49_LF2
  984  00001a14  54000000	nop; delay slot nop
  985  00001a18          	L50_LF2:
  986  00001a18  0bffff7c	j	L46_LF2
  987  00001a1c  54000000	nop; delay slot nop
  988  00001a20          	L47_LF2:
  989  00001a20  20010000	addi	r1,r0,#0
  990  00001a24  08000004	j	L45_LF2
  991  00001a28  54000000	nop; delay slot nop
  992  00001a2c          	L45_LF2:
  993  00001a2c  8fa20000	lw	r2,0(r29)
  994  00001a30  8fdffff8	lw	r31,-8(r30)
  995  00001a34  001ee820	add	r29,r0,r30
  996  00001a38  8fdefffc	lw	r30,-4(r30)
  997  00001a3c  4be00000	jr	r31
  998  00001a40  54000000	nop
  999  00001a44          	.endproc _dmindex
 1000  00001a44          	.align 2
 1001  00001a44          	.proc _dindex
 1002  00001a44          	.global _dindex
 1003  00001a44          	_dindex:
 1004                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1005  00001a44  afbefffc	sw	-4(r29),r30; push fp
 1006  00001a48  001df020	add	r30,r0,r29; fp = sp
 1007  00001a4c  afbffff8	sw	-8(r29),r31; push ret addr
 1008  00001a50  2fbd0010	subui	r29,r29,#16; alloc local storage
 1009  00001a54  afa20000	sw	0(r29),r2
 1010  00001a58  54000000	nop
 1011  00001a5c          	L55_LF2:
 1012  00001a5c  8fc10000	lw	r1,(r30)
 1013  00001a60  90220000	lbu	r2,(r1)
 1014  00001a64  64410000	snei	r1,r2,#0
 1015  00001a68  1420000c	bnez	r1,L57_LF2
 1016  00001a6c  54000000	nop; delay slot nop
 1017  00001a70  08000040	j	L56_LF2
 1018  00001a74  54000000	nop; delay slot nop
 1019  00001a78          	L57_LF2:
 1020  00001a78  8fc10000	lw	r1,(r30)
 1021  00001a7c  90220000	lbu	r2,(r1)
 1022  00001a80  8fc10004	lw	r1,4(r30)
 1023  00001a84  00411028	seq	r2,r2,r1
 1024  00001a88  10400010	beqz	r2,L58_LF2
 1025  00001a8c  54000000	nop; delay slot nop
 1026  00001a90  8fc10000	lw	r1,(r30)
 1027  00001a94  08000028	j	L54_LF2
 1028  00001a98  54000000	nop; delay slot nop
 1029  00001a9c          	L58_LF2:
 1030  00001a9c  8fc20000	lw	r2,(r30)
 1031  00001aa0  20410001	addi	r1,r2,#1
 1032  00001aa4  00011020	add	r2,r0,r1
 1033  00001aa8  afc20000	sw	(r30),r2
 1034  00001aac  0bffffac	j	L55_LF2
 1035  00001ab0  54000000	nop; delay slot nop
 1036  00001ab4          	L56_LF2:
 1037  00001ab4  20010000	addi	r1,r0,#0
 1038  00001ab8  08000004	j	L54_LF2
 1039  00001abc  54000000	nop; delay slot nop
 1040  00001ac0          	L54_LF2:
 1041  00001ac0  8fa20000	lw	r2,0(r29)
 1042  00001ac4  8fdffff8	lw	r31,-8(r30)
 1043  00001ac8  001ee820	add	r29,r0,r30
 1044  00001acc  8fdefffc	lw	r30,-4(r30)
 1045  00001ad0  4be00000	jr	r31
 1046  00001ad4  54000000	nop
 1047  00001ad8          	.endproc _dindex
 1048  00001ad8          	.align 2
 1049  00001ad8          	.proc _ditoa
 1050  00001ad8          	.global _ditoa
 1051  00001ad8          	_ditoa:
 1052                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1053  00001ad8  afbefffc	sw	-4(r29),r30; push fp
 1054  00001adc  001df020	add	r30,r0,r29; fp = sp
 1055  00001ae0  afbffff8	sw	-8(r29),r31; push ret addr
 1056  00001ae4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1057  00001ae8  afa20000	sw	0(r29),r2
 1058  00001aec  afa30004	sw	4(r29),r3
 1059  00001af0  8fc10000	lw	r1,(r30)
 1060  00001af4  68220000	slti	r2,r1,#0
 1061  00001af8  1040002c	beqz	r2,L60_LF2
 1062  00001afc  54000000	nop; delay slot nop
 1063  00001b00  8fc10004	lw	r1,4(r30)
 1064  00001b04  20220001	addi	r2,r1,#1
 1065  00001b08  afc20004	sw	4(r30),r2
 1066  00001b0c  2002002d	addi	r2,r0,(#0x2d)&0xff
 1067  00001b10  a0220000	sb	(r1),r2
 1068  00001b14  8fc10000	lw	r1,(r30)
 1069  00001b18  00011022	sub	r2,r0,r1
 1070  00001b1c  afc20000	sw	(r30),r2
 1071  00001b20  08000118	j	L61_LF2
 1072  00001b24  54000000	nop; delay slot nop
 1073  00001b28          	L60_LF2:
 1074  00001b28  8fc10000	lw	r1,(r30)
 1075  00001b2c  64220000	snei	r2,r1,#0
 1076  00001b30  14400020	bnez	r2,L62_LF2
 1077  00001b34  54000000	nop; delay slot nop
 1078  00001b38  8fc10004	lw	r1,4(r30)
 1079  00001b3c  20220001	addi	r2,r1,#1
 1080  00001b40  afc20004	sw	4(r30),r2
 1081  00001b44  20020030	addi	r2,r0,(#0x30)&0xff
 1082  00001b48  a0220000	sb	(r1),r2
 1083  00001b4c  080000ec	j	L61_LF2
 1084  00001b50  54000000	nop; delay slot nop
 1085  00001b54          	L62_LF2:
 1086  00001b54  20010001	addi	r1,r0,#1
 1087  00001b58  afc1fff4	sw	-12(r30),r1
 1088  00001b5c          	L64_LF2:
 1089  00001b5c  8fc1fff4	lw	r1,-12(r30)
 1090  00001b60  8fc20000	lw	r2,(r30)
 1091  00001b64  0022082c	sle	r1,r1,r2
 1092  00001b68  1420000c	bnez	r1,L66_LF2
 1093  00001b6c  54000000	nop; delay slot nop
 1094  00001b70  08000024	j	L65_LF2
 1095  00001b74  54000000	nop; delay slot nop
 1096  00001b78          	L67_LF2:
 1097  00001b78          	L66_LF2:
 1098  00001b78  8fc1fff4	lw	r1,-12(r30)
 1099  00001b7c  00011820	add	r3,r0,r1
 1100  00001b80  50620002	slli	r2,r3,#0x2
 1101  00001b84  00411020	add	r2,r2,r1
 1102  00001b88  50410001	slli	r1,r2,#0x1
 1103  00001b8c  afc1fff4	sw	-12(r30),r1
 1104  00001b90  0bffffc8	j	L64_LF2
 1105  00001b94  54000000	nop; delay slot nop
 1106  00001b98          	L65_LF2:
 1107  00001b98  54000000	nop
 1108  00001b9c          	L68_LF2:
 1109  00001b9c  8fc1fff4	lw	r1,-12(r30)
 1110  00001ba0  2002000a	addi	r2,r0,#10
 1111  00001ba4  00200035	movi2fp	f0,r1
 1112  00001ba8  00400835	movi2fp	f1,r2
 1113  00001bac  0401000f	div	f0,f0,f1
 1114  00001bb0  00000834	movfp2i	r1,f0
 1115  00001bb4  afc1fff4	sw	-12(r30),r1
 1116  00001bb8  8fc10004	lw	r1,4(r30)
 1117  00001bbc  20220001	addi	r2,r1,#1
 1118  00001bc0  afc20004	sw	4(r30),r2
 1119  00001bc4  8fc20000	lw	r2,(r30)
 1120  00001bc8  8fc3fff4	lw	r3,-12(r30)
 1121  00001bcc  00400035	movi2fp	f0,r2
 1122  00001bd0  00600835	movi2fp	f1,r3
 1123  00001bd4  0401000f	div	f0,f0,f1
 1124  00001bd8  00001034	movfp2i	r2,f0
 1125  00001bdc  00021820	add	r3,r0,r2
 1126  00001be0  20620030	addi	r2,r3,#48
 1127  00001be4  a0220000	sb	(r1),r2
 1128  00001be8  8fc10000	lw	r1,(r30)
 1129  00001bec  8fc3fff4	lw	r3,-12(r30)
 1130  00001bf0  00200035	movi2fp	f0,r1
 1131  00001bf4  00600835	movi2fp	f1,r3
 1132  00001bf8  0401000f	div	f0,f0,f1
 1133  00001bfc  00001034	movfp2i	r2,f0
 1134  00001c00  8fc3fff4	lw	r3,-12(r30)
 1135  00001c04  00400035	movi2fp	f0,r2
 1136  00001c08  00600835	movi2fp	f1,r3
 1137  00001c0c  0401000e	mult	f0,f0,f1
 1138  00001c10  00001034	movfp2i	r2,f0
 1139  00001c14  00220822	sub	r1,r1,r2
 1140  00001c18  afc10000	sw	(r30),r1
 1141  00001c1c          	L70_LF2:
 1142  00001c1c  8fc1fff4	lw	r1,-12(r30)
 1143  00001c20  6c220001	sgti	r2,r1,#1
 1144  00001c24  1440000c	bnez	r2,L71_LF2
 1145  00001c28  54000000	nop; delay slot nop
 1146  00001c2c  0800000c	j	L61_LF2
 1147  00001c30  54000000	nop; delay slot nop
 1148  00001c34          	L71_LF2:
 1149  00001c34  0bffff64	j	L68_LF2
 1150  00001c38  54000000	nop; delay slot nop
 1151  00001c3c          	L69_LF2:
 1152  00001c3c          	L63_LF2:
 1153  00001c3c          	L61_LF2:
 1154  00001c3c  8fc10004	lw	r1,4(r30)
 1155  00001c40  20020000	addi	r2,r0,(#0x0)&0xff
 1156  00001c44  a0220000	sb	(r1),r2
 1157  00001c48          	L59_LF2:
 1158  00001c48  8fa20000	lw	r2,0(r29)
 1159  00001c4c  8fa30004	lw	r3,4(r29)
 1160  00001c50  8fdffff8	lw	r31,-8(r30)
 1161  00001c54  001ee820	add	r29,r0,r30
 1162  00001c58  8fdefffc	lw	r30,-4(r30)
 1163  00001c5c  4be00000	jr	r31
 1164  00001c60  54000000	nop
 1165  00001c64          	.endproc _ditoa
 1166  00001c64          	.align 2
 1167  00001c64          	.proc _dstrtol
 1168  00001c64          	.global _dstrtol
 1169  00001c64          	_dstrtol:
 1170                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1171  00001c64  afbefffc	sw	-4(r29),r30; push fp
 1172  00001c68  001df020	add	r30,r0,r29; fp = sp
 1173  00001c6c  afbffff8	sw	-8(r29),r31; push ret addr
 1174  00001c70  2fbd0020	subui	r29,r29,#32; alloc local storage
 1175  00001c74  afa20000	sw	0(r29),r2
 1176  00001c78  20010000	addi	r1,r0,#0
 1177  00001c7c  afc1fff4	sw	-12(r30),r1
 1178  00001c80          	L73_LF2:
 1179  00001c80  8fc10000	lw	r1,(r30)
 1180  00001c84  90220000	lbu	r2,(r1)
 1181  00001c88  60410020	seqi	r1,r2,#32
 1182  00001c8c  14200034	bnez	r1,L75_LF2
 1183  00001c90  54000000	nop; delay slot nop
 1184  00001c94  8fc10000	lw	r1,(r30)
 1185  00001c98  90220000	lbu	r2,(r1)
 1186  00001c9c  60410009	seqi	r1,r2,#9
 1187  00001ca0  14200020	bnez	r1,L75_LF2
 1188  00001ca4  54000000	nop; delay slot nop
 1189  00001ca8  8fc10000	lw	r1,(r30)
 1190  00001cac  90220000	lbu	r2,(r1)
 1191  00001cb0  6041000a	seqi	r1,r2,#10
 1192  00001cb4  1420000c	bnez	r1,L75_LF2
 1193  00001cb8  54000000	nop; delay slot nop
 1194  00001cbc  0800001c	j	L74_LF2
 1195  00001cc0  54000000	nop; delay slot nop
 1196  00001cc4          	L75_LF2:
 1197  00001cc4  8fc20000	lw	r2,(r30)
 1198  00001cc8  20410001	addi	r1,r2,#1
 1199  00001ccc  00011020	add	r2,r0,r1
 1200  00001cd0  afc20000	sw	(r30),r2
 1201  00001cd4  0bffffa8	j	L73_LF2
 1202  00001cd8  54000000	nop; delay slot nop
 1203  00001cdc          	L74_LF2:
 1204  00001cdc  8fc10004	lw	r1,4(r30)
 1205  00001ce0  64220000	snei	r2,r1,#0
 1206  00001ce4  10400010	beqz	r2,L76_LF2
 1207  00001ce8  54000000	nop; delay slot nop
 1208  00001cec  8fc10004	lw	r1,4(r30)
 1209  00001cf0  8fc20000	lw	r2,(r30)
 1210  00001cf4  ac220000	sw	(r1),r2
 1211  00001cf8          	L76_LF2:
 1212  00001cf8  8fc10000	lw	r1,(r30)
 1213  00001cfc  90220000	lbu	r2,(r1)
 1214  00001d00  64410000	snei	r1,r2,#0
 1215  00001d04  14200010	bnez	r1,L77_LF2
 1216  00001d08  54000000	nop; delay slot nop
 1217  00001d0c  8fc1fff4	lw	r1,-12(r30)
 1218  00001d10  08000294	j	L72_LF2
 1219  00001d14  54000000	nop; delay slot nop
 1220  00001d18          	L77_LF2:
 1221  00001d18  8fc10000	lw	r1,(r30)
 1222  00001d1c  90220000	lbu	r2,(r1)
 1223  00001d20  6041002d	seqi	r1,r2,#45
 1224  00001d24  10200024	beqz	r1,L78_LF2
 1225  00001d28  54000000	nop; delay slot nop
 1226  00001d2c  2001ffff	addi	r1,r0,#-1
 1227  00001d30  afc1ffec	sw	-20(r30),r1
 1228  00001d34  8fc20000	lw	r2,(r30)
 1229  00001d38  20410001	addi	r1,r2,#1
 1230  00001d3c  00011020	add	r2,r0,r1
 1231  00001d40  afc20000	sw	(r30),r2
 1232  00001d44  0800000c	j	L79_LF2
 1233  00001d48  54000000	nop; delay slot nop
 1234  00001d4c          	L78_LF2:
 1235  00001d4c  20010001	addi	r1,r0,#1
 1236  00001d50  afc1ffec	sw	-20(r30),r1
 1237  00001d54          	L79_LF2:
 1238  00001d54  8fc10008	lw	r1,8(r30)
 1239  00001d58  64220000	snei	r2,r1,#0
 1240  00001d5c  14400090	bnez	r2,L80_LF2
 1241  00001d60  54000000	nop; delay slot nop
 1242  00001d64  8fc10000	lw	r1,(r30)
 1243  00001d68  90220000	lbu	r2,(r1)
 1244  00001d6c  60410030	seqi	r1,r2,#48
 1245  00001d70  10200074	beqz	r1,L81_LF2
 1246  00001d74  54000000	nop; delay slot nop
 1247  00001d78  8fc20000	lw	r2,(r30)
 1248  00001d7c  20410001	addi	r1,r2,#1
 1249  00001d80  00011020	add	r2,r0,r1
 1250  00001d84  afc20000	sw	(r30),r2
 1251  00001d88  8fc10000	lw	r1,(r30)
 1252  00001d8c  90220000	lbu	r2,(r1)
 1253  00001d90  60410078	seqi	r1,r2,#120
 1254  00001d94  14200020	bnez	r1,L83_LF2
 1255  00001d98  54000000	nop; delay slot nop
 1256  00001d9c  8fc10000	lw	r1,(r30)
 1257  00001da0  90220000	lbu	r2,(r1)
 1258  00001da4  60410058	seqi	r1,r2,#88
 1259  00001da8  1420000c	bnez	r1,L83_LF2
 1260  00001dac  54000000	nop; delay slot nop
 1261  00001db0  08000024	j	L82_LF2
 1262  00001db4  54000000	nop; delay slot nop
 1263  00001db8          	L83_LF2:
 1264  00001db8  20010010	addi	r1,r0,#16
 1265  00001dbc  afc10008	sw	8(r30),r1
 1266  00001dc0  8fc20000	lw	r2,(r30)
 1267  00001dc4  20410001	addi	r1,r2,#1
 1268  00001dc8  00011020	add	r2,r0,r1
 1269  00001dcc  afc20000	sw	(r30),r2
 1270  00001dd0  0800000c	j	L84_LF2
 1271  00001dd4  54000000	nop; delay slot nop
 1272  00001dd8          	L82_LF2:
 1273  00001dd8  20010008	addi	r1,r0,#8
 1274  00001ddc  afc10008	sw	8(r30),r1
 1275  00001de0          	L84_LF2:
 1276  00001de0  0800000c	j	L80_LF2
 1277  00001de4  54000000	nop; delay slot nop
 1278  00001de8          	L81_LF2:
 1279  00001de8  2001000a	addi	r1,r0,#10
 1280  00001dec  afc10008	sw	8(r30),r1
 1281  00001df0          	L85_LF2:
 1282  00001df0          	L80_LF2:
 1283  00001df0  8fc10008	lw	r1,8(r30)
 1284  00001df4  70220000	slei	r2,r1,#0
 1285  00001df8  1440001c	bnez	r2,L87_LF2
 1286  00001dfc  54000000	nop; delay slot nop
 1287  00001e00  8fc10008	lw	r1,8(r30)
 1288  00001e04  6c220010	sgti	r2,r1,#16
 1289  00001e08  1440000c	bnez	r2,L87_LF2
 1290  00001e0c  54000000	nop; delay slot nop
 1291  00001e10  08000010	j	L86_LF2
 1292  00001e14  54000000	nop; delay slot nop
 1293  00001e18          	L87_LF2:
 1294  00001e18  8fc1fff4	lw	r1,-12(r30)
 1295  00001e1c  08000188	j	L72_LF2
 1296  00001e20  54000000	nop; delay slot nop
 1297  00001e24          	L86_LF2:
 1298  00001e24  54000000	nop
 1299  00001e28          	L88_LF2:
 1300  00001e28  8fc10000	lw	r1,(r30)
 1301  00001e2c  90220000	lbu	r2,(r1)
 1302  00001e30  6c41002f	sgtui	r1,r2,#47
 1303  00001e34  10200030	beqz	r1,L91_LF2
 1304  00001e38  54000000	nop; delay slot nop
 1305  00001e3c  8fc10000	lw	r1,(r30)
 1306  00001e40  90220000	lbu	r2,(r1)
 1307  00001e44  70410039	sleui	r1,r2,#57
 1308  00001e48  1020001c	beqz	r1,L91_LF2
 1309  00001e4c  54000000	nop; delay slot nop
 1310  00001e50  8fc10000	lw	r1,(r30)
 1311  00001e54  90220000	lbu	r2,(r1)
 1312  00001e58  2041ffd0	addi	r1,r2,#-48
 1313  00001e5c  afc1fff0	sw	-16(r30),r1
 1314  00001e60  0800008c	j	L92_LF2
 1315  00001e64  54000000	nop; delay slot nop
 1316  00001e68          	L91_LF2:
 1317  00001e68  8fc10000	lw	r1,(r30)
 1318  00001e6c  90220000	lbu	r2,(r1)
 1319  00001e70  6c410060	sgtui	r1,r2,#96
 1320  00001e74  10200030	beqz	r1,L93_LF2
 1321  00001e78  54000000	nop; delay slot nop
 1322  00001e7c  8fc10000	lw	r1,(r30)
 1323  00001e80  90220000	lbu	r2,(r1)
 1324  00001e84  7041007a	sleui	r1,r2,#122
 1325  00001e88  1020001c	beqz	r1,L93_LF2
 1326  00001e8c  54000000	nop; delay slot nop
 1327  00001e90  8fc10000	lw	r1,(r30)
 1328  00001e94  90220000	lbu	r2,(r1)
 1329  00001e98  2041ffa9	addi	r1,r2,#-87
 1330  00001e9c  afc1fff0	sw	-16(r30),r1
 1331  00001ea0  0800004c	j	L92_LF2
 1332  00001ea4  54000000	nop; delay slot nop
 1333  00001ea8          	L93_LF2:
 1334  00001ea8  8fc10000	lw	r1,(r30)
 1335  00001eac  90220000	lbu	r2,(r1)
 1336  00001eb0  6c410040	sgtui	r1,r2,#64
 1337  00001eb4  10200030	beqz	r1,L95_LF2
 1338  00001eb8  54000000	nop; delay slot nop
 1339  00001ebc  8fc10000	lw	r1,(r30)
 1340  00001ec0  90220000	lbu	r2,(r1)
 1341  00001ec4  7041005a	sleui	r1,r2,#90
 1342  00001ec8  1020001c	beqz	r1,L95_LF2
 1343  00001ecc  54000000	nop; delay slot nop
 1344  00001ed0  8fc10000	lw	r1,(r30)
 1345  00001ed4  90220000	lbu	r2,(r1)
 1346  00001ed8  2041ffc9	addi	r1,r2,#-55
 1347  00001edc  afc1fff0	sw	-16(r30),r1
 1348  00001ee0  0800000c	j	L92_LF2
 1349  00001ee4  54000000	nop; delay slot nop
 1350  00001ee8          	L95_LF2:
 1351  00001ee8  200103e8	addi	r1,r0,#1000
 1352  00001eec  afc1fff0	sw	-16(r30),r1
 1353  00001ef0          	L96_LF2:
 1354  00001ef0          	L94_LF2:
 1355  00001ef0          	L92_LF2:
 1356  00001ef0  8fc1fff0	lw	r1,-16(r30)
 1357  00001ef4  8fc20008	lw	r2,8(r30)
 1358  00001ef8  0022082a	slt	r1,r1,r2
 1359  00001efc  10200040	beqz	r1,L90_LF2
 1360  00001f00  54000000	nop; delay slot nop
 1361  00001f04  8fc1fff4	lw	r1,-12(r30)
 1362  00001f08  8fc20008	lw	r2,8(r30)
 1363  00001f0c  00200035	movi2fp	f0,r1
 1364  00001f10  00400835	movi2fp	f1,r2
 1365  00001f14  0401000e	mult	f0,f0,f1
 1366  00001f18  00000834	movfp2i	r1,f0
 1367  00001f1c  afc1fff4	sw	-12(r30),r1
 1368  00001f20  8fc1fff4	lw	r1,-12(r30)
 1369  00001f24  8fc2fff0	lw	r2,-16(r30)
 1370  00001f28  00220820	add	r1,r1,r2
 1371  00001f2c  afc1fff4	sw	-12(r30),r1
 1372  00001f30  8fc20000	lw	r2,(r30)
 1373  00001f34  20410001	addi	r1,r2,#1
 1374  00001f38  00011020	add	r2,r0,r1
 1375  00001f3c  afc20000	sw	(r30),r2
 1376  00001f40          	L97_LF2:
 1377  00001f40          	L90_LF2:
 1378  00001f40  8fc1fff0	lw	r1,-16(r30)
 1379  00001f44  8fc20008	lw	r2,8(r30)
 1380  00001f48  0022082a	slt	r1,r1,r2
 1381  00001f4c  1420000c	bnez	r1,L98_LF2
 1382  00001f50  54000000	nop; delay slot nop
 1383  00001f54  0800000c	j	L89_LF2
 1384  00001f58  54000000	nop; delay slot nop
 1385  00001f5c          	L98_LF2:
 1386  00001f5c  0bfffec8	j	L88_LF2
 1387  00001f60  54000000	nop; delay slot nop
 1388  00001f64          	L89_LF2:
 1389  00001f64  8fc10004	lw	r1,4(r30)
 1390  00001f68  64220000	snei	r2,r1,#0
 1391  00001f6c  10400010	beqz	r2,L99_LF2
 1392  00001f70  54000000	nop; delay slot nop
 1393  00001f74  8fc10004	lw	r1,4(r30)
 1394  00001f78  8fc20000	lw	r2,(r30)
 1395  00001f7c  ac220000	sw	(r1),r2
 1396  00001f80          	L99_LF2:
 1397  00001f80  8fc1fff4	lw	r1,-12(r30)
 1398  00001f84  8fc2ffec	lw	r2,-20(r30)
 1399  00001f88  00200035	movi2fp	f0,r1
 1400  00001f8c  00400835	movi2fp	f1,r2
 1401  00001f90  0401000e	mult	f0,f0,f1
 1402  00001f94  00000834	movfp2i	r1,f0
 1403  00001f98  afc1fff4	sw	-12(r30),r1
 1404  00001f9c  8fc1fff4	lw	r1,-12(r30)
 1405  00001fa0  08000004	j	L72_LF2
 1406  00001fa4  54000000	nop; delay slot nop
 1407  00001fa8          	L72_LF2:
 1408  00001fa8  8fa20000	lw	r2,0(r29)
 1409  00001fac  8fdffff8	lw	r31,-8(r30)
 1410  00001fb0  001ee820	add	r29,r0,r30
 1411  00001fb4  8fdefffc	lw	r30,-4(r30)
 1412  00001fb8  4be00000	jr	r31
 1413  00001fbc  54000000	nop
 1414  00001fc0          	.endproc _dstrtol
 1415  00001fc0          	.align 2
 1416  00001fc0          	.proc _bcopy
 1417  00001fc0          	.global _bcopy
 1418  00001fc0          	_bcopy:
 1419                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1420  00001fc0  afbefffc	sw	-4(r29),r30; push fp
 1421  00001fc4  001df020	add	r30,r0,r29; fp = sp
 1422  00001fc8  afbffff8	sw	-8(r29),r31; push ret addr
 1423  00001fcc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1424  00001fd0  afa20000	sw	0(r29),r2
 1425  00001fd4  afa30004	sw	4(r29),r3
 1426  00001fd8  54000000	nop
 1427  00001fdc          	L101_LF2:
 1428  00001fdc  8fc10008	lw	r1,8(r30)
 1429  00001fe0  2022ffff	addi	r2,r1,#-1
 1430  00001fe4  afc20008	sw	8(r30),r2
 1431  00001fe8  6c210000	sgti	r1,r1,#0
 1432  00001fec  1420000c	bnez	r1,L103_LF2
 1433  00001ff0  54000000	nop; delay slot nop
 1434  00001ff4  0800002c	j	L102_LF2
 1435  00001ff8  54000000	nop; delay slot nop
 1436  00001ffc          	L103_LF2:
 1437  00001ffc  8fc10004	lw	r1,4(r30)
 1438  00002000  20220001	addi	r2,r1,#1
 1439  00002004  afc20004	sw	4(r30),r2
 1440  00002008  8fc20000	lw	r2,(r30)
 1441  0000200c  20430001	addi	r3,r2,#1
 1442  00002010  afc30000	sw	(r30),r3
 1443  00002014  80420000	lb	r2,(r2)
 1444  00002018  a0220000	sb	(r1),r2
 1445  0000201c  0bffffbc	j	L101_LF2
 1446  00002020  54000000	nop; delay slot nop
 1447  00002024          	L102_LF2:
 1448  00002024          	L100_LF2:
 1449  00002024  8fa20000	lw	r2,0(r29)
 1450  00002028  8fa30004	lw	r3,4(r29)
 1451  0000202c  8fdffff8	lw	r31,-8(r30)
 1452  00002030  001ee820	add	r29,r0,r30
 1453  00002034  8fdefffc	lw	r30,-4(r30)
 1454  00002038  4be00000	jr	r31
 1455  0000203c  54000000	nop
 1456  00002040          	.endproc _bcopy
 1457  00002040          	.align 2
 1458  00002040          	.proc _bzero
 1459  00002040          	.global _bzero
 1460  00002040          	_bzero:
 1461                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1462  00002040  afbefffc	sw	-4(r29),r30; push fp
 1463  00002044  001df020	add	r30,r0,r29; fp = sp
 1464  00002048  afbffff8	sw	-8(r29),r31; push ret addr
 1465  0000204c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1466  00002050  afa20000	sw	0(r29),r2
 1467  00002054  54000000	nop
 1468  00002058          	L105_LF2:
 1469  00002058  8fc10004	lw	r1,4(r30)
 1470  0000205c  2022ffff	addi	r2,r1,#-1
 1471  00002060  afc20004	sw	4(r30),r2
 1472  00002064  6c210000	sgti	r1,r1,#0
 1473  00002068  1420000c	bnez	r1,L107_LF2
 1474  0000206c  54000000	nop; delay slot nop
 1475  00002070  08000020	j	L106_LF2
 1476  00002074  54000000	nop; delay slot nop
 1477  00002078          	L107_LF2:
 1478  00002078  8fc10000	lw	r1,(r30)
 1479  0000207c  20220001	addi	r2,r1,#1
 1480  00002080  afc20000	sw	(r30),r2
 1481  00002084  20020000	addi	r2,r0,(#0x0)&0xff
 1482  00002088  a0220000	sb	(r1),r2
 1483  0000208c  0bffffc8	j	L105_LF2
 1484  00002090  54000000	nop; delay slot nop
 1485  00002094          	L106_LF2:
 1486  00002094          	L104_LF2:
 1487  00002094  8fa20000	lw	r2,0(r29)
 1488  00002098  8fdffff8	lw	r31,-8(r30)
 1489  0000209c  001ee820	add	r29,r0,r30
 1490  000020a0  8fdefffc	lw	r30,-4(r30)
 1491  000020a4  4be00000	jr	r31
 1492  000020a8  54000000	nop
 1493  000020ac          	.endproc _bzero
 1494  000020ac          	.align 2
 1495  000020ac          	.proc _min
 1496  000020ac          	.global _min
 1497  000020ac          	_min:
 1498                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1499  000020ac  afbefffc	sw	-4(r29),r30; push fp
 1500  000020b0  001df020	add	r30,r0,r29; fp = sp
 1501  000020b4  afbffff8	sw	-8(r29),r31; push ret addr
 1502  000020b8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1503  000020bc  afa20000	sw	0(r29),r2
 1504  000020c0  afa30004	sw	4(r29),r3
 1505  000020c4  8fc10000	lw	r1,(r30)
 1506  000020c8  8fc20004	lw	r2,4(r30)
 1507  000020cc  0022182c	sle	r3,r1,r2
 1508  000020d0  14600008	bnez	r3,L109_LF2
 1509  000020d4  54000000	nop; delay slot nop
 1510  000020d8  8fc10004	lw	r1,4(r30)
 1511  000020dc          	L109_LF2:
 1512  000020dc  08000004	j	L108_LF2
 1513  000020e0  54000000	nop; delay slot nop
 1514  000020e4          	L108_LF2:
 1515  000020e4  8fa20000	lw	r2,0(r29)
 1516  000020e8  8fa30004	lw	r3,4(r29)
 1517  000020ec  8fdffff8	lw	r31,-8(r30)
 1518  000020f0  001ee820	add	r29,r0,r30
 1519  000020f4  8fdefffc	lw	r30,-4(r30)
 1520  000020f8  4be00000	jr	r31
 1521  000020fc  54000000	nop
 1522  00002100          	.endproc _min
 1523  00002100          	.align 2
 1524  00002100          	.proc _max
 1525  00002100          	.global _max
 1526  00002100          	_max:
 1527                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1528  00002100  afbefffc	sw	-4(r29),r30; push fp
 1529  00002104  001df020	add	r30,r0,r29; fp = sp
 1530  00002108  afbffff8	sw	-8(r29),r31; push ret addr
 1531  0000210c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1532  00002110  afa20000	sw	0(r29),r2
 1533  00002114  afa30004	sw	4(r29),r3
 1534  00002118  8fc10000	lw	r1,(r30)
 1535  0000211c  8fc20004	lw	r2,4(r30)
 1536  00002120  0022182d	sge	r3,r1,r2
 1537  00002124  14600008	bnez	r3,L111_LF2
 1538  00002128  54000000	nop; delay slot nop
 1539  0000212c  8fc10004	lw	r1,4(r30)
 1540  00002130          	L111_LF2:
 1541  00002130  08000004	j	L110_LF2
 1542  00002134  54000000	nop; delay slot nop
 1543  00002138          	L110_LF2:
 1544  00002138  8fa20000	lw	r2,0(r29)
 1545  0000213c  8fa30004	lw	r3,4(r29)
 1546  00002140  8fdffff8	lw	r31,-8(r30)
 1547  00002144  001ee820	add	r29,r0,r30
 1548  00002148  8fdefffc	lw	r30,-4(r30)
 1549  0000214c  4be00000	jr	r31
 1550  00002150  54000000	nop
 1551  00002154          	.endproc _max
 1552                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1553                      ;;;
 1554                      ;;; Most of the traps are called in files from libtraps.
 1557  00002154          	.align 2
 1558  00002154          	.proc _exit
 1559  00002154          	.global _exit
 1560  00002154          	_exit:
 1561  00002154  44000300	trap	#0x300
 1562  00002158  4be00000	jr	r31
 1563  0000215c  54000000	nop
 1564  00002160          	.endproc _exit
 1566                      ; for the benefit of gcc.
 1567  00002160          	.proc ___main
 1568  00002160          	.global ___main
 1569  00002160          	___main:
 1570  00002160  4be00000	jr	r31
 1571  00002164  54000000	nop
 1572  00002168          	.endproc ___main
 1573  00002168          	.text
 1574  00002168          	.global _etext
 1575  00002168          	_etext:
 1576  00002168          	.align 3
 1577  00002168          	.data
 1578  00003045          	.global _edata
 1579  00003045          	_edata:
