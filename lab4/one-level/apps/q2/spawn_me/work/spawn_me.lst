 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 192
    4                      ; Text size: 4884
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.align 2
   80  000010d4          	.proc _func
   81  000010d4          	.global _func
   82  000010d4          	_func:
   83                      ;  Function 'func'; 0 bytes of locals, 0 regs to save.
   84  000010d4  afbefffc	sw	-4(r29),r30; push fp
   85  000010d8  001df020	add	r30,r0,r29; fp = sp
   86  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   87  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
   88  000010e4  8fdf0000	lw	r31,(r30)
   89  000010e8  67e10000	snei	r1,r31,#0
   90  000010ec  1020001c	beqz	r1,L15_LF0
   91  000010f0  54000000	nop; not filled.
   92  000010f4  23bdfff8	addi	r29,r29,#-8
   93  000010f8  23e1ffff	addi	r1,r31,#-1
   94  000010fc  afa10000	sw	(r29),r1
   95  00001100  0fffffd0	jal	_func
   96  00001104  54000000	nop; not filled.
   97  00001108  23bd0008	addi	r29,r29,#8
   98  0000110c          	L15_LF0:
   99  0000110c  8fdffff8	lw	r31,-8(r30)
  100  00001110  001ee820	add	r29,r0,r30
  101  00001114  8fdefffc	lw	r30,-4(r30)
  102  00001118  4be00000	jr	r31
  103  0000111c  54000000	nop
  104  00001120          	.endproc _func
  105  00001120          	.data
  106  00003000          	.align 2
  107  00003000          	LC0_LF0:
  108  00003000  57726f6e	.ascii "Wrong args\n\000"
  108  00003004  67206172	
  108  00003008  67730a00	
  109  0000300c          	.align 2
  110  0000300c          	LC1_LF0:
  111  0000300c  50494428	.ascii "PID(%d)\n\000"
  111  00003010  2564290a	
  111  00003014  00      	
  112  00003015          	.align 2
  113  00003018          	LC2_LF0:
  114  00003018  25732000	.ascii "%s \000"
  115  0000301c          	.align 2
  116  0000301c          	LC3_LF0:
  117  0000301c  0a00    	.ascii "\n\000"
  118  0000301e          	.align 2
  119  00003020          	LC4_LF0:
  120  00003020  48656c6c	.ascii "Hello World: PID(%d)\n\000"
  120  00003024  6f20576f	
  120  00003028  726c643a	
  120  0000302c  20504944	
  120  00003030  28256429	
  120  00003034  0a00    	
  121  00003036          	.align 2
  122  00003038          	LC5_LF0:
  123  00003038  63617365	.ascii "case 3\n\000"
  123  0000303c  20330a00	
  124  00003040          	.align 2
  125  00003040          	LC6_LF0:
  126  00003040  0a0a6361	.ascii "\n\ncase 4\n\n\000"
  126  00003044  73652034	
  126  00003048  0a0a00  	
  127  0000304b          	.align 2
  128  0000304c          	LC7_LF0:
  129  0000304c  4d657373	.ascii "Message \n\000"
  129  00003050  61676520	
  129  00003054  0a00    	
  130  00003056          	.align 2
  131  00003058          	LC8_LF0:
  132  00003058  4d657373	.ascii "Message 2\n\000"
  132  0000305c  61676520	
  132  00003060  320a00  	
  133  00003063          	.align 2
  134  00003064          	LC9_LF0:
  135  00003064  45786974	.ascii "Exit failure semaphore @ end of q2: PID(%d), s_procs_completed(%d)\n\000"
  135  00003068  20666169	
  135  0000306c  6c757265	
  135  00003070  2073656d	
  135  00003074  6170686f	
  135  00003078  72652040	
  135  0000307c  20656e64	
  135  00003080  206f6620	
  135  00003084  71323a20	
  135  00003088  50494428	
  135  0000308c  2564292c	
  135  00003090  20735f70	
  135  00003094  726f6373	
  135  00003098  5f636f6d	
  135  0000309c  706c6574	
  135  000030a0  65642825	
  135  000030a4  64290a00	
  136  000030a8          	.text
  137  00001120          	.align 2
  138  00001120          	.proc _main
  139  00001120          	.global _main
  140  00001120          	_main:
  141                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  142  00001120  afbefffc	sw	-4(r29),r30; push fp
  143  00001124  001df020	add	r30,r0,r29; fp = sp
  144  00001128  afbffff8	sw	-8(r29),r31; push ret addr
  145  0000112c  2fbd0008	subui	r29,r29,#8; alloc local storage
  146  00001130  8fc40000	lw	r4,(r30)
  147  00001134  8fc50004	lw	r5,4(r30)
  148  00001138  0c0011d0	jal	___main
  149  0000113c  54000000	nop; not filled.
  150  00001140  64810003	snei	r1,r4,#3
  151  00001144  10200028	beqz	r1,L18_LF0
  152  00001148  54000000	nop; not filled.
  153  0000114c  23bdfff8	addi	r29,r29,#-8
  154  00001150  3c060000	lhi	r6,((LC0_LF0)>>16)&0xffff
  155  00001154  24c63000	addui	r6,r6,(LC0_LF0)&0xffff
  156  00001158  afa60000	sw	(r29),r6
  157  0000115c  0c0002ec	jal	_Printf
  158  00001160  54000000	nop; not filled.
  159  00001164  0c0003ec	jal	_Exit
  160  00001168  54000000	nop; not filled.
  161  0000116c  23bd0008	addi	r29,r29,#8
  162  00001170          	L18_LF0:
  163  00001170  0c0002e4	jal	_getpid
  164  00001174  54000000	nop; not filled.
  165  00001178  23bdfff8	addi	r29,r29,#-8
  166  0000117c  3c060000	lhi	r6,((LC1_LF0)>>16)&0xffff
  167  00001180  24c6300c	addui	r6,r6,(LC1_LF0)&0xffff
  168  00001184  afa60000	sw	(r29),r6
  169  00001188  afa10004	sw	4(r29),r1
  170  0000118c  0c0002bc	jal	_Printf
  171  00001190  54000000	nop; not filled.
  172  00001194  20020000	addi	r2,r0,#0
  173  00001198  23bd0008	addi	r29,r29,#8
  174  0000119c  0044082a	slt	r1,r2,r4
  175  000011a0  10200040	beqz	r1,L20_LF0
  176  000011a4  54000000	nop; not filled.
  177  000011a8  00051820	add	r3,r0,r5
  178  000011ac          	L22_LF0:
  179  000011ac  23bdfff8	addi	r29,r29,#-8
  180  000011b0  3c060000	lhi	r6,((LC2_LF0)>>16)&0xffff
  181  000011b4  24c63018	addui	r6,r6,(LC2_LF0)&0xffff
  182  000011b8  afa60000	sw	(r29),r6
  183  000011bc  8c610000	lw	r1,(r3)
  184  000011c0  afa10004	sw	4(r29),r1
  185  000011c4  0c000284	jal	_Printf
  186  000011c8  54000000	nop; not filled.
  187  000011cc  23bd0008	addi	r29,r29,#8
  188  000011d0  20630004	addi	r3,r3,#4
  189  000011d4  20420001	addi	r2,r2,#1
  190  000011d8  0044082a	slt	r1,r2,r4
  191  000011dc  1420ffcc	bnez	r1,L22_LF0
  192  000011e0  54000000	nop; not filled.
  193  000011e4          	L20_LF0:
  194  000011e4  23bdfff8	addi	r29,r29,#-8
  195  000011e8  3c060000	lhi	r6,((LC3_LF0)>>16)&0xffff
  196  000011ec  24c6301c	addui	r6,r6,(LC3_LF0)&0xffff
  197  000011f0  afa60000	sw	(r29),r6
  198  000011f4  0c000254	jal	_Printf
  199  000011f8  54000000	nop; not filled.
  200  000011fc  23bdfff8	addi	r29,r29,#-8
  201  00001200  8ca60008	lw	r6,8(r5)
  202  00001204  afa60000	sw	(r29),r6
  203  00001208  20060000	addi	r6,r0,#0
  204  0000120c  afa60004	sw	4(r29),r6
  205  00001210  2006000a	addi	r6,r0,#10
  206  00001214  afa60008	sw	8(r29),r6
  207  00001218  0c000bf4	jal	_dstrtol
  208  0000121c  54000000	nop; not filled.
  209  00001220  00011820	add	r3,r0,r1
  210  00001224  8ca50004	lw	r5,4(r5)
  211  00001228  afa50000	sw	(r29),r5
  212  0000122c  20060000	addi	r6,r0,#0
  213  00001230  afa60004	sw	4(r29),r6
  214  00001234  2006000a	addi	r6,r0,#10
  215  00001238  afa60008	sw	8(r29),r6
  216  0000123c  0c000bd0	jal	_dstrtol
  217  00001240  54000000	nop; not filled.
  218  00001244  23bd0010	addi	r29,r29,#16
  219  00001248  2022ffff	addi	r2,r1,#-1
  220  0000124c  6c410005	sgtui	r1,r2,#5
  221  00001250  14200154	bnez	r1,L24_LF0
  222  00001254  54000000	nop; not filled.
  223  00001258  50410002	slli	r1,r2,#0x2
  224  0000125c  3c060000	lhi	r6,((L44_LF0)>>16)&0xffff
  225  00001260  24c630a8	addui	r6,r6,(L44_LF0)&0xffff
  226  00001264  00260820	add	r1,r1,r6
  227  00001268  8c210000	lw	r1,(r1)
  228  0000126c  48200000	jr	r1
  229  00001270  54000000	nop; not filled.
  230  00001274          	.data
  231  000030a8          	.align 2
  232  000030a8          	L44_LF0:
  233  000030a8  00001274	.word L25_LF0
  234  000030ac  00001298	.word L26_LF0
  235  000030b0  000012b0	.word L27_LF0
  236  000030b4  000012e0	.word L28_LF0
  237  000030b8  00001318	.word L31_LF0
  238  000030bc  0000135c	.word L37_LF0
  239  000030c0          	.text
  240  00001274          	L25_LF0:
  241  00001274  0c0001e0	jal	_getpid
  242  00001278  54000000	nop; not filled.
  243  0000127c  23bdfff8	addi	r29,r29,#-8
  244  00001280  3c060000	lhi	r6,((LC4_LF0)>>16)&0xffff
  245  00001284  24c63020	addui	r6,r6,(LC4_LF0)&0xffff
  246  00001288  afa60000	sw	(r29),r6
  247  0000128c  afa10004	sw	4(r29),r1
  248  00001290  08000108	j	L46_LF0
  249  00001294  54000000	nop; not filled.
  250  00001298          	L26_LF0:
  251  00001298  3c010010	lhi	r1,#16
  252  0000129c  24210000	addui	r1,r1,#0
  253  000012a0  20060005	addi	r6,r0,#5
  254  000012a4  ac260000	sw	(r1),r6
  255  000012a8  080000fc	j	L24_LF0
  256  000012ac  54000000	nop; not filled.
  257  000012b0          	L27_LF0:
  258  000012b0  23bdfff8	addi	r29,r29,#-8
  259  000012b4  3c060000	lhi	r6,((LC5_LF0)>>16)&0xffff
  260  000012b8  24c63038	addui	r6,r6,(LC5_LF0)&0xffff
  261  000012bc  afa60000	sw	(r29),r6
  262  000012c0  0c000188	jal	_Printf
  263  000012c4  54000000	nop; not filled.
  264  000012c8  3c01000f	lhi	r1,#15
  265  000012cc  2421effc	addui	r1,r1,#61436
  266  000012d0  20060005	addi	r6,r0,#5
  267  000012d4  ac260000	sw	(r1),r6
  268  000012d8  080000c8	j	L47_LF0
  269  000012dc  54000000	nop; not filled.
  270  000012e0          	L28_LF0:
  271  000012e0  23bdfff8	addi	r29,r29,#-8
  272  000012e4  3c060000	lhi	r6,((LC6_LF0)>>16)&0xffff
  273  000012e8  24c63040	addui	r6,r6,(LC6_LF0)&0xffff
  274  000012ec  afa60000	sw	(r29),r6
  275  000012f0  0c000158	jal	_Printf
  276  000012f4  54000000	nop; not filled.
  277  000012f8  23bd0008	addi	r29,r29,#8
  278  000012fc  23bdfff8	addi	r29,r29,#-8
  279  00001300  200601f3	addi	r6,r0,#499
  280  00001304  afa60000	sw	(r29),r6
  281  00001308  0ffffdc8	jal	_func
  282  0000130c  54000000	nop; not filled.
  283  00001310  08000090	j	L47_LF0
  284  00001314  54000000	nop; not filled.
  285  00001318          	L31_LF0:
  286  00001318  20020000	addi	r2,r0,#0
  287  0000131c          	L35_LF0:
  288  0000131c  0c000138	jal	_getpid
  289  00001320  54000000	nop; not filled.
  290  00001324  23bdfff8	addi	r29,r29,#-8
  291  00001328  3c060000	lhi	r6,((LC4_LF0)>>16)&0xffff
  292  0000132c  24c63020	addui	r6,r6,(LC4_LF0)&0xffff
  293  00001330  afa60000	sw	(r29),r6
  294  00001334  afa10004	sw	4(r29),r1
  295  00001338  0c000110	jal	_Printf
  296  0000133c  54000000	nop; not filled.
  297  00001340  23bd0008	addi	r29,r29,#8
  298  00001344  20420001	addi	r2,r2,#1
  299  00001348  70410063	slei	r1,r2,#99
  300  0000134c  10200058	beqz	r1,L24_LF0
  301  00001350  54000000	nop; not filled.
  302  00001354  0bffffc4	j	L35_LF0
  303  00001358  54000000	nop; not filled.
  304  0000135c          	L37_LF0:
  305  0000135c  23bdfff8	addi	r29,r29,#-8
  306  00001360  3c060000	lhi	r6,((LC7_LF0)>>16)&0xffff
  307  00001364  24c6304c	addui	r6,r6,(LC7_LF0)&0xffff
  308  00001368  afa60000	sw	(r29),r6
  309  0000136c  0c0000dc	jal	_Printf
  310  00001370  54000000	nop; not filled.
  311  00001374  20020000	addi	r2,r0,#0
  312  00001378  23bd0008	addi	r29,r29,#8
  313  0000137c          	L40_LF0:
  314  0000137c  20420001	addi	r2,r2,#1
  315  00001380  704101f3	slei	r1,r2,#499
  316  00001384  1420fff4	bnez	r1,L40_LF0
  317  00001388  54000000	nop; not filled.
  318  0000138c  23bdfff8	addi	r29,r29,#-8
  319  00001390  3c060000	lhi	r6,((LC8_LF0)>>16)&0xffff
  320  00001394  24c63058	addui	r6,r6,(LC8_LF0)&0xffff
  321  00001398  afa60000	sw	(r29),r6
  322  0000139c          	L46_LF0:
  323  0000139c  0c0000ac	jal	_Printf
  324  000013a0  54000000	nop; not filled.
  325  000013a4          	L47_LF0:
  326  000013a4  23bd0008	addi	r29,r29,#8
  327  000013a8          	L24_LF0:
  328  000013a8  23bdfff8	addi	r29,r29,#-8
  329  000013ac  afa30000	sw	(r29),r3
  330  000013b0  0c0000ec	jal	_sem_signal
  331  000013b4  54000000	nop; not filled.
  332  000013b8  23bd0008	addi	r29,r29,#8
  333  000013bc  64210001	snei	r1,r1,#1
  334  000013c0  10200038	beqz	r1,L45_LF0
  335  000013c4  54000000	nop; not filled.
  336  000013c8  0c00008c	jal	_getpid
  337  000013cc  54000000	nop; not filled.
  338  000013d0  23bdfff0	addi	r29,r29,#-16
  339  000013d4  3c060000	lhi	r6,((LC9_LF0)>>16)&0xffff
  340  000013d8  24c63064	addui	r6,r6,(LC9_LF0)&0xffff
  341  000013dc  afa60000	sw	(r29),r6
  342  000013e0  afa10004	sw	4(r29),r1
  343  000013e4  afa30008	sw	8(r29),r3
  344  000013e8  0c000060	jal	_Printf
  345  000013ec  54000000	nop; not filled.
  346  000013f0  0c000160	jal	_Exit
  347  000013f4  54000000	nop; not filled.
  348  000013f8  23bd0010	addi	r29,r29,#16
  349  000013fc          	L45_LF0:
  350  000013fc  0c000f00	jal	_exit
  351  00001400  54000000	nop
  352  00001404          	.endproc _main
  353                      ;;;
  354                      ;;; Stub functions for DLX traps.
  355                      ;;;
  356                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  357                      ;;;
  358                      ;;; The traps such as Open and Close
  359                      ;;; (note the capital letters) are for use by user programs.  The traps
  360                      ;;; with names such as open and close (lower case) are for use by the OS.
  361                      ;;;
  364  00001404          	.align 2
  366                      ;;; The following are the traps to be used by user-level programs
  367                      ;;;
  369  00001404          	.align 2
  370  00001404          	.proc _Open
  371  00001404          	.global _Open
  372  00001404          	_Open:
  373                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  374                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  375                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  376  00001404  44000213	trap	#0x213
  377  00001408  4be00000	jr	r31
  378  0000140c  54000000	nop
  379  00001410          	.endproc _Open
  381  00001410          	.proc _Close
  382  00001410          	.global _Close
  383  00001410          	_Close:
  384  00001410  44000214	trap	#0x214
  385  00001414  4be00000	jr	r31
  386  00001418  54000000	nop
  387  0000141c          	.endproc _Close
  389  0000141c          	.proc _Read
  390  0000141c          	.global _Read
  391  0000141c          	_Read:
  392  0000141c  44000210	trap	#0x210
  393  00001420  4be00000	jr	r31
  394  00001424  54000000	nop
  395  00001428          	.endproc _Read
  397  00001428          	.proc _Write
  398  00001428          	.global _Write
  399  00001428          	_Write:
  400  00001428  44000211	trap	#0x211
  401  0000142c  4be00000	jr	r31
  402  00001430  54000000	nop
  403  00001434          	.endproc _Write
  405  00001434          	.proc _Lseek
  406  00001434          	.global _Lseek
  407  00001434          	_Lseek:
  408  00001434  44000212	trap	#0x212
  409  00001438  4be00000	jr	r31
  410  0000143c  54000000	nop
  411  00001440          	.endproc _Lseek
  413  00001440          	.proc _Putchar
  414  00001440          	.global _Putchar
  415  00001440          	_Putchar:
  416  00001440  44000280	trap	#0x280
  417  00001444  4be00000	jr	r31
  418  00001448  54000000	nop
  419  0000144c          	.endproc _Putchar
  421  0000144c          	.proc _Printf
  422  0000144c          	.global _Printf
  423  0000144c          	_Printf:
  424  0000144c  44000201	trap	#0x201
  425  00001450  4be00000	jr	r31
  426  00001454  54000000	nop
  427  00001458          	.endproc _Printf
  429  00001458          	.proc _getpid
  430  00001458          	.global _getpid
  431  00001458          	_getpid:
  432  00001458  44000431	trap	#0x431
  433  0000145c  4be00000	jr	r31
  434  00001460  54000000	nop
  435  00001464          	.endproc _getpid
  437  00001464          	.proc _process_create
  438  00001464          	.global _process_create
  439  00001464          	_process_create:
  440  00001464  44000432	trap	#0x432
  441  00001468  4be00000	jr	r31
  442  0000146c  54000000	nop
  443  00001470          	.endproc _process_create
  445  00001470          	.proc _shmget
  446  00001470          	.global _shmget
  447  00001470          	_shmget:
  448  00001470  44000440	trap	#0x440
  449  00001474  4be00000	jr	r31
  450  00001478  54000000	nop
  451  0000147c          	.endproc _shmget
  453  0000147c          	.proc _shmat
  454  0000147c          	.global _shmat
  455  0000147c          	_shmat:
  456  0000147c  44000441	trap	#0x441
  457  00001480  4be00000	jr	r31
  458  00001484  54000000	nop
  459  00001488          	.endproc _shmat
  461  00001488          	.proc _sem_create
  462  00001488          	.global _sem_create
  463  00001488          	_sem_create:
  464  00001488  44000450	trap	#0x450
  465  0000148c  4be00000	jr	r31
  466  00001490  54000000	nop
  467  00001494          	.endproc _sem_create
  469  00001494          	.proc _sem_wait
  470  00001494          	.global _sem_wait
  471  00001494          	_sem_wait:
  472  00001494  44000451	trap	#0x451
  473  00001498  4be00000	jr	r31
  474  0000149c  54000000	nop
  475  000014a0          	.endproc _sem_wait
  477  000014a0          	.proc _sem_signal
  478  000014a0          	.global _sem_signal
  479  000014a0          	_sem_signal:
  480  000014a0  44000452	trap	#0x452
  481  000014a4  4be00000	jr	r31
  482  000014a8  54000000	nop
  483  000014ac          	.endproc _sem_signal
  485  000014ac          	.proc _lock_create
  486  000014ac          	.global _lock_create
  487  000014ac          	_lock_create:
  488  000014ac  44000453	trap	#0x453
  489  000014b0  4be00000	jr	r31
  490  000014b4  54000000	nop
  491  000014b8          	.endproc _lock_create
  493  000014b8          	.proc _lock_acquire
  494  000014b8          	.global _lock_acquire
  495  000014b8          	_lock_acquire:
  496  000014b8  44000454	trap	#0x454
  497  000014bc  4be00000	jr	r31
  498  000014c0  54000000	nop
  499  000014c4          	.endproc _lock_acquire
  501  000014c4          	.proc _lock_release
  502  000014c4          	.global _lock_release
  503  000014c4          	_lock_release:
  504  000014c4  44000455	trap	#0x455
  505  000014c8  4be00000	jr	r31
  506  000014cc  54000000	nop
  507  000014d0          	.endproc _lock_release
  509  000014d0          	.proc _cond_create
  510  000014d0          	.global _cond_create
  511  000014d0          	_cond_create:
  512  000014d0  44000456	trap	#0x456
  513  000014d4  4be00000	jr	r31
  514  000014d8  54000000	nop
  515  000014dc          	.endproc _cond_create
  517  000014dc          	.proc _cond_wait
  518  000014dc          	.global _cond_wait
  519  000014dc          	_cond_wait:
  520  000014dc  44000457	trap	#0x457
  521  000014e0  4be00000	jr	r31
  522  000014e4  54000000	nop
  523  000014e8          	.endproc _cond_wait
  525  000014e8          	.proc _cond_signal
  526  000014e8          	.global _cond_signal
  527  000014e8          	_cond_signal:
  528  000014e8  44000458	trap	#0x458
  529  000014ec  4be00000	jr	r31
  530  000014f0  54000000	nop
  531  000014f4          	.endproc _cond_signal
  533  000014f4          	.proc _cond_broadcast
  534  000014f4          	.global _cond_broadcast
  535  000014f4          	_cond_broadcast:
  536  000014f4  44000459	trap	#0x459
  537  000014f8  4be00000	jr	r31
  538  000014fc  54000000	nop
  539  00001500          	.endproc _cond_broadcast
  541  00001500          	.proc _mbox_create
  542  00001500          	.global _mbox_create
  543  00001500          	_mbox_create:
  544  00001500  44000460	trap	#0x460
  545  00001504  4be00000	jr	r31
  546  00001508  54000000	nop
  547  0000150c          	.endproc _mbox_create
  549  0000150c          	.proc _mbox_open
  550  0000150c          	.global _mbox_open
  551  0000150c          	_mbox_open:
  552  0000150c  44000461	trap	#0x461
  553  00001510  4be00000	jr	r31
  554  00001514  54000000	nop
  555  00001518          	.endproc _mbox_open
  557  00001518          	.proc _mbox_close
  558  00001518          	.global _mbox_close
  559  00001518          	_mbox_close:
  560  00001518  44000462	trap	#0x462
  561  0000151c  4be00000	jr	r31
  562  00001520  54000000	nop
  563  00001524          	.endproc _mbox_close
  565  00001524          	.proc _mbox_send
  566  00001524          	.global _mbox_send
  567  00001524          	_mbox_send:
  568  00001524  44000463	trap	#0x463
  569  00001528  4be00000	jr	r31
  570  0000152c  54000000	nop
  571  00001530          	.endproc _mbox_send
  573  00001530          	.proc _mbox_recv
  574  00001530          	.global _mbox_recv
  575  00001530          	_mbox_recv:
  576  00001530  44000464	trap	#0x464
  577  00001534  4be00000	jr	r31
  578  00001538  54000000	nop
  579  0000153c          	.endproc _mbox_recv
  581  0000153c          	.proc _sleep
  582  0000153c          	.global _sleep
  583  0000153c          	_sleep:
  584  0000153c  44000465	trap	#0x465
  585  00001540  4be00000	jr	r31
  586  00001544  54000000	nop
  587  00001548          	.endproc _sleep
  589  00001548          	.proc _yield
  590  00001548          	.global _yield
  591  00001548          	_yield:
  592  00001548  44000466	trap	#0x466
  593  0000154c  4be00000	jr	r31
  594  00001550  54000000	nop
  595  00001554          	.endproc _yield
  598  00001554          	.proc _Exit
  599  00001554          	.global _Exit
  600  00001554          	_Exit:
  601  00001554  44000500	trap	#0x500
  602  00001558  4be00000	jr	r31
  603  0000155c  54000000	nop
  604  00001560          	.endproc _Exit
  607  00001560          	.proc _malloc
  608  00001560          	.global _malloc
  609  00001560          	_malloc:
  610  00001560  44000467	trap	#0x467
  611  00001564  4be00000	jr	r31
  612  00001568          	.endproc _malloc
  615  00001568          	.proc _mfree
  616  00001568          	.global _mfree
  617  00001568          	_mfree:
  618  00001568  44000468	trap	#0x468
  619  0000156c  4be00000	jr	r31
  620  00001570          	.endproc _mfree
  621                      ; Compiled by GCC
  623  00001570          	.align 2
  624  00001570          	.proc _isspace
  625  00001570          	.global _isspace
  626  00001570          	_isspace:
  627                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  628  00001570  afbefffc	sw	-4(r29),r30; push fp
  629  00001574  001df020	add	r30,r0,r29; fp = sp
  630  00001578  afbffff8	sw	-8(r29),r31; push ret addr
  631  0000157c  2fbd0018	subui	r29,r29,#24; alloc local storage
  632  00001580  afa20000	sw	0(r29),r2
  633  00001584  afa30004	sw	4(r29),r3
  634  00001588  afa40008	sw	8(r29),r4
  635  0000158c  83c20003	lb	r2,3(r30)
  636  00001590  20010000	addi	r1,r0,#0
  637  00001594  304300ff	andi	r3,r2,#0x00ff
  638  00001598  60640020	seqi	r4,r3,#32
  639  0000159c  1480002c	bnez	r4,L3_LF2
  640  000015a0  54000000	nop; delay slot nop
  641  000015a4  304300ff	andi	r3,r2,#0x00ff
  642  000015a8  60640009	seqi	r4,r3,#9
  643  000015ac  1480001c	bnez	r4,L3_LF2
  644  000015b0  54000000	nop; delay slot nop
  645  000015b4  304300ff	andi	r3,r2,#0x00ff
  646  000015b8  6064000a	seqi	r4,r3,#10
  647  000015bc  1480000c	bnez	r4,L3_LF2
  648  000015c0  54000000	nop; delay slot nop
  649  000015c4  08000008	j	L2_LF2
  650  000015c8  54000000	nop; delay slot nop
  651  000015cc          	L3_LF2:
  652  000015cc  20010001	addi	r1,r0,#1
  653  000015d0          	L2_LF2:
  654  000015d0  08000004	j	L1_LF2
  655  000015d4  54000000	nop; delay slot nop
  656  000015d8          	L1_LF2:
  657  000015d8  8fa20000	lw	r2,0(r29)
  658  000015dc  8fa30004	lw	r3,4(r29)
  659  000015e0  8fa40008	lw	r4,8(r29)
  660  000015e4  8fdffff8	lw	r31,-8(r30)
  661  000015e8  001ee820	add	r29,r0,r30
  662  000015ec  8fdefffc	lw	r30,-4(r30)
  663  000015f0  4be00000	jr	r31
  664  000015f4  54000000	nop
  665  000015f8          	.endproc _isspace
  666  000015f8          	.align 2
  667  000015f8          	.proc _isxdigit
  668  000015f8          	.global _isxdigit
  669  000015f8          	_isxdigit:
  670                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  671  000015f8  afbefffc	sw	-4(r29),r30; push fp
  672  000015fc  001df020	add	r30,r0,r29; fp = sp
  673  00001600  afbffff8	sw	-8(r29),r31; push ret addr
  674  00001604  2fbd0018	subui	r29,r29,#24; alloc local storage
  675  00001608  afa20000	sw	0(r29),r2
  676  0000160c  afa30004	sw	4(r29),r3
  677  00001610  afa40008	sw	8(r29),r4
  678  00001614  83c20003	lb	r2,3(r30)
  679  00001618  20010000	addi	r1,r0,#0
  680  0000161c  304300ff	andi	r3,r2,#0x00ff
  681  00001620  6c64002f	sgtui	r4,r3,#47
  682  00001624  1080001c	beqz	r4,L7_LF2
  683  00001628  54000000	nop; delay slot nop
  684  0000162c  304300ff	andi	r3,r2,#0x00ff
  685  00001630  70640039	sleui	r4,r3,#57
  686  00001634  1480005c	bnez	r4,L6_LF2
  687  00001638  54000000	nop; delay slot nop
  688  0000163c  08000004	j	L7_LF2
  689  00001640  54000000	nop; delay slot nop
  690  00001644          	L7_LF2:
  691  00001644  304300ff	andi	r3,r2,#0x00ff
  692  00001648  6c640060	sgtui	r4,r3,#96
  693  0000164c  1080001c	beqz	r4,L8_LF2
  694  00001650  54000000	nop; delay slot nop
  695  00001654  304300ff	andi	r3,r2,#0x00ff
  696  00001658  70640066	sleui	r4,r3,#102
  697  0000165c  14800034	bnez	r4,L6_LF2
  698  00001660  54000000	nop; delay slot nop
  699  00001664  08000004	j	L8_LF2
  700  00001668  54000000	nop; delay slot nop
  701  0000166c          	L8_LF2:
  702  0000166c  304300ff	andi	r3,r2,#0x00ff
  703  00001670  6c640040	sgtui	r4,r3,#64
  704  00001674  10800020	beqz	r4,L5_LF2
  705  00001678  54000000	nop; delay slot nop
  706  0000167c  304300ff	andi	r3,r2,#0x00ff
  707  00001680  70640041	sleui	r4,r3,#65
  708  00001684  1480000c	bnez	r4,L6_LF2
  709  00001688  54000000	nop; delay slot nop
  710  0000168c  08000008	j	L5_LF2
  711  00001690  54000000	nop; delay slot nop
  712  00001694          	L6_LF2:
  713  00001694  20010001	addi	r1,r0,#1
  714  00001698          	L5_LF2:
  715  00001698  08000004	j	L4_LF2
  716  0000169c  54000000	nop; delay slot nop
  717  000016a0          	L4_LF2:
  718  000016a0  8fa20000	lw	r2,0(r29)
  719  000016a4  8fa30004	lw	r3,4(r29)
  720  000016a8  8fa40008	lw	r4,8(r29)
  721  000016ac  8fdffff8	lw	r31,-8(r30)
  722  000016b0  001ee820	add	r29,r0,r30
  723  000016b4  8fdefffc	lw	r30,-4(r30)
  724  000016b8  4be00000	jr	r31
  725  000016bc  54000000	nop
  726  000016c0          	.endproc _isxdigit
  727  000016c0          	.align 2
  728  000016c0          	.proc _dstrcpy
  729  000016c0          	.global _dstrcpy
  730  000016c0          	_dstrcpy:
  731                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  732  000016c0  afbefffc	sw	-4(r29),r30; push fp
  733  000016c4  001df020	add	r30,r0,r29; fp = sp
  734  000016c8  afbffff8	sw	-8(r29),r31; push ret addr
  735  000016cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  736  000016d0  afa20000	sw	0(r29),r2
  737  000016d4  afa30004	sw	4(r29),r3
  738  000016d8  8fc10000	lw	r1,(r30)
  739  000016dc  afc1fff4	sw	-12(r30),r1
  740  000016e0          	L10_LF2:
  741  000016e0  8fc10000	lw	r1,(r30)
  742  000016e4  20220001	addi	r2,r1,#1
  743  000016e8  afc20000	sw	(r30),r2
  744  000016ec  8fc20004	lw	r2,4(r30)
  745  000016f0  20430001	addi	r3,r2,#1
  746  000016f4  afc30004	sw	4(r30),r3
  747  000016f8  80420000	lb	r2,(r2)
  748  000016fc  a0220000	sb	(r1),r2
  749  00001700  a3c2fff3	sb	-13(r30),r2
  750  00001704          	L12_LF2:
  751  00001704  93c1fff3	lbu	r1,-13(r30)
  752  00001708  64220000	snei	r2,r1,#0
  753  0000170c  1440000c	bnez	r2,L13_LF2
  754  00001710  54000000	nop; delay slot nop
  755  00001714  0800000c	j	L11_LF2
  756  00001718  54000000	nop; delay slot nop
  757  0000171c          	L13_LF2:
  758  0000171c  0bffffc0	j	L10_LF2
  759  00001720  54000000	nop; delay slot nop
  760  00001724          	L11_LF2:
  761  00001724  8fc1fff4	lw	r1,-12(r30)
  762  00001728  08000004	j	L9_LF2
  763  0000172c  54000000	nop; delay slot nop
  764  00001730          	L9_LF2:
  765  00001730  8fa20000	lw	r2,0(r29)
  766  00001734  8fa30004	lw	r3,4(r29)
  767  00001738  8fdffff8	lw	r31,-8(r30)
  768  0000173c  001ee820	add	r29,r0,r30
  769  00001740  8fdefffc	lw	r30,-4(r30)
  770  00001744  4be00000	jr	r31
  771  00001748  54000000	nop
  772  0000174c          	.endproc _dstrcpy
  773  0000174c          	.align 2
  774  0000174c          	.proc _dstrncpy
  775  0000174c          	.global _dstrncpy
  776  0000174c          	_dstrncpy:
  777                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  778  0000174c  afbefffc	sw	-4(r29),r30; push fp
  779  00001750  001df020	add	r30,r0,r29; fp = sp
  780  00001754  afbffff8	sw	-8(r29),r31; push ret addr
  781  00001758  2fbd0018	subui	r29,r29,#24; alloc local storage
  782  0000175c  afa20000	sw	0(r29),r2
  783  00001760  afa30004	sw	4(r29),r3
  784  00001764  8fc10000	lw	r1,(r30)
  785  00001768  afc1fff4	sw	-12(r30),r1
  786  0000176c          	L15_LF2:
  787  0000176c  8fc10008	lw	r1,8(r30)
  788  00001770  2022ffff	addi	r2,r1,#-1
  789  00001774  afc20008	sw	8(r30),r2
  790  00001778  70210000	slei	r1,r1,#0
  791  0000177c  1020000c	beqz	r1,L18_LF2
  792  00001780  54000000	nop; delay slot nop
  793  00001784  08000048	j	L16_LF2
  794  00001788  54000000	nop; delay slot nop
  795  0000178c          	L18_LF2:
  796  0000178c  8fc10000	lw	r1,(r30)
  797  00001790  20220001	addi	r2,r1,#1
  798  00001794  afc20000	sw	(r30),r2
  799  00001798  8fc20004	lw	r2,4(r30)
  800  0000179c  20430001	addi	r3,r2,#1
  801  000017a0  afc30004	sw	4(r30),r3
  802  000017a4  80420000	lb	r2,(r2)
  803  000017a8  a0220000	sb	(r1),r2
  804  000017ac  a3c2fff3	sb	-13(r30),r2
  805  000017b0          	L17_LF2:
  806  000017b0  93c1fff3	lbu	r1,-13(r30)
  807  000017b4  64220000	snei	r2,r1,#0
  808  000017b8  1440000c	bnez	r2,L19_LF2
  809  000017bc  54000000	nop; delay slot nop
  810  000017c0  0800000c	j	L16_LF2
  811  000017c4  54000000	nop; delay slot nop
  812  000017c8          	L19_LF2:
  813  000017c8  0bffffa0	j	L15_LF2
  814  000017cc  54000000	nop; delay slot nop
  815  000017d0          	L16_LF2:
  816  000017d0  8fc1fff4	lw	r1,-12(r30)
  817  000017d4  08000004	j	L14_LF2
  818  000017d8  54000000	nop; delay slot nop
  819  000017dc          	L14_LF2:
  820  000017dc  8fa20000	lw	r2,0(r29)
  821  000017e0  8fa30004	lw	r3,4(r29)
  822  000017e4  8fdffff8	lw	r31,-8(r30)
  823  000017e8  001ee820	add	r29,r0,r30
  824  000017ec  8fdefffc	lw	r30,-4(r30)
  825  000017f0  4be00000	jr	r31
  826  000017f4  54000000	nop
  827  000017f8          	.endproc _dstrncpy
  828  000017f8          	.align 2
  829  000017f8          	.proc _dstrcat
  830  000017f8          	.global _dstrcat
  831  000017f8          	_dstrcat:
  832                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  833  000017f8  afbefffc	sw	-4(r29),r30; push fp
  834  000017fc  001df020	add	r30,r0,r29; fp = sp
  835  00001800  afbffff8	sw	-8(r29),r31; push ret addr
  836  00001804  2fbd0018	subui	r29,r29,#24; alloc local storage
  837  00001808  afa20000	sw	0(r29),r2
  838  0000180c  8fc10000	lw	r1,(r30)
  839  00001810  afc1fff4	sw	-12(r30),r1
  840  00001814          	L21_LF2:
  841  00001814  8fc10000	lw	r1,(r30)
  842  00001818  90220000	lbu	r2,(r1)
  843  0000181c  64410000	snei	r1,r2,#0
  844  00001820  1420000c	bnez	r1,L23_LF2
  845  00001824  54000000	nop; delay slot nop
  846  00001828  0800001c	j	L22_LF2
  847  0000182c  54000000	nop; delay slot nop
  848  00001830          	L23_LF2:
  849  00001830  8fc20000	lw	r2,(r30)
  850  00001834  20410001	addi	r1,r2,#1
  851  00001838  00011020	add	r2,r0,r1
  852  0000183c  afc20000	sw	(r30),r2
  853  00001840  0bffffd0	j	L21_LF2
  854  00001844  54000000	nop; delay slot nop
  855  00001848          	L22_LF2:
  856  00001848  23bdfff8	addi	r29,r29,#-8
  857  0000184c  001d0820	add	r1,r0,r29
  858  00001850  8fc20000	lw	r2,(r30)
  859  00001854  ac220000	sw	(r1),r2
  860  00001858  8fc20004	lw	r2,4(r30)
  861  0000185c  ac220004	sw	4(r1),r2
  862  00001860  0ffffe5c	jal	_dstrcpy
  863  00001864  54000000	nop; delay slot nop
  864  00001868  23bd0008	addi	r29,r29,#8
  865  0000186c  8fc1fff4	lw	r1,-12(r30)
  866  00001870  08000004	j	L20_LF2
  867  00001874  54000000	nop; delay slot nop
  868  00001878          	L20_LF2:
  869  00001878  8fa20000	lw	r2,0(r29)
  870  0000187c  8fdffff8	lw	r31,-8(r30)
  871  00001880  001ee820	add	r29,r0,r30
  872  00001884  8fdefffc	lw	r30,-4(r30)
  873  00001888  4be00000	jr	r31
  874  0000188c  54000000	nop
  875  00001890          	.endproc _dstrcat
  876  00001890          	.align 2
  877  00001890          	.proc _dstrncmp
  878  00001890          	.global _dstrncmp
  879  00001890          	_dstrncmp:
  880                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  881  00001890  afbefffc	sw	-4(r29),r30; push fp
  882  00001894  001df020	add	r30,r0,r29; fp = sp
  883  00001898  afbffff8	sw	-8(r29),r31; push ret addr
  884  0000189c  2fbd0018	subui	r29,r29,#24; alloc local storage
  885  000018a0  afa20000	sw	0(r29),r2
  886  000018a4  afa30004	sw	4(r29),r3
  887  000018a8  54000000	nop
  888  000018ac  20010000	addi	r1,r0,#0
  889  000018b0  afc1fff4	sw	-12(r30),r1
  890  000018b4          	L25_LF2:
  891  000018b4  8fc1fff4	lw	r1,-12(r30)
  892  000018b8  8fc20008	lw	r2,8(r30)
  893  000018bc  0022082a	slt	r1,r1,r2
  894  000018c0  1420000c	bnez	r1,L28_LF2
  895  000018c4  54000000	nop; delay slot nop
  896  000018c8  08000088	j	L26_LF2
  897  000018cc  54000000	nop; delay slot nop
  898  000018d0          	L28_LF2:
  899  000018d0  8fc10004	lw	r1,4(r30)
  900  000018d4  90220000	lbu	r2,(r1)
  901  000018d8  64410000	snei	r1,r2,#0
  902  000018dc  14200018	bnez	r1,L29_LF2
  903  000018e0  54000000	nop; delay slot nop
  904  000018e4  20010000	addi	r1,r0,#0
  905  000018e8  080000d8	j	L24_LF2
  906  000018ec  54000000	nop; delay slot nop
  907  000018f0  08000028	j	L30_LF2
  908  000018f4  54000000	nop; delay slot nop
  909  000018f8          	L29_LF2:
  910  000018f8  8fc10000	lw	r1,(r30)
  911  000018fc  8fc20004	lw	r2,4(r30)
  912  00001900  90210000	lbu	r1,(r1)
  913  00001904  90420000	lbu	r2,(r2)
  914  00001908  00220829	sne	r1,r1,r2
  915  0000190c  1020000c	beqz	r1,L30_LF2
  916  00001910  54000000	nop; delay slot nop
  917  00001914  0800003c	j	L26_LF2
  918  00001918  54000000	nop; delay slot nop
  919  0000191c          	L31_LF2:
  920  0000191c          	L30_LF2:
  921  0000191c  8fc20000	lw	r2,(r30)
  922  00001920  20410001	addi	r1,r2,#1
  923  00001924  00011020	add	r2,r0,r1
  924  00001928  afc20000	sw	(r30),r2
  925  0000192c  8fc20004	lw	r2,4(r30)
  926  00001930  20410001	addi	r1,r2,#1
  927  00001934  00011020	add	r2,r0,r1
  928  00001938  afc20004	sw	4(r30),r2
  929  0000193c          	L27_LF2:
  930  0000193c  8fc2fff4	lw	r2,-12(r30)
  931  00001940  20410001	addi	r1,r2,#1
  932  00001944  00011020	add	r2,r0,r1
  933  00001948  afc2fff4	sw	-12(r30),r2
  934  0000194c  0bffff64	j	L25_LF2
  935  00001950  54000000	nop; delay slot nop
  936  00001954          	L26_LF2:
  937  00001954  8fc1fff4	lw	r1,-12(r30)
  938  00001958  8fc20008	lw	r2,8(r30)
  939  0000195c  00220828	seq	r1,r1,r2
  940  00001960  10200018	beqz	r1,L32_LF2
  941  00001964  54000000	nop; delay slot nop
  942  00001968  20010000	addi	r1,r0,#0
  943  0000196c  08000054	j	L24_LF2
  944  00001970  54000000	nop; delay slot nop
  945  00001974  0800004c	j	L33_LF2
  946  00001978  54000000	nop; delay slot nop
  947  0000197c          	L32_LF2:
  948  0000197c  8fc20000	lw	r2,(r30)
  949  00001980  90410000	lbu	r1,(r2)
  950  00001984  8fc20004	lw	r2,4(r30)
  951  00001988  90430000	lbu	r3,(r2)
  952  0000198c  00230822	sub	r1,r1,r3
  953  00001990  74220000	sgei	r2,r1,#0
  954  00001994  10400020	beqz	r2,L34_LF2
  955  00001998  54000000	nop; delay slot nop
  956  0000199c  8fc10000	lw	r1,(r30)
  957  000019a0  8fc20004	lw	r2,4(r30)
  958  000019a4  90210000	lbu	r1,(r1)
  959  000019a8  90420000	lbu	r2,(r2)
  960  000019ac  00220829	sne	r1,r1,r2
  961  000019b0  08000008	j	L35_LF2
  962  000019b4  54000000	nop; delay slot nop
  963  000019b8          	L34_LF2:
  964  000019b8  2001ffff	addi	r1,r0,#-1
  965  000019bc          	L35_LF2:
  966  000019bc  08000004	j	L24_LF2
  967  000019c0  54000000	nop; delay slot nop
  968  000019c4          	L33_LF2:
  969  000019c4          	L24_LF2:
  970  000019c4  8fa20000	lw	r2,0(r29)
  971  000019c8  8fa30004	lw	r3,4(r29)
  972  000019cc  8fdffff8	lw	r31,-8(r30)
  973  000019d0  001ee820	add	r29,r0,r30
  974  000019d4  8fdefffc	lw	r30,-4(r30)
  975  000019d8  4be00000	jr	r31
  976  000019dc  54000000	nop
  977  000019e0          	.endproc _dstrncmp
  978  000019e0          	.align 2
  979  000019e0          	.proc _dstrlen
  980  000019e0          	.global _dstrlen
  981  000019e0          	_dstrlen:
  982                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  983  000019e0  afbefffc	sw	-4(r29),r30; push fp
  984  000019e4  001df020	add	r30,r0,r29; fp = sp
  985  000019e8  afbffff8	sw	-8(r29),r31; push ret addr
  986  000019ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  987  000019f0  afa20000	sw	0(r29),r2
  988  000019f4  20010000	addi	r1,r0,#0
  989  000019f8  afc1fff4	sw	-12(r30),r1
  990  000019fc          	L37_LF2:
  991  000019fc  8fc10000	lw	r1,(r30)
  992  00001a00  20220001	addi	r2,r1,#1
  993  00001a04  afc20000	sw	(r30),r2
  994  00001a08  90210000	lbu	r1,(r1)
  995  00001a0c  64220000	snei	r2,r1,#0
  996  00001a10  1440000c	bnez	r2,L39_LF2
  997  00001a14  54000000	nop; delay slot nop
  998  00001a18  0800001c	j	L38_LF2
  999  00001a1c  54000000	nop; delay slot nop
 1000  00001a20          	L39_LF2:
 1001  00001a20  8fc2fff4	lw	r2,-12(r30)
 1002  00001a24  20410001	addi	r1,r2,#1
 1003  00001a28  00011020	add	r2,r0,r1
 1004  00001a2c  afc2fff4	sw	-12(r30),r2
 1005  00001a30  0bffffc8	j	L37_LF2
 1006  00001a34  54000000	nop; delay slot nop
 1007  00001a38          	L38_LF2:
 1008  00001a38  8fc1fff4	lw	r1,-12(r30)
 1009  00001a3c  08000004	j	L36_LF2
 1010  00001a40  54000000	nop; delay slot nop
 1011  00001a44          	L36_LF2:
 1012  00001a44  8fa20000	lw	r2,0(r29)
 1013  00001a48  8fdffff8	lw	r31,-8(r30)
 1014  00001a4c  001ee820	add	r29,r0,r30
 1015  00001a50  8fdefffc	lw	r30,-4(r30)
 1016  00001a54  4be00000	jr	r31
 1017  00001a58  54000000	nop
 1018  00001a5c          	.endproc _dstrlen
 1019  00001a5c          	.align 2
 1020  00001a5c          	.proc _dstrstr
 1021  00001a5c          	.global _dstrstr
 1022  00001a5c          	_dstrstr:
 1023                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1024  00001a5c  afbefffc	sw	-4(r29),r30; push fp
 1025  00001a60  001df020	add	r30,r0,r29; fp = sp
 1026  00001a64  afbffff8	sw	-8(r29),r31; push ret addr
 1027  00001a68  2fbd0018	subui	r29,r29,#24; alloc local storage
 1028  00001a6c  afa20000	sw	0(r29),r2
 1029  00001a70  23bdfff8	addi	r29,r29,#-8
 1030  00001a74  001d0820	add	r1,r0,r29
 1031  00001a78  8fc20004	lw	r2,4(r30)
 1032  00001a7c  ac220000	sw	(r1),r2
 1033  00001a80  0fffff5c	jal	_dstrlen
 1034  00001a84  54000000	nop; delay slot nop
 1035  00001a88  23bd0008	addi	r29,r29,#8
 1036  00001a8c  afc1fff4	sw	-12(r30),r1
 1037  00001a90          	L41_LF2:
 1038  00001a90  8fc10000	lw	r1,(r30)
 1039  00001a94  90220000	lbu	r2,(r1)
 1040  00001a98  64410000	snei	r1,r2,#0
 1041  00001a9c  1420000c	bnez	r1,L43_LF2
 1042  00001aa0  54000000	nop; delay slot nop
 1043  00001aa4  08000060	j	L42_LF2
 1044  00001aa8  54000000	nop; delay slot nop
 1045  00001aac          	L43_LF2:
 1046  00001aac  23bdfff0	addi	r29,r29,#-16
 1047  00001ab0  001d0820	add	r1,r0,r29
 1048  00001ab4  8fc20000	lw	r2,(r30)
 1049  00001ab8  ac220000	sw	(r1),r2
 1050  00001abc  8fc20004	lw	r2,4(r30)
 1051  00001ac0  ac220004	sw	4(r1),r2
 1052  00001ac4  8fc2fff4	lw	r2,-12(r30)
 1053  00001ac8  ac220008	sw	8(r1),r2
 1054  00001acc  0ffffdc0	jal	_dstrncmp
 1055  00001ad0  54000000	nop; delay slot nop
 1056  00001ad4  23bd0010	addi	r29,r29,#16
 1057  00001ad8  64220000	snei	r2,r1,#0
 1058  00001adc  14400010	bnez	r2,L44_LF2
 1059  00001ae0  54000000	nop; delay slot nop
 1060  00001ae4  8fc10000	lw	r1,(r30)
 1061  00001ae8  08000028	j	L40_LF2
 1062  00001aec  54000000	nop; delay slot nop
 1063  00001af0          	L44_LF2:
 1064  00001af0  8fc20000	lw	r2,(r30)
 1065  00001af4  20410001	addi	r1,r2,#1
 1066  00001af8  00011020	add	r2,r0,r1
 1067  00001afc  afc20000	sw	(r30),r2
 1068  00001b00  0bffff8c	j	L41_LF2
 1069  00001b04  54000000	nop; delay slot nop
 1070  00001b08          	L42_LF2:
 1071  00001b08  20010000	addi	r1,r0,#0
 1072  00001b0c  08000004	j	L40_LF2
 1073  00001b10  54000000	nop; delay slot nop
 1074  00001b14          	L40_LF2:
 1075  00001b14  8fa20000	lw	r2,0(r29)
 1076  00001b18  8fdffff8	lw	r31,-8(r30)
 1077  00001b1c  001ee820	add	r29,r0,r30
 1078  00001b20  8fdefffc	lw	r30,-4(r30)
 1079  00001b24  4be00000	jr	r31
 1080  00001b28  54000000	nop
 1081  00001b2c          	.endproc _dstrstr
 1082  00001b2c          	.align 2
 1083  00001b2c          	.proc _dmindex
 1084  00001b2c          	.global _dmindex
 1085  00001b2c          	_dmindex:
 1086                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1087  00001b2c  afbefffc	sw	-4(r29),r30; push fp
 1088  00001b30  001df020	add	r30,r0,r29; fp = sp
 1089  00001b34  afbffff8	sw	-8(r29),r31; push ret addr
 1090  00001b38  2fbd0018	subui	r29,r29,#24; alloc local storage
 1091  00001b3c  afa20000	sw	0(r29),r2
 1092  00001b40  54000000	nop
 1093  00001b44          	L46_LF2:
 1094  00001b44  8fc10000	lw	r1,(r30)
 1095  00001b48  90220000	lbu	r2,(r1)
 1096  00001b4c  64410000	snei	r1,r2,#0
 1097  00001b50  1420000c	bnez	r1,L48_LF2
 1098  00001b54  54000000	nop; delay slot nop
 1099  00001b58  08000070	j	L47_LF2
 1100  00001b5c  54000000	nop; delay slot nop
 1101  00001b60          	L48_LF2:
 1102  00001b60  8fc10004	lw	r1,4(r30)
 1103  00001b64  afc1fff4	sw	-12(r30),r1
 1104  00001b68          	L49_LF2:
 1105  00001b68  8fc1fff4	lw	r1,-12(r30)
 1106  00001b6c  90220000	lbu	r2,(r1)
 1107  00001b70  64410000	snei	r1,r2,#0
 1108  00001b74  1420000c	bnez	r1,L52_LF2
 1109  00001b78  54000000	nop; delay slot nop
 1110  00001b7c  08000044	j	L50_LF2
 1111  00001b80  54000000	nop; delay slot nop
 1112  00001b84          	L52_LF2:
 1113  00001b84  8fc10000	lw	r1,(r30)
 1114  00001b88  8fc2fff4	lw	r2,-12(r30)
 1115  00001b8c  90210000	lbu	r1,(r1)
 1116  00001b90  90420000	lbu	r2,(r2)
 1117  00001b94  00220828	seq	r1,r1,r2
 1118  00001b98  10200010	beqz	r1,L51_LF2
 1119  00001b9c  54000000	nop; delay slot nop
 1120  00001ba0  8fc10000	lw	r1,(r30)
 1121  00001ba4  08000030	j	L45_LF2
 1122  00001ba8  54000000	nop; delay slot nop
 1123  00001bac          	L53_LF2:
 1124  00001bac          	L51_LF2:
 1125  00001bac  8fc2fff4	lw	r2,-12(r30)
 1126  00001bb0  20410001	addi	r1,r2,#1
 1127  00001bb4  00011020	add	r2,r0,r1
 1128  00001bb8  afc2fff4	sw	-12(r30),r2
 1129  00001bbc  0bffffa8	j	L49_LF2
 1130  00001bc0  54000000	nop; delay slot nop
 1131  00001bc4          	L50_LF2:
 1132  00001bc4  0bffff7c	j	L46_LF2
 1133  00001bc8  54000000	nop; delay slot nop
 1134  00001bcc          	L47_LF2:
 1135  00001bcc  20010000	addi	r1,r0,#0
 1136  00001bd0  08000004	j	L45_LF2
 1137  00001bd4  54000000	nop; delay slot nop
 1138  00001bd8          	L45_LF2:
 1139  00001bd8  8fa20000	lw	r2,0(r29)
 1140  00001bdc  8fdffff8	lw	r31,-8(r30)
 1141  00001be0  001ee820	add	r29,r0,r30
 1142  00001be4  8fdefffc	lw	r30,-4(r30)
 1143  00001be8  4be00000	jr	r31
 1144  00001bec  54000000	nop
 1145  00001bf0          	.endproc _dmindex
 1146  00001bf0          	.align 2
 1147  00001bf0          	.proc _dindex
 1148  00001bf0          	.global _dindex
 1149  00001bf0          	_dindex:
 1150                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1151  00001bf0  afbefffc	sw	-4(r29),r30; push fp
 1152  00001bf4  001df020	add	r30,r0,r29; fp = sp
 1153  00001bf8  afbffff8	sw	-8(r29),r31; push ret addr
 1154  00001bfc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1155  00001c00  afa20000	sw	0(r29),r2
 1156  00001c04  54000000	nop
 1157  00001c08          	L55_LF2:
 1158  00001c08  8fc10000	lw	r1,(r30)
 1159  00001c0c  90220000	lbu	r2,(r1)
 1160  00001c10  64410000	snei	r1,r2,#0
 1161  00001c14  1420000c	bnez	r1,L57_LF2
 1162  00001c18  54000000	nop; delay slot nop
 1163  00001c1c  08000040	j	L56_LF2
 1164  00001c20  54000000	nop; delay slot nop
 1165  00001c24          	L57_LF2:
 1166  00001c24  8fc10000	lw	r1,(r30)
 1167  00001c28  90220000	lbu	r2,(r1)
 1168  00001c2c  8fc10004	lw	r1,4(r30)
 1169  00001c30  00411028	seq	r2,r2,r1
 1170  00001c34  10400010	beqz	r2,L58_LF2
 1171  00001c38  54000000	nop; delay slot nop
 1172  00001c3c  8fc10000	lw	r1,(r30)
 1173  00001c40  08000028	j	L54_LF2
 1174  00001c44  54000000	nop; delay slot nop
 1175  00001c48          	L58_LF2:
 1176  00001c48  8fc20000	lw	r2,(r30)
 1177  00001c4c  20410001	addi	r1,r2,#1
 1178  00001c50  00011020	add	r2,r0,r1
 1179  00001c54  afc20000	sw	(r30),r2
 1180  00001c58  0bffffac	j	L55_LF2
 1181  00001c5c  54000000	nop; delay slot nop
 1182  00001c60          	L56_LF2:
 1183  00001c60  20010000	addi	r1,r0,#0
 1184  00001c64  08000004	j	L54_LF2
 1185  00001c68  54000000	nop; delay slot nop
 1186  00001c6c          	L54_LF2:
 1187  00001c6c  8fa20000	lw	r2,0(r29)
 1188  00001c70  8fdffff8	lw	r31,-8(r30)
 1189  00001c74  001ee820	add	r29,r0,r30
 1190  00001c78  8fdefffc	lw	r30,-4(r30)
 1191  00001c7c  4be00000	jr	r31
 1192  00001c80  54000000	nop
 1193  00001c84          	.endproc _dindex
 1194  00001c84          	.align 2
 1195  00001c84          	.proc _ditoa
 1196  00001c84          	.global _ditoa
 1197  00001c84          	_ditoa:
 1198                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1199  00001c84  afbefffc	sw	-4(r29),r30; push fp
 1200  00001c88  001df020	add	r30,r0,r29; fp = sp
 1201  00001c8c  afbffff8	sw	-8(r29),r31; push ret addr
 1202  00001c90  2fbd0018	subui	r29,r29,#24; alloc local storage
 1203  00001c94  afa20000	sw	0(r29),r2
 1204  00001c98  afa30004	sw	4(r29),r3
 1205  00001c9c  8fc10000	lw	r1,(r30)
 1206  00001ca0  68220000	slti	r2,r1,#0
 1207  00001ca4  1040002c	beqz	r2,L60_LF2
 1208  00001ca8  54000000	nop; delay slot nop
 1209  00001cac  8fc10004	lw	r1,4(r30)
 1210  00001cb0  20220001	addi	r2,r1,#1
 1211  00001cb4  afc20004	sw	4(r30),r2
 1212  00001cb8  2002002d	addi	r2,r0,(#0x2d)&0xff
 1213  00001cbc  a0220000	sb	(r1),r2
 1214  00001cc0  8fc10000	lw	r1,(r30)
 1215  00001cc4  00011022	sub	r2,r0,r1
 1216  00001cc8  afc20000	sw	(r30),r2
 1217  00001ccc  08000118	j	L61_LF2
 1218  00001cd0  54000000	nop; delay slot nop
 1219  00001cd4          	L60_LF2:
 1220  00001cd4  8fc10000	lw	r1,(r30)
 1221  00001cd8  64220000	snei	r2,r1,#0
 1222  00001cdc  14400020	bnez	r2,L62_LF2
 1223  00001ce0  54000000	nop; delay slot nop
 1224  00001ce4  8fc10004	lw	r1,4(r30)
 1225  00001ce8  20220001	addi	r2,r1,#1
 1226  00001cec  afc20004	sw	4(r30),r2
 1227  00001cf0  20020030	addi	r2,r0,(#0x30)&0xff
 1228  00001cf4  a0220000	sb	(r1),r2
 1229  00001cf8  080000ec	j	L61_LF2
 1230  00001cfc  54000000	nop; delay slot nop
 1231  00001d00          	L62_LF2:
 1232  00001d00  20010001	addi	r1,r0,#1
 1233  00001d04  afc1fff4	sw	-12(r30),r1
 1234  00001d08          	L64_LF2:
 1235  00001d08  8fc1fff4	lw	r1,-12(r30)
 1236  00001d0c  8fc20000	lw	r2,(r30)
 1237  00001d10  0022082c	sle	r1,r1,r2
 1238  00001d14  1420000c	bnez	r1,L66_LF2
 1239  00001d18  54000000	nop; delay slot nop
 1240  00001d1c  08000024	j	L65_LF2
 1241  00001d20  54000000	nop; delay slot nop
 1242  00001d24          	L67_LF2:
 1243  00001d24          	L66_LF2:
 1244  00001d24  8fc1fff4	lw	r1,-12(r30)
 1245  00001d28  00011820	add	r3,r0,r1
 1246  00001d2c  50620002	slli	r2,r3,#0x2
 1247  00001d30  00411020	add	r2,r2,r1
 1248  00001d34  50410001	slli	r1,r2,#0x1
 1249  00001d38  afc1fff4	sw	-12(r30),r1
 1250  00001d3c  0bffffc8	j	L64_LF2
 1251  00001d40  54000000	nop; delay slot nop
 1252  00001d44          	L65_LF2:
 1253  00001d44  54000000	nop
 1254  00001d48          	L68_LF2:
 1255  00001d48  8fc1fff4	lw	r1,-12(r30)
 1256  00001d4c  2002000a	addi	r2,r0,#10
 1257  00001d50  00200035	movi2fp	f0,r1
 1258  00001d54  00400835	movi2fp	f1,r2
 1259  00001d58  0401000f	div	f0,f0,f1
 1260  00001d5c  00000834	movfp2i	r1,f0
 1261  00001d60  afc1fff4	sw	-12(r30),r1
 1262  00001d64  8fc10004	lw	r1,4(r30)
 1263  00001d68  20220001	addi	r2,r1,#1
 1264  00001d6c  afc20004	sw	4(r30),r2
 1265  00001d70  8fc20000	lw	r2,(r30)
 1266  00001d74  8fc3fff4	lw	r3,-12(r30)
 1267  00001d78  00400035	movi2fp	f0,r2
 1268  00001d7c  00600835	movi2fp	f1,r3
 1269  00001d80  0401000f	div	f0,f0,f1
 1270  00001d84  00001034	movfp2i	r2,f0
 1271  00001d88  00021820	add	r3,r0,r2
 1272  00001d8c  20620030	addi	r2,r3,#48
 1273  00001d90  a0220000	sb	(r1),r2
 1274  00001d94  8fc10000	lw	r1,(r30)
 1275  00001d98  8fc3fff4	lw	r3,-12(r30)
 1276  00001d9c  00200035	movi2fp	f0,r1
 1277  00001da0  00600835	movi2fp	f1,r3
 1278  00001da4  0401000f	div	f0,f0,f1
 1279  00001da8  00001034	movfp2i	r2,f0
 1280  00001dac  8fc3fff4	lw	r3,-12(r30)
 1281  00001db0  00400035	movi2fp	f0,r2
 1282  00001db4  00600835	movi2fp	f1,r3
 1283  00001db8  0401000e	mult	f0,f0,f1
 1284  00001dbc  00001034	movfp2i	r2,f0
 1285  00001dc0  00220822	sub	r1,r1,r2
 1286  00001dc4  afc10000	sw	(r30),r1
 1287  00001dc8          	L70_LF2:
 1288  00001dc8  8fc1fff4	lw	r1,-12(r30)
 1289  00001dcc  6c220001	sgti	r2,r1,#1
 1290  00001dd0  1440000c	bnez	r2,L71_LF2
 1291  00001dd4  54000000	nop; delay slot nop
 1292  00001dd8  0800000c	j	L61_LF2
 1293  00001ddc  54000000	nop; delay slot nop
 1294  00001de0          	L71_LF2:
 1295  00001de0  0bffff64	j	L68_LF2
 1296  00001de4  54000000	nop; delay slot nop
 1297  00001de8          	L69_LF2:
 1298  00001de8          	L63_LF2:
 1299  00001de8          	L61_LF2:
 1300  00001de8  8fc10004	lw	r1,4(r30)
 1301  00001dec  20020000	addi	r2,r0,(#0x0)&0xff
 1302  00001df0  a0220000	sb	(r1),r2
 1303  00001df4          	L59_LF2:
 1304  00001df4  8fa20000	lw	r2,0(r29)
 1305  00001df8  8fa30004	lw	r3,4(r29)
 1306  00001dfc  8fdffff8	lw	r31,-8(r30)
 1307  00001e00  001ee820	add	r29,r0,r30
 1308  00001e04  8fdefffc	lw	r30,-4(r30)
 1309  00001e08  4be00000	jr	r31
 1310  00001e0c  54000000	nop
 1311  00001e10          	.endproc _ditoa
 1312  00001e10          	.align 2
 1313  00001e10          	.proc _dstrtol
 1314  00001e10          	.global _dstrtol
 1315  00001e10          	_dstrtol:
 1316                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1317  00001e10  afbefffc	sw	-4(r29),r30; push fp
 1318  00001e14  001df020	add	r30,r0,r29; fp = sp
 1319  00001e18  afbffff8	sw	-8(r29),r31; push ret addr
 1320  00001e1c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1321  00001e20  afa20000	sw	0(r29),r2
 1322  00001e24  20010000	addi	r1,r0,#0
 1323  00001e28  afc1fff4	sw	-12(r30),r1
 1324  00001e2c          	L73_LF2:
 1325  00001e2c  8fc10000	lw	r1,(r30)
 1326  00001e30  90220000	lbu	r2,(r1)
 1327  00001e34  60410020	seqi	r1,r2,#32
 1328  00001e38  14200034	bnez	r1,L75_LF2
 1329  00001e3c  54000000	nop; delay slot nop
 1330  00001e40  8fc10000	lw	r1,(r30)
 1331  00001e44  90220000	lbu	r2,(r1)
 1332  00001e48  60410009	seqi	r1,r2,#9
 1333  00001e4c  14200020	bnez	r1,L75_LF2
 1334  00001e50  54000000	nop; delay slot nop
 1335  00001e54  8fc10000	lw	r1,(r30)
 1336  00001e58  90220000	lbu	r2,(r1)
 1337  00001e5c  6041000a	seqi	r1,r2,#10
 1338  00001e60  1420000c	bnez	r1,L75_LF2
 1339  00001e64  54000000	nop; delay slot nop
 1340  00001e68  0800001c	j	L74_LF2
 1341  00001e6c  54000000	nop; delay slot nop
 1342  00001e70          	L75_LF2:
 1343  00001e70  8fc20000	lw	r2,(r30)
 1344  00001e74  20410001	addi	r1,r2,#1
 1345  00001e78  00011020	add	r2,r0,r1
 1346  00001e7c  afc20000	sw	(r30),r2
 1347  00001e80  0bffffa8	j	L73_LF2
 1348  00001e84  54000000	nop; delay slot nop
 1349  00001e88          	L74_LF2:
 1350  00001e88  8fc10004	lw	r1,4(r30)
 1351  00001e8c  64220000	snei	r2,r1,#0
 1352  00001e90  10400010	beqz	r2,L76_LF2
 1353  00001e94  54000000	nop; delay slot nop
 1354  00001e98  8fc10004	lw	r1,4(r30)
 1355  00001e9c  8fc20000	lw	r2,(r30)
 1356  00001ea0  ac220000	sw	(r1),r2
 1357  00001ea4          	L76_LF2:
 1358  00001ea4  8fc10000	lw	r1,(r30)
 1359  00001ea8  90220000	lbu	r2,(r1)
 1360  00001eac  64410000	snei	r1,r2,#0
 1361  00001eb0  14200010	bnez	r1,L77_LF2
 1362  00001eb4  54000000	nop; delay slot nop
 1363  00001eb8  8fc1fff4	lw	r1,-12(r30)
 1364  00001ebc  08000294	j	L72_LF2
 1365  00001ec0  54000000	nop; delay slot nop
 1366  00001ec4          	L77_LF2:
 1367  00001ec4  8fc10000	lw	r1,(r30)
 1368  00001ec8  90220000	lbu	r2,(r1)
 1369  00001ecc  6041002d	seqi	r1,r2,#45
 1370  00001ed0  10200024	beqz	r1,L78_LF2
 1371  00001ed4  54000000	nop; delay slot nop
 1372  00001ed8  2001ffff	addi	r1,r0,#-1
 1373  00001edc  afc1ffec	sw	-20(r30),r1
 1374  00001ee0  8fc20000	lw	r2,(r30)
 1375  00001ee4  20410001	addi	r1,r2,#1
 1376  00001ee8  00011020	add	r2,r0,r1
 1377  00001eec  afc20000	sw	(r30),r2
 1378  00001ef0  0800000c	j	L79_LF2
 1379  00001ef4  54000000	nop; delay slot nop
 1380  00001ef8          	L78_LF2:
 1381  00001ef8  20010001	addi	r1,r0,#1
 1382  00001efc  afc1ffec	sw	-20(r30),r1
 1383  00001f00          	L79_LF2:
 1384  00001f00  8fc10008	lw	r1,8(r30)
 1385  00001f04  64220000	snei	r2,r1,#0
 1386  00001f08  14400090	bnez	r2,L80_LF2
 1387  00001f0c  54000000	nop; delay slot nop
 1388  00001f10  8fc10000	lw	r1,(r30)
 1389  00001f14  90220000	lbu	r2,(r1)
 1390  00001f18  60410030	seqi	r1,r2,#48
 1391  00001f1c  10200074	beqz	r1,L81_LF2
 1392  00001f20  54000000	nop; delay slot nop
 1393  00001f24  8fc20000	lw	r2,(r30)
 1394  00001f28  20410001	addi	r1,r2,#1
 1395  00001f2c  00011020	add	r2,r0,r1
 1396  00001f30  afc20000	sw	(r30),r2
 1397  00001f34  8fc10000	lw	r1,(r30)
 1398  00001f38  90220000	lbu	r2,(r1)
 1399  00001f3c  60410078	seqi	r1,r2,#120
 1400  00001f40  14200020	bnez	r1,L83_LF2
 1401  00001f44  54000000	nop; delay slot nop
 1402  00001f48  8fc10000	lw	r1,(r30)
 1403  00001f4c  90220000	lbu	r2,(r1)
 1404  00001f50  60410058	seqi	r1,r2,#88
 1405  00001f54  1420000c	bnez	r1,L83_LF2
 1406  00001f58  54000000	nop; delay slot nop
 1407  00001f5c  08000024	j	L82_LF2
 1408  00001f60  54000000	nop; delay slot nop
 1409  00001f64          	L83_LF2:
 1410  00001f64  20010010	addi	r1,r0,#16
 1411  00001f68  afc10008	sw	8(r30),r1
 1412  00001f6c  8fc20000	lw	r2,(r30)
 1413  00001f70  20410001	addi	r1,r2,#1
 1414  00001f74  00011020	add	r2,r0,r1
 1415  00001f78  afc20000	sw	(r30),r2
 1416  00001f7c  0800000c	j	L84_LF2
 1417  00001f80  54000000	nop; delay slot nop
 1418  00001f84          	L82_LF2:
 1419  00001f84  20010008	addi	r1,r0,#8
 1420  00001f88  afc10008	sw	8(r30),r1
 1421  00001f8c          	L84_LF2:
 1422  00001f8c  0800000c	j	L80_LF2
 1423  00001f90  54000000	nop; delay slot nop
 1424  00001f94          	L81_LF2:
 1425  00001f94  2001000a	addi	r1,r0,#10
 1426  00001f98  afc10008	sw	8(r30),r1
 1427  00001f9c          	L85_LF2:
 1428  00001f9c          	L80_LF2:
 1429  00001f9c  8fc10008	lw	r1,8(r30)
 1430  00001fa0  70220000	slei	r2,r1,#0
 1431  00001fa4  1440001c	bnez	r2,L87_LF2
 1432  00001fa8  54000000	nop; delay slot nop
 1433  00001fac  8fc10008	lw	r1,8(r30)
 1434  00001fb0  6c220010	sgti	r2,r1,#16
 1435  00001fb4  1440000c	bnez	r2,L87_LF2
 1436  00001fb8  54000000	nop; delay slot nop
 1437  00001fbc  08000010	j	L86_LF2
 1438  00001fc0  54000000	nop; delay slot nop
 1439  00001fc4          	L87_LF2:
 1440  00001fc4  8fc1fff4	lw	r1,-12(r30)
 1441  00001fc8  08000188	j	L72_LF2
 1442  00001fcc  54000000	nop; delay slot nop
 1443  00001fd0          	L86_LF2:
 1444  00001fd0  54000000	nop
 1445  00001fd4          	L88_LF2:
 1446  00001fd4  8fc10000	lw	r1,(r30)
 1447  00001fd8  90220000	lbu	r2,(r1)
 1448  00001fdc  6c41002f	sgtui	r1,r2,#47
 1449  00001fe0  10200030	beqz	r1,L91_LF2
 1450  00001fe4  54000000	nop; delay slot nop
 1451  00001fe8  8fc10000	lw	r1,(r30)
 1452  00001fec  90220000	lbu	r2,(r1)
 1453  00001ff0  70410039	sleui	r1,r2,#57
 1454  00001ff4  1020001c	beqz	r1,L91_LF2
 1455  00001ff8  54000000	nop; delay slot nop
 1456  00001ffc  8fc10000	lw	r1,(r30)
 1457  00002000  90220000	lbu	r2,(r1)
 1458  00002004  2041ffd0	addi	r1,r2,#-48
 1459  00002008  afc1fff0	sw	-16(r30),r1
 1460  0000200c  0800008c	j	L92_LF2
 1461  00002010  54000000	nop; delay slot nop
 1462  00002014          	L91_LF2:
 1463  00002014  8fc10000	lw	r1,(r30)
 1464  00002018  90220000	lbu	r2,(r1)
 1465  0000201c  6c410060	sgtui	r1,r2,#96
 1466  00002020  10200030	beqz	r1,L93_LF2
 1467  00002024  54000000	nop; delay slot nop
 1468  00002028  8fc10000	lw	r1,(r30)
 1469  0000202c  90220000	lbu	r2,(r1)
 1470  00002030  7041007a	sleui	r1,r2,#122
 1471  00002034  1020001c	beqz	r1,L93_LF2
 1472  00002038  54000000	nop; delay slot nop
 1473  0000203c  8fc10000	lw	r1,(r30)
 1474  00002040  90220000	lbu	r2,(r1)
 1475  00002044  2041ffa9	addi	r1,r2,#-87
 1476  00002048  afc1fff0	sw	-16(r30),r1
 1477  0000204c  0800004c	j	L92_LF2
 1478  00002050  54000000	nop; delay slot nop
 1479  00002054          	L93_LF2:
 1480  00002054  8fc10000	lw	r1,(r30)
 1481  00002058  90220000	lbu	r2,(r1)
 1482  0000205c  6c410040	sgtui	r1,r2,#64
 1483  00002060  10200030	beqz	r1,L95_LF2
 1484  00002064  54000000	nop; delay slot nop
 1485  00002068  8fc10000	lw	r1,(r30)
 1486  0000206c  90220000	lbu	r2,(r1)
 1487  00002070  7041005a	sleui	r1,r2,#90
 1488  00002074  1020001c	beqz	r1,L95_LF2
 1489  00002078  54000000	nop; delay slot nop
 1490  0000207c  8fc10000	lw	r1,(r30)
 1491  00002080  90220000	lbu	r2,(r1)
 1492  00002084  2041ffc9	addi	r1,r2,#-55
 1493  00002088  afc1fff0	sw	-16(r30),r1
 1494  0000208c  0800000c	j	L92_LF2
 1495  00002090  54000000	nop; delay slot nop
 1496  00002094          	L95_LF2:
 1497  00002094  200103e8	addi	r1,r0,#1000
 1498  00002098  afc1fff0	sw	-16(r30),r1
 1499  0000209c          	L96_LF2:
 1500  0000209c          	L94_LF2:
 1501  0000209c          	L92_LF2:
 1502  0000209c  8fc1fff0	lw	r1,-16(r30)
 1503  000020a0  8fc20008	lw	r2,8(r30)
 1504  000020a4  0022082a	slt	r1,r1,r2
 1505  000020a8  10200040	beqz	r1,L90_LF2
 1506  000020ac  54000000	nop; delay slot nop
 1507  000020b0  8fc1fff4	lw	r1,-12(r30)
 1508  000020b4  8fc20008	lw	r2,8(r30)
 1509  000020b8  00200035	movi2fp	f0,r1
 1510  000020bc  00400835	movi2fp	f1,r2
 1511  000020c0  0401000e	mult	f0,f0,f1
 1512  000020c4  00000834	movfp2i	r1,f0
 1513  000020c8  afc1fff4	sw	-12(r30),r1
 1514  000020cc  8fc1fff4	lw	r1,-12(r30)
 1515  000020d0  8fc2fff0	lw	r2,-16(r30)
 1516  000020d4  00220820	add	r1,r1,r2
 1517  000020d8  afc1fff4	sw	-12(r30),r1
 1518  000020dc  8fc20000	lw	r2,(r30)
 1519  000020e0  20410001	addi	r1,r2,#1
 1520  000020e4  00011020	add	r2,r0,r1
 1521  000020e8  afc20000	sw	(r30),r2
 1522  000020ec          	L97_LF2:
 1523  000020ec          	L90_LF2:
 1524  000020ec  8fc1fff0	lw	r1,-16(r30)
 1525  000020f0  8fc20008	lw	r2,8(r30)
 1526  000020f4  0022082a	slt	r1,r1,r2
 1527  000020f8  1420000c	bnez	r1,L98_LF2
 1528  000020fc  54000000	nop; delay slot nop
 1529  00002100  0800000c	j	L89_LF2
 1530  00002104  54000000	nop; delay slot nop
 1531  00002108          	L98_LF2:
 1532  00002108  0bfffec8	j	L88_LF2
 1533  0000210c  54000000	nop; delay slot nop
 1534  00002110          	L89_LF2:
 1535  00002110  8fc10004	lw	r1,4(r30)
 1536  00002114  64220000	snei	r2,r1,#0
 1537  00002118  10400010	beqz	r2,L99_LF2
 1538  0000211c  54000000	nop; delay slot nop
 1539  00002120  8fc10004	lw	r1,4(r30)
 1540  00002124  8fc20000	lw	r2,(r30)
 1541  00002128  ac220000	sw	(r1),r2
 1542  0000212c          	L99_LF2:
 1543  0000212c  8fc1fff4	lw	r1,-12(r30)
 1544  00002130  8fc2ffec	lw	r2,-20(r30)
 1545  00002134  00200035	movi2fp	f0,r1
 1546  00002138  00400835	movi2fp	f1,r2
 1547  0000213c  0401000e	mult	f0,f0,f1
 1548  00002140  00000834	movfp2i	r1,f0
 1549  00002144  afc1fff4	sw	-12(r30),r1
 1550  00002148  8fc1fff4	lw	r1,-12(r30)
 1551  0000214c  08000004	j	L72_LF2
 1552  00002150  54000000	nop; delay slot nop
 1553  00002154          	L72_LF2:
 1554  00002154  8fa20000	lw	r2,0(r29)
 1555  00002158  8fdffff8	lw	r31,-8(r30)
 1556  0000215c  001ee820	add	r29,r0,r30
 1557  00002160  8fdefffc	lw	r30,-4(r30)
 1558  00002164  4be00000	jr	r31
 1559  00002168  54000000	nop
 1560  0000216c          	.endproc _dstrtol
 1561  0000216c          	.align 2
 1562  0000216c          	.proc _bcopy
 1563  0000216c          	.global _bcopy
 1564  0000216c          	_bcopy:
 1565                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1566  0000216c  afbefffc	sw	-4(r29),r30; push fp
 1567  00002170  001df020	add	r30,r0,r29; fp = sp
 1568  00002174  afbffff8	sw	-8(r29),r31; push ret addr
 1569  00002178  2fbd0010	subui	r29,r29,#16; alloc local storage
 1570  0000217c  afa20000	sw	0(r29),r2
 1571  00002180  afa30004	sw	4(r29),r3
 1572  00002184  54000000	nop
 1573  00002188          	L101_LF2:
 1574  00002188  8fc10008	lw	r1,8(r30)
 1575  0000218c  2022ffff	addi	r2,r1,#-1
 1576  00002190  afc20008	sw	8(r30),r2
 1577  00002194  6c210000	sgti	r1,r1,#0
 1578  00002198  1420000c	bnez	r1,L103_LF2
 1579  0000219c  54000000	nop; delay slot nop
 1580  000021a0  0800002c	j	L102_LF2
 1581  000021a4  54000000	nop; delay slot nop
 1582  000021a8          	L103_LF2:
 1583  000021a8  8fc10004	lw	r1,4(r30)
 1584  000021ac  20220001	addi	r2,r1,#1
 1585  000021b0  afc20004	sw	4(r30),r2
 1586  000021b4  8fc20000	lw	r2,(r30)
 1587  000021b8  20430001	addi	r3,r2,#1
 1588  000021bc  afc30000	sw	(r30),r3
 1589  000021c0  80420000	lb	r2,(r2)
 1590  000021c4  a0220000	sb	(r1),r2
 1591  000021c8  0bffffbc	j	L101_LF2
 1592  000021cc  54000000	nop; delay slot nop
 1593  000021d0          	L102_LF2:
 1594  000021d0          	L100_LF2:
 1595  000021d0  8fa20000	lw	r2,0(r29)
 1596  000021d4  8fa30004	lw	r3,4(r29)
 1597  000021d8  8fdffff8	lw	r31,-8(r30)
 1598  000021dc  001ee820	add	r29,r0,r30
 1599  000021e0  8fdefffc	lw	r30,-4(r30)
 1600  000021e4  4be00000	jr	r31
 1601  000021e8  54000000	nop
 1602  000021ec          	.endproc _bcopy
 1603  000021ec          	.align 2
 1604  000021ec          	.proc _bzero
 1605  000021ec          	.global _bzero
 1606  000021ec          	_bzero:
 1607                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1608  000021ec  afbefffc	sw	-4(r29),r30; push fp
 1609  000021f0  001df020	add	r30,r0,r29; fp = sp
 1610  000021f4  afbffff8	sw	-8(r29),r31; push ret addr
 1611  000021f8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1612  000021fc  afa20000	sw	0(r29),r2
 1613  00002200  54000000	nop
 1614  00002204          	L105_LF2:
 1615  00002204  8fc10004	lw	r1,4(r30)
 1616  00002208  2022ffff	addi	r2,r1,#-1
 1617  0000220c  afc20004	sw	4(r30),r2
 1618  00002210  6c210000	sgti	r1,r1,#0
 1619  00002214  1420000c	bnez	r1,L107_LF2
 1620  00002218  54000000	nop; delay slot nop
 1621  0000221c  08000020	j	L106_LF2
 1622  00002220  54000000	nop; delay slot nop
 1623  00002224          	L107_LF2:
 1624  00002224  8fc10000	lw	r1,(r30)
 1625  00002228  20220001	addi	r2,r1,#1
 1626  0000222c  afc20000	sw	(r30),r2
 1627  00002230  20020000	addi	r2,r0,(#0x0)&0xff
 1628  00002234  a0220000	sb	(r1),r2
 1629  00002238  0bffffc8	j	L105_LF2
 1630  0000223c  54000000	nop; delay slot nop
 1631  00002240          	L106_LF2:
 1632  00002240          	L104_LF2:
 1633  00002240  8fa20000	lw	r2,0(r29)
 1634  00002244  8fdffff8	lw	r31,-8(r30)
 1635  00002248  001ee820	add	r29,r0,r30
 1636  0000224c  8fdefffc	lw	r30,-4(r30)
 1637  00002250  4be00000	jr	r31
 1638  00002254  54000000	nop
 1639  00002258          	.endproc _bzero
 1640  00002258          	.align 2
 1641  00002258          	.proc _min
 1642  00002258          	.global _min
 1643  00002258          	_min:
 1644                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1645  00002258  afbefffc	sw	-4(r29),r30; push fp
 1646  0000225c  001df020	add	r30,r0,r29; fp = sp
 1647  00002260  afbffff8	sw	-8(r29),r31; push ret addr
 1648  00002264  2fbd0010	subui	r29,r29,#16; alloc local storage
 1649  00002268  afa20000	sw	0(r29),r2
 1650  0000226c  afa30004	sw	4(r29),r3
 1651  00002270  8fc10000	lw	r1,(r30)
 1652  00002274  8fc20004	lw	r2,4(r30)
 1653  00002278  0022182c	sle	r3,r1,r2
 1654  0000227c  14600008	bnez	r3,L109_LF2
 1655  00002280  54000000	nop; delay slot nop
 1656  00002284  8fc10004	lw	r1,4(r30)
 1657  00002288          	L109_LF2:
 1658  00002288  08000004	j	L108_LF2
 1659  0000228c  54000000	nop; delay slot nop
 1660  00002290          	L108_LF2:
 1661  00002290  8fa20000	lw	r2,0(r29)
 1662  00002294  8fa30004	lw	r3,4(r29)
 1663  00002298  8fdffff8	lw	r31,-8(r30)
 1664  0000229c  001ee820	add	r29,r0,r30
 1665  000022a0  8fdefffc	lw	r30,-4(r30)
 1666  000022a4  4be00000	jr	r31
 1667  000022a8  54000000	nop
 1668  000022ac          	.endproc _min
 1669  000022ac          	.align 2
 1670  000022ac          	.proc _max
 1671  000022ac          	.global _max
 1672  000022ac          	_max:
 1673                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1674  000022ac  afbefffc	sw	-4(r29),r30; push fp
 1675  000022b0  001df020	add	r30,r0,r29; fp = sp
 1676  000022b4  afbffff8	sw	-8(r29),r31; push ret addr
 1677  000022b8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1678  000022bc  afa20000	sw	0(r29),r2
 1679  000022c0  afa30004	sw	4(r29),r3
 1680  000022c4  8fc10000	lw	r1,(r30)
 1681  000022c8  8fc20004	lw	r2,4(r30)
 1682  000022cc  0022182d	sge	r3,r1,r2
 1683  000022d0  14600008	bnez	r3,L111_LF2
 1684  000022d4  54000000	nop; delay slot nop
 1685  000022d8  8fc10004	lw	r1,4(r30)
 1686  000022dc          	L111_LF2:
 1687  000022dc  08000004	j	L110_LF2
 1688  000022e0  54000000	nop; delay slot nop
 1689  000022e4          	L110_LF2:
 1690  000022e4  8fa20000	lw	r2,0(r29)
 1691  000022e8  8fa30004	lw	r3,4(r29)
 1692  000022ec  8fdffff8	lw	r31,-8(r30)
 1693  000022f0  001ee820	add	r29,r0,r30
 1694  000022f4  8fdefffc	lw	r30,-4(r30)
 1695  000022f8  4be00000	jr	r31
 1696  000022fc  54000000	nop
 1697  00002300          	.endproc _max
 1698                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1699                      ;;;
 1700                      ;;; Most of the traps are called in files from libtraps.
 1703  00002300          	.align 2
 1704  00002300          	.proc _exit
 1705  00002300          	.global _exit
 1706  00002300          	_exit:
 1707  00002300  44000300	trap	#0x300
 1708  00002304  4be00000	jr	r31
 1709  00002308  54000000	nop
 1710  0000230c          	.endproc _exit
 1712                      ; for the benefit of gcc.
 1713  0000230c          	.proc ___main
 1714  0000230c          	.global ___main
 1715  0000230c          	___main:
 1716  0000230c  4be00000	jr	r31
 1717  00002310  54000000	nop
 1718  00002314          	.endproc ___main
 1719  00002314          	.text
 1720  00002314          	.global _etext
 1721  00002314          	_etext:
 1722  00002314          	.align 3
 1723  00002318          	.data
 1724  000030c0          	.global _edata
 1725  000030c0          	_edata:
