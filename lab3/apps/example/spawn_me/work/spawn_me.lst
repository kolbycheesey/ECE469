 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 322
    4                      ; Text size: 4652
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  5049443a	.ascii "PID: %d\n\000"
   82  00003004  2025640a	
   82  00003008  00      	
   83  00003009          	.align 2
   84  0000300c          	LC1_LF0:
   85  0000300c  55736167	.ascii "Usage: %s <handle_to_mailbox> <handle_to_page_mapped_semaphore>\n\000"
   85  00003010  653a2025	
   85  00003014  73203c68	
   85  00003018  616e646c	
   85  0000301c  655f746f	
   85  00003020  5f6d6169	
   85  00003024  6c626f78	
   85  00003028  3e203c68	
   85  0000302c  616e646c	
   85  00003030  655f746f	
   85  00003034  5f706167	
   85  00003038  655f6d61	
   85  0000303c  70706564	
   85  00003040  5f73656d	
   85  00003044  6170686f	
   85  00003048  72653e0a	
   85  0000304c  00      	
   86  0000304d          	.align 2
   87  00003050          	LC2_LF0:
   88  00003050  73706177	.ascii "spawn_me (%d): Could not open the mailbox!\n\000"
   88  00003054  6e5f6d65	
   88  00003058  20282564	
   88  0000305c  293a2043	
   88  00003060  6f756c64	
   88  00003064  206e6f74	
   88  00003068  206f7065	
   88  0000306c  6e207468	
   88  00003070  65206d61	
   88  00003074  696c626f	
   88  00003078  78210a00	
   89  0000307c          	.align 2
   90  0000307c          	LC3_LF0:
   91  0000307c  73706177	.ascii "spawn_me (%d): Could not map the virtual address to the memory!\n\000"
   91  00003080  6e5f6d65	
   91  00003084  20282564	
   91  00003088  293a2043	
   91  0000308c  6f756c64	
   91  00003090  206e6f74	
   91  00003094  206d6170	
   91  00003098  20746865	
   91  0000309c  20766972	
   91  000030a0  7475616c	
   91  000030a4  20616464	
   91  000030a8  72657373	
   91  000030ac  20746f20	
   91  000030b0  74686520	
   91  000030b4  6d656d6f	
   91  000030b8  7279210a	
   91  000030bc  00      	
   92  000030bd          	.align 2
   93  000030c0          	LC4_LF0:
   94  000030c0  25630a00	.ascii "%c\n\000"
   95  000030c4          	.align 2
   96  000030c4          	LC5_LF0:
   97  000030c4  25640a00	.ascii "%d\n\000"
   98  000030c8          	.align 2
   99  000030c8          	LC6_LF0:
  100  000030c8  73706177	.ascii "spawn_me (%d): Received missile code: %c\n\000"
  100  000030cc  6e5f6d65	
  100  000030d0  20282564	
  100  000030d4  293a2052	
  100  000030d8  65636569	
  100  000030dc  76656420	
  100  000030e0  6d697373	
  100  000030e4  696c6520	
  100  000030e8  636f6465	
  100  000030ec  3a202563	
  100  000030f0  0a00    	
  101  000030f2          	.align 2
  102  000030f4          	LC7_LF0:
  103  000030f4  73706177	.ascii "spawn_me (%d): Bad semaphore s_procs_completed (%d)!\n\000"
  103  000030f8  6e5f6d65	
  103  000030fc  20282564	
  103  00003100  293a2042	
  103  00003104  61642073	
  103  00003108  656d6170	
  103  0000310c  686f7265	
  103  00003110  20735f70	
  103  00003114  726f6373	
  103  00003118  5f636f6d	
  103  0000311c  706c6574	
  103  00003120  65642028	
  103  00003124  25642921	
  103  00003128  0a00    	
  104  0000312a          	.align 2
  105  0000312c          	LC8_LF0:
  106  0000312c  73706177	.ascii "spawn_me (%d): Done!\n\000"
  106  00003130  6e5f6d65	
  106  00003134  20282564	
  106  00003138  293a2044	
  106  0000313c  6f6e6521	
  106  00003140  0a00    	
  107  00003142          	.text
  108  000010d4          	.align 2
  109  000010d4          	.proc _main
  110  000010d4          	.global _main
  111  000010d4          	_main:
  112                      ;  Function 'main'; 8 bytes of locals, 0 regs to save.
  113  000010d4  afbefffc	sw	-4(r29),r30; push fp
  114  000010d8  001df020	add	r30,r0,r29; fp = sp
  115  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  116  000010e0  2fbd0010	subui	r29,r29,#16; alloc local storage
  117  000010e4  8fc20000	lw	r2,(r30)
  118  000010e8  8fc30004	lw	r3,4(r30)
  119  000010ec  0c001134	jal	___main
  120  000010f0  54000000	nop; not filled.
  121  000010f4  0c000288	jal	_getpid
  122  000010f8  54000000	nop; not filled.
  123  000010fc  23bdfff8	addi	r29,r29,#-8
  124  00001100  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  125  00001104  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  126  00001108  afa40000	sw	(r29),r4
  127  0000110c  afa10004	sw	4(r29),r1
  128  00001110  0c000260	jal	_Printf
  129  00001114  54000000	nop; not filled.
  130  00001118  23bd0008	addi	r29,r29,#8
  131  0000111c  64410003	snei	r1,r2,#3
  132  00001120  10200028	beqz	r1,L14_LF0
  133  00001124  54000000	nop; not filled.
  134  00001128  23bdfff8	addi	r29,r29,#-8
  135  0000112c  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  136  00001130  2484300c	addui	r4,r4,(LC1_LF0)&0xffff
  137  00001134  afa40000	sw	(r29),r4
  138  00001138  0c000238	jal	_Printf
  139  0000113c  54000000	nop; not filled.
  140  00001140  0c000338	jal	_Exit
  141  00001144  54000000	nop; not filled.
  142  00001148  23bd0008	addi	r29,r29,#8
  143  0000114c          	L14_LF0:
  144  0000114c  23bdfff0	addi	r29,r29,#-16
  145  00001150  8c640004	lw	r4,4(r3)
  146  00001154  afa40000	sw	(r29),r4
  147  00001158  20040000	addi	r4,r0,#0
  148  0000115c  afa40004	sw	4(r29),r4
  149  00001160  2004000a	addi	r4,r0,#10
  150  00001164  afa40008	sw	8(r29),r4
  151  00001168  0c000bbc	jal	_dstrtol
  152  0000116c  54000000	nop; not filled.
  153  00001170  00011020	add	r2,r0,r1
  154  00001174  8c630008	lw	r3,8(r3)
  155  00001178  afa30000	sw	(r29),r3
  156  0000117c  20040000	addi	r4,r0,#0
  157  00001180  afa40004	sw	4(r29),r4
  158  00001184  2004000a	addi	r4,r0,#10
  159  00001188  afa40008	sw	8(r29),r4
  160  0000118c  0c000b98	jal	_dstrtol
  161  00001190  54000000	nop; not filled.
  162  00001194  00011820	add	r3,r0,r1
  163  00001198  afa20000	sw	(r29),r2
  164  0000119c  0c000294	jal	_mbox_open
  165  000011a0  54000000	nop; not filled.
  166  000011a4  23bd0010	addi	r29,r29,#16
  167  000011a8  6021ffff	seqi	r1,r1,#-1
  168  000011ac  10200034	beqz	r1,L15_LF0
  169  000011b0  54000000	nop; not filled.
  170  000011b4  0c0001c8	jal	_getpid
  171  000011b8  54000000	nop; not filled.
  172  000011bc  23bdfff8	addi	r29,r29,#-8
  173  000011c0  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  174  000011c4  24843050	addui	r4,r4,(LC2_LF0)&0xffff
  175  000011c8  afa40000	sw	(r29),r4
  176  000011cc  afa10004	sw	4(r29),r1
  177  000011d0  0c0001a0	jal	_Printf
  178  000011d4  54000000	nop; not filled.
  179  000011d8  0c0002a0	jal	_Exit
  180  000011dc  54000000	nop; not filled.
  181  000011e0  23bd0008	addi	r29,r29,#8
  182  000011e4          	L15_LF0:
  183  000011e4  23bdfff0	addi	r29,r29,#-16
  184  000011e8  afa20000	sw	(r29),r2
  185  000011ec  20040008	addi	r4,r0,#8
  186  000011f0  afa40004	sw	4(r29),r4
  187  000011f4  23c1fff0	addi	r1,r30,#-16
  188  000011f8  afa10008	sw	8(r29),r1
  189  000011fc  0c000258	jal	_mbox_recv
  190  00001200  54000000	nop; not filled.
  191  00001204  23bd0010	addi	r29,r29,#16
  192  00001208  6021ffff	seqi	r1,r1,#-1
  193  0000120c  10200034	beqz	r1,L16_LF0
  194  00001210  54000000	nop; not filled.
  195  00001214  0c000168	jal	_getpid
  196  00001218  54000000	nop; not filled.
  197  0000121c  23bdfff8	addi	r29,r29,#-8
  198  00001220  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  199  00001224  2484307c	addui	r4,r4,(LC3_LF0)&0xffff
  200  00001228  afa40000	sw	(r29),r4
  201  0000122c  afa10004	sw	4(r29),r1
  202  00001230  0c000140	jal	_Printf
  203  00001234  54000000	nop; not filled.
  204  00001238  0c000240	jal	_Exit
  205  0000123c  54000000	nop; not filled.
  206  00001240  23bd0008	addi	r29,r29,#8
  207  00001244          	L16_LF0:
  208  00001244  23bdfff8	addi	r29,r29,#-8
  209  00001248  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  210  0000124c  248430c0	addui	r4,r4,(LC4_LF0)&0xffff
  211  00001250  afa40000	sw	(r29),r4
  212  00001254  93c1fff4	lbu	r1,-12(r30)
  213  00001258  afa10004	sw	4(r29),r1
  214  0000125c  0c000114	jal	_Printf
  215  00001260  54000000	nop; not filled.
  216  00001264  3c040000	lhi	r4,((LC5_LF0)>>16)&0xffff
  217  00001268  248430c4	addui	r4,r4,(LC5_LF0)&0xffff
  218  0000126c  afa40000	sw	(r29),r4
  219  00001270  8fc1fff0	lw	r1,-16(r30)
  220  00001274  afa10004	sw	4(r29),r1
  221  00001278  0c0000f8	jal	_Printf
  222  0000127c  54000000	nop; not filled.
  223  00001280  0c0000fc	jal	_getpid
  224  00001284  54000000	nop; not filled.
  225  00001288  23bdfff8	addi	r29,r29,#-8
  226  0000128c  3c040000	lhi	r4,((LC6_LF0)>>16)&0xffff
  227  00001290  248430c8	addui	r4,r4,(LC6_LF0)&0xffff
  228  00001294  afa40000	sw	(r29),r4
  229  00001298  afa10004	sw	4(r29),r1
  230  0000129c  93c1fff4	lbu	r1,-12(r30)
  231  000012a0  afa10008	sw	8(r29),r1
  232  000012a4  0c0000cc	jal	_Printf
  233  000012a8  54000000	nop; not filled.
  234  000012ac  afa30000	sw	(r29),r3
  235  000012b0  0c000114	jal	_sem_signal
  236  000012b4  54000000	nop; not filled.
  237  000012b8  23bd0010	addi	r29,r29,#16
  238  000012bc  64210001	snei	r1,r1,#1
  239  000012c0  10200038	beqz	r1,L17_LF0
  240  000012c4  54000000	nop; not filled.
  241  000012c8  0c0000b4	jal	_getpid
  242  000012cc  54000000	nop; not filled.
  243  000012d0  23bdfff0	addi	r29,r29,#-16
  244  000012d4  3c040000	lhi	r4,((LC7_LF0)>>16)&0xffff
  245  000012d8  248430f4	addui	r4,r4,(LC7_LF0)&0xffff
  246  000012dc  afa40000	sw	(r29),r4
  247  000012e0  afa10004	sw	4(r29),r1
  248  000012e4  afa30008	sw	8(r29),r3
  249  000012e8  0c000088	jal	_Printf
  250  000012ec  54000000	nop; not filled.
  251  000012f0  0c000188	jal	_Exit
  252  000012f4  54000000	nop; not filled.
  253  000012f8  23bd0010	addi	r29,r29,#16
  254  000012fc          	L17_LF0:
  255  000012fc  0c000080	jal	_getpid
  256  00001300  54000000	nop; not filled.
  257  00001304  23bdfff8	addi	r29,r29,#-8
  258  00001308  3c040000	lhi	r4,((LC8_LF0)>>16)&0xffff
  259  0000130c  2484312c	addui	r4,r4,(LC8_LF0)&0xffff
  260  00001310  afa40000	sw	(r29),r4
  261  00001314  afa10004	sw	4(r29),r1
  262  00001318  0c000058	jal	_Printf
  263  0000131c  54000000	nop; not filled.
  264  00001320  23bd0008	addi	r29,r29,#8
  265  00001324  0c000ef0	jal	_exit
  266  00001328  54000000	nop
  267  0000132c          	.endproc _main
  268                      ;;;
  269                      ;;; Stub functions for DLX traps.
  270                      ;;;
  271                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  272                      ;;;
  273                      ;;; The traps such as Open and Close
  274                      ;;; (note the capital letters) are for use by user programs.  The traps
  275                      ;;; with names such as open and close (lower case) are for use by the OS.
  276                      ;;;
  279  0000132c          	.align 2
  281                      ;;; The following are the traps to be used by user-level programs
  282                      ;;;
  284  0000132c          	.align 2
  285  0000132c          	.proc _Open
  286  0000132c          	.global _Open
  287  0000132c          	_Open:
  288                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  289                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  290                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  291  0000132c  44000213	trap	#0x213
  292  00001330  4be00000	jr	r31
  293  00001334  54000000	nop
  294  00001338          	.endproc _Open
  296  00001338          	.proc _Close
  297  00001338          	.global _Close
  298  00001338          	_Close:
  299  00001338  44000214	trap	#0x214
  300  0000133c  4be00000	jr	r31
  301  00001340  54000000	nop
  302  00001344          	.endproc _Close
  304  00001344          	.proc _Read
  305  00001344          	.global _Read
  306  00001344          	_Read:
  307  00001344  44000210	trap	#0x210
  308  00001348  4be00000	jr	r31
  309  0000134c  54000000	nop
  310  00001350          	.endproc _Read
  312  00001350          	.proc _Write
  313  00001350          	.global _Write
  314  00001350          	_Write:
  315  00001350  44000211	trap	#0x211
  316  00001354  4be00000	jr	r31
  317  00001358  54000000	nop
  318  0000135c          	.endproc _Write
  320  0000135c          	.proc _Lseek
  321  0000135c          	.global _Lseek
  322  0000135c          	_Lseek:
  323  0000135c  44000212	trap	#0x212
  324  00001360  4be00000	jr	r31
  325  00001364  54000000	nop
  326  00001368          	.endproc _Lseek
  328  00001368          	.proc _Putchar
  329  00001368          	.global _Putchar
  330  00001368          	_Putchar:
  331  00001368  44000280	trap	#0x280
  332  0000136c  4be00000	jr	r31
  333  00001370  54000000	nop
  334  00001374          	.endproc _Putchar
  336  00001374          	.proc _Printf
  337  00001374          	.global _Printf
  338  00001374          	_Printf:
  339  00001374  44000201	trap	#0x201
  340  00001378  4be00000	jr	r31
  341  0000137c  54000000	nop
  342  00001380          	.endproc _Printf
  344  00001380          	.proc _getpid
  345  00001380          	.global _getpid
  346  00001380          	_getpid:
  347  00001380  44000431	trap	#0x431
  348  00001384  4be00000	jr	r31
  349  00001388  54000000	nop
  350  0000138c          	.endproc _getpid
  352  0000138c          	.proc _process_create
  353  0000138c          	.global _process_create
  354  0000138c          	_process_create:
  355  0000138c  44000432	trap	#0x432
  356  00001390  4be00000	jr	r31
  357  00001394  54000000	nop
  358  00001398          	.endproc _process_create
  360  00001398          	.proc _shmget
  361  00001398          	.global _shmget
  362  00001398          	_shmget:
  363  00001398  44000440	trap	#0x440
  364  0000139c  4be00000	jr	r31
  365  000013a0  54000000	nop
  366  000013a4          	.endproc _shmget
  368  000013a4          	.proc _shmat
  369  000013a4          	.global _shmat
  370  000013a4          	_shmat:
  371  000013a4  44000441	trap	#0x441
  372  000013a8  4be00000	jr	r31
  373  000013ac  54000000	nop
  374  000013b0          	.endproc _shmat
  376  000013b0          	.proc _sem_create
  377  000013b0          	.global _sem_create
  378  000013b0          	_sem_create:
  379  000013b0  44000450	trap	#0x450
  380  000013b4  4be00000	jr	r31
  381  000013b8  54000000	nop
  382  000013bc          	.endproc _sem_create
  384  000013bc          	.proc _sem_wait
  385  000013bc          	.global _sem_wait
  386  000013bc          	_sem_wait:
  387  000013bc  44000451	trap	#0x451
  388  000013c0  4be00000	jr	r31
  389  000013c4  54000000	nop
  390  000013c8          	.endproc _sem_wait
  392  000013c8          	.proc _sem_signal
  393  000013c8          	.global _sem_signal
  394  000013c8          	_sem_signal:
  395  000013c8  44000452	trap	#0x452
  396  000013cc  4be00000	jr	r31
  397  000013d0  54000000	nop
  398  000013d4          	.endproc _sem_signal
  400  000013d4          	.proc _lock_create
  401  000013d4          	.global _lock_create
  402  000013d4          	_lock_create:
  403  000013d4  44000453	trap	#0x453
  404  000013d8  4be00000	jr	r31
  405  000013dc  54000000	nop
  406  000013e0          	.endproc _lock_create
  408  000013e0          	.proc _lock_acquire
  409  000013e0          	.global _lock_acquire
  410  000013e0          	_lock_acquire:
  411  000013e0  44000454	trap	#0x454
  412  000013e4  4be00000	jr	r31
  413  000013e8  54000000	nop
  414  000013ec          	.endproc _lock_acquire
  416  000013ec          	.proc _lock_release
  417  000013ec          	.global _lock_release
  418  000013ec          	_lock_release:
  419  000013ec  44000455	trap	#0x455
  420  000013f0  4be00000	jr	r31
  421  000013f4  54000000	nop
  422  000013f8          	.endproc _lock_release
  424  000013f8          	.proc _cond_create
  425  000013f8          	.global _cond_create
  426  000013f8          	_cond_create:
  427  000013f8  44000456	trap	#0x456
  428  000013fc  4be00000	jr	r31
  429  00001400  54000000	nop
  430  00001404          	.endproc _cond_create
  432  00001404          	.proc _cond_wait
  433  00001404          	.global _cond_wait
  434  00001404          	_cond_wait:
  435  00001404  44000457	trap	#0x457
  436  00001408  4be00000	jr	r31
  437  0000140c  54000000	nop
  438  00001410          	.endproc _cond_wait
  440  00001410          	.proc _cond_signal
  441  00001410          	.global _cond_signal
  442  00001410          	_cond_signal:
  443  00001410  44000458	trap	#0x458
  444  00001414  4be00000	jr	r31
  445  00001418  54000000	nop
  446  0000141c          	.endproc _cond_signal
  448  0000141c          	.proc _cond_broadcast
  449  0000141c          	.global _cond_broadcast
  450  0000141c          	_cond_broadcast:
  451  0000141c  44000459	trap	#0x459
  452  00001420  4be00000	jr	r31
  453  00001424  54000000	nop
  454  00001428          	.endproc _cond_broadcast
  456  00001428          	.proc _mbox_create
  457  00001428          	.global _mbox_create
  458  00001428          	_mbox_create:
  459  00001428  44000460	trap	#0x460
  460  0000142c  4be00000	jr	r31
  461  00001430  54000000	nop
  462  00001434          	.endproc _mbox_create
  464  00001434          	.proc _mbox_open
  465  00001434          	.global _mbox_open
  466  00001434          	_mbox_open:
  467  00001434  44000461	trap	#0x461
  468  00001438  4be00000	jr	r31
  469  0000143c  54000000	nop
  470  00001440          	.endproc _mbox_open
  472  00001440          	.proc _mbox_close
  473  00001440          	.global _mbox_close
  474  00001440          	_mbox_close:
  475  00001440  44000462	trap	#0x462
  476  00001444  4be00000	jr	r31
  477  00001448  54000000	nop
  478  0000144c          	.endproc _mbox_close
  480  0000144c          	.proc _mbox_send
  481  0000144c          	.global _mbox_send
  482  0000144c          	_mbox_send:
  483  0000144c  44000463	trap	#0x463
  484  00001450  4be00000	jr	r31
  485  00001454  54000000	nop
  486  00001458          	.endproc _mbox_send
  488  00001458          	.proc _mbox_recv
  489  00001458          	.global _mbox_recv
  490  00001458          	_mbox_recv:
  491  00001458  44000464	trap	#0x464
  492  0000145c  4be00000	jr	r31
  493  00001460  54000000	nop
  494  00001464          	.endproc _mbox_recv
  496  00001464          	.proc _sleep
  497  00001464          	.global _sleep
  498  00001464          	_sleep:
  499  00001464  44000465	trap	#0x465
  500  00001468  4be00000	jr	r31
  501  0000146c  54000000	nop
  502  00001470          	.endproc _sleep
  504  00001470          	.proc _yield
  505  00001470          	.global _yield
  506  00001470          	_yield:
  507  00001470  44000466	trap	#0x466
  508  00001474  4be00000	jr	r31
  509  00001478  54000000	nop
  510  0000147c          	.endproc _yield
  513  0000147c          	.proc _Exit
  514  0000147c          	.global _Exit
  515  0000147c          	_Exit:
  516  0000147c  44000500	trap	#0x500
  517  00001480  4be00000	jr	r31
  518  00001484  54000000	nop
  519  00001488          	.endproc _Exit
  520                      ; Compiled by GCC
  522  00001488          	.align 2
  523  00001488          	.proc _isspace
  524  00001488          	.global _isspace
  525  00001488          	_isspace:
  526                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  527  00001488  afbefffc	sw	-4(r29),r30; push fp
  528  0000148c  001df020	add	r30,r0,r29; fp = sp
  529  00001490  afbffff8	sw	-8(r29),r31; push ret addr
  530  00001494  2fbd0018	subui	r29,r29,#24; alloc local storage
  531  00001498  afa20000	sw	0(r29),r2
  532  0000149c  afa30004	sw	4(r29),r3
  533  000014a0  afa40008	sw	8(r29),r4
  534  000014a4  83c20003	lb	r2,3(r30)
  535  000014a8  20010000	addi	r1,r0,#0
  536  000014ac  304300ff	andi	r3,r2,#0x00ff
  537  000014b0  60640020	seqi	r4,r3,#32
  538  000014b4  1480002c	bnez	r4,L3_LF2
  539  000014b8  54000000	nop; delay slot nop
  540  000014bc  304300ff	andi	r3,r2,#0x00ff
  541  000014c0  60640009	seqi	r4,r3,#9
  542  000014c4  1480001c	bnez	r4,L3_LF2
  543  000014c8  54000000	nop; delay slot nop
  544  000014cc  304300ff	andi	r3,r2,#0x00ff
  545  000014d0  6064000a	seqi	r4,r3,#10
  546  000014d4  1480000c	bnez	r4,L3_LF2
  547  000014d8  54000000	nop; delay slot nop
  548  000014dc  08000008	j	L2_LF2
  549  000014e0  54000000	nop; delay slot nop
  550  000014e4          	L3_LF2:
  551  000014e4  20010001	addi	r1,r0,#1
  552  000014e8          	L2_LF2:
  553  000014e8  08000004	j	L1_LF2
  554  000014ec  54000000	nop; delay slot nop
  555  000014f0          	L1_LF2:
  556  000014f0  8fa20000	lw	r2,0(r29)
  557  000014f4  8fa30004	lw	r3,4(r29)
  558  000014f8  8fa40008	lw	r4,8(r29)
  559  000014fc  8fdffff8	lw	r31,-8(r30)
  560  00001500  001ee820	add	r29,r0,r30
  561  00001504  8fdefffc	lw	r30,-4(r30)
  562  00001508  4be00000	jr	r31
  563  0000150c  54000000	nop
  564  00001510          	.endproc _isspace
  565  00001510          	.align 2
  566  00001510          	.proc _isxdigit
  567  00001510          	.global _isxdigit
  568  00001510          	_isxdigit:
  569                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  570  00001510  afbefffc	sw	-4(r29),r30; push fp
  571  00001514  001df020	add	r30,r0,r29; fp = sp
  572  00001518  afbffff8	sw	-8(r29),r31; push ret addr
  573  0000151c  2fbd0018	subui	r29,r29,#24; alloc local storage
  574  00001520  afa20000	sw	0(r29),r2
  575  00001524  afa30004	sw	4(r29),r3
  576  00001528  afa40008	sw	8(r29),r4
  577  0000152c  83c20003	lb	r2,3(r30)
  578  00001530  20010000	addi	r1,r0,#0
  579  00001534  304300ff	andi	r3,r2,#0x00ff
  580  00001538  6c64002f	sgtui	r4,r3,#47
  581  0000153c  1080001c	beqz	r4,L7_LF2
  582  00001540  54000000	nop; delay slot nop
  583  00001544  304300ff	andi	r3,r2,#0x00ff
  584  00001548  70640039	sleui	r4,r3,#57
  585  0000154c  1480005c	bnez	r4,L6_LF2
  586  00001550  54000000	nop; delay slot nop
  587  00001554  08000004	j	L7_LF2
  588  00001558  54000000	nop; delay slot nop
  589  0000155c          	L7_LF2:
  590  0000155c  304300ff	andi	r3,r2,#0x00ff
  591  00001560  6c640060	sgtui	r4,r3,#96
  592  00001564  1080001c	beqz	r4,L8_LF2
  593  00001568  54000000	nop; delay slot nop
  594  0000156c  304300ff	andi	r3,r2,#0x00ff
  595  00001570  70640066	sleui	r4,r3,#102
  596  00001574  14800034	bnez	r4,L6_LF2
  597  00001578  54000000	nop; delay slot nop
  598  0000157c  08000004	j	L8_LF2
  599  00001580  54000000	nop; delay slot nop
  600  00001584          	L8_LF2:
  601  00001584  304300ff	andi	r3,r2,#0x00ff
  602  00001588  6c640040	sgtui	r4,r3,#64
  603  0000158c  10800020	beqz	r4,L5_LF2
  604  00001590  54000000	nop; delay slot nop
  605  00001594  304300ff	andi	r3,r2,#0x00ff
  606  00001598  70640041	sleui	r4,r3,#65
  607  0000159c  1480000c	bnez	r4,L6_LF2
  608  000015a0  54000000	nop; delay slot nop
  609  000015a4  08000008	j	L5_LF2
  610  000015a8  54000000	nop; delay slot nop
  611  000015ac          	L6_LF2:
  612  000015ac  20010001	addi	r1,r0,#1
  613  000015b0          	L5_LF2:
  614  000015b0  08000004	j	L4_LF2
  615  000015b4  54000000	nop; delay slot nop
  616  000015b8          	L4_LF2:
  617  000015b8  8fa20000	lw	r2,0(r29)
  618  000015bc  8fa30004	lw	r3,4(r29)
  619  000015c0  8fa40008	lw	r4,8(r29)
  620  000015c4  8fdffff8	lw	r31,-8(r30)
  621  000015c8  001ee820	add	r29,r0,r30
  622  000015cc  8fdefffc	lw	r30,-4(r30)
  623  000015d0  4be00000	jr	r31
  624  000015d4  54000000	nop
  625  000015d8          	.endproc _isxdigit
  626  000015d8          	.align 2
  627  000015d8          	.proc _dstrcpy
  628  000015d8          	.global _dstrcpy
  629  000015d8          	_dstrcpy:
  630                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  631  000015d8  afbefffc	sw	-4(r29),r30; push fp
  632  000015dc  001df020	add	r30,r0,r29; fp = sp
  633  000015e0  afbffff8	sw	-8(r29),r31; push ret addr
  634  000015e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  635  000015e8  afa20000	sw	0(r29),r2
  636  000015ec  afa30004	sw	4(r29),r3
  637  000015f0  8fc10000	lw	r1,(r30)
  638  000015f4  afc1fff4	sw	-12(r30),r1
  639  000015f8          	L10_LF2:
  640  000015f8  8fc10000	lw	r1,(r30)
  641  000015fc  20220001	addi	r2,r1,#1
  642  00001600  afc20000	sw	(r30),r2
  643  00001604  8fc20004	lw	r2,4(r30)
  644  00001608  20430001	addi	r3,r2,#1
  645  0000160c  afc30004	sw	4(r30),r3
  646  00001610  80420000	lb	r2,(r2)
  647  00001614  a0220000	sb	(r1),r2
  648  00001618  a3c2fff3	sb	-13(r30),r2
  649  0000161c          	L12_LF2:
  650  0000161c  93c1fff3	lbu	r1,-13(r30)
  651  00001620  64220000	snei	r2,r1,#0
  652  00001624  1440000c	bnez	r2,L13_LF2
  653  00001628  54000000	nop; delay slot nop
  654  0000162c  0800000c	j	L11_LF2
  655  00001630  54000000	nop; delay slot nop
  656  00001634          	L13_LF2:
  657  00001634  0bffffc0	j	L10_LF2
  658  00001638  54000000	nop; delay slot nop
  659  0000163c          	L11_LF2:
  660  0000163c  8fc1fff4	lw	r1,-12(r30)
  661  00001640  08000004	j	L9_LF2
  662  00001644  54000000	nop; delay slot nop
  663  00001648          	L9_LF2:
  664  00001648  8fa20000	lw	r2,0(r29)
  665  0000164c  8fa30004	lw	r3,4(r29)
  666  00001650  8fdffff8	lw	r31,-8(r30)
  667  00001654  001ee820	add	r29,r0,r30
  668  00001658  8fdefffc	lw	r30,-4(r30)
  669  0000165c  4be00000	jr	r31
  670  00001660  54000000	nop
  671  00001664          	.endproc _dstrcpy
  672  00001664          	.align 2
  673  00001664          	.proc _dstrncpy
  674  00001664          	.global _dstrncpy
  675  00001664          	_dstrncpy:
  676                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  677  00001664  afbefffc	sw	-4(r29),r30; push fp
  678  00001668  001df020	add	r30,r0,r29; fp = sp
  679  0000166c  afbffff8	sw	-8(r29),r31; push ret addr
  680  00001670  2fbd0018	subui	r29,r29,#24; alloc local storage
  681  00001674  afa20000	sw	0(r29),r2
  682  00001678  afa30004	sw	4(r29),r3
  683  0000167c  8fc10000	lw	r1,(r30)
  684  00001680  afc1fff4	sw	-12(r30),r1
  685  00001684          	L15_LF2:
  686  00001684  8fc10008	lw	r1,8(r30)
  687  00001688  2022ffff	addi	r2,r1,#-1
  688  0000168c  afc20008	sw	8(r30),r2
  689  00001690  70210000	slei	r1,r1,#0
  690  00001694  1020000c	beqz	r1,L18_LF2
  691  00001698  54000000	nop; delay slot nop
  692  0000169c  08000048	j	L16_LF2
  693  000016a0  54000000	nop; delay slot nop
  694  000016a4          	L18_LF2:
  695  000016a4  8fc10000	lw	r1,(r30)
  696  000016a8  20220001	addi	r2,r1,#1
  697  000016ac  afc20000	sw	(r30),r2
  698  000016b0  8fc20004	lw	r2,4(r30)
  699  000016b4  20430001	addi	r3,r2,#1
  700  000016b8  afc30004	sw	4(r30),r3
  701  000016bc  80420000	lb	r2,(r2)
  702  000016c0  a0220000	sb	(r1),r2
  703  000016c4  a3c2fff3	sb	-13(r30),r2
  704  000016c8          	L17_LF2:
  705  000016c8  93c1fff3	lbu	r1,-13(r30)
  706  000016cc  64220000	snei	r2,r1,#0
  707  000016d0  1440000c	bnez	r2,L19_LF2
  708  000016d4  54000000	nop; delay slot nop
  709  000016d8  0800000c	j	L16_LF2
  710  000016dc  54000000	nop; delay slot nop
  711  000016e0          	L19_LF2:
  712  000016e0  0bffffa0	j	L15_LF2
  713  000016e4  54000000	nop; delay slot nop
  714  000016e8          	L16_LF2:
  715  000016e8  8fc1fff4	lw	r1,-12(r30)
  716  000016ec  08000004	j	L14_LF2
  717  000016f0  54000000	nop; delay slot nop
  718  000016f4          	L14_LF2:
  719  000016f4  8fa20000	lw	r2,0(r29)
  720  000016f8  8fa30004	lw	r3,4(r29)
  721  000016fc  8fdffff8	lw	r31,-8(r30)
  722  00001700  001ee820	add	r29,r0,r30
  723  00001704  8fdefffc	lw	r30,-4(r30)
  724  00001708  4be00000	jr	r31
  725  0000170c  54000000	nop
  726  00001710          	.endproc _dstrncpy
  727  00001710          	.align 2
  728  00001710          	.proc _dstrcat
  729  00001710          	.global _dstrcat
  730  00001710          	_dstrcat:
  731                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  732  00001710  afbefffc	sw	-4(r29),r30; push fp
  733  00001714  001df020	add	r30,r0,r29; fp = sp
  734  00001718  afbffff8	sw	-8(r29),r31; push ret addr
  735  0000171c  2fbd0018	subui	r29,r29,#24; alloc local storage
  736  00001720  afa20000	sw	0(r29),r2
  737  00001724  8fc10000	lw	r1,(r30)
  738  00001728  afc1fff4	sw	-12(r30),r1
  739  0000172c          	L21_LF2:
  740  0000172c  8fc10000	lw	r1,(r30)
  741  00001730  90220000	lbu	r2,(r1)
  742  00001734  64410000	snei	r1,r2,#0
  743  00001738  1420000c	bnez	r1,L23_LF2
  744  0000173c  54000000	nop; delay slot nop
  745  00001740  0800001c	j	L22_LF2
  746  00001744  54000000	nop; delay slot nop
  747  00001748          	L23_LF2:
  748  00001748  8fc20000	lw	r2,(r30)
  749  0000174c  20410001	addi	r1,r2,#1
  750  00001750  00011020	add	r2,r0,r1
  751  00001754  afc20000	sw	(r30),r2
  752  00001758  0bffffd0	j	L21_LF2
  753  0000175c  54000000	nop; delay slot nop
  754  00001760          	L22_LF2:
  755  00001760  23bdfff8	addi	r29,r29,#-8
  756  00001764  001d0820	add	r1,r0,r29
  757  00001768  8fc20000	lw	r2,(r30)
  758  0000176c  ac220000	sw	(r1),r2
  759  00001770  8fc20004	lw	r2,4(r30)
  760  00001774  ac220004	sw	4(r1),r2
  761  00001778  0ffffe5c	jal	_dstrcpy
  762  0000177c  54000000	nop; delay slot nop
  763  00001780  23bd0008	addi	r29,r29,#8
  764  00001784  8fc1fff4	lw	r1,-12(r30)
  765  00001788  08000004	j	L20_LF2
  766  0000178c  54000000	nop; delay slot nop
  767  00001790          	L20_LF2:
  768  00001790  8fa20000	lw	r2,0(r29)
  769  00001794  8fdffff8	lw	r31,-8(r30)
  770  00001798  001ee820	add	r29,r0,r30
  771  0000179c  8fdefffc	lw	r30,-4(r30)
  772  000017a0  4be00000	jr	r31
  773  000017a4  54000000	nop
  774  000017a8          	.endproc _dstrcat
  775  000017a8          	.align 2
  776  000017a8          	.proc _dstrncmp
  777  000017a8          	.global _dstrncmp
  778  000017a8          	_dstrncmp:
  779                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  780  000017a8  afbefffc	sw	-4(r29),r30; push fp
  781  000017ac  001df020	add	r30,r0,r29; fp = sp
  782  000017b0  afbffff8	sw	-8(r29),r31; push ret addr
  783  000017b4  2fbd0018	subui	r29,r29,#24; alloc local storage
  784  000017b8  afa20000	sw	0(r29),r2
  785  000017bc  afa30004	sw	4(r29),r3
  786  000017c0  54000000	nop
  787  000017c4  20010000	addi	r1,r0,#0
  788  000017c8  afc1fff4	sw	-12(r30),r1
  789  000017cc          	L25_LF2:
  790  000017cc  8fc1fff4	lw	r1,-12(r30)
  791  000017d0  8fc20008	lw	r2,8(r30)
  792  000017d4  0022082a	slt	r1,r1,r2
  793  000017d8  1420000c	bnez	r1,L28_LF2
  794  000017dc  54000000	nop; delay slot nop
  795  000017e0  08000088	j	L26_LF2
  796  000017e4  54000000	nop; delay slot nop
  797  000017e8          	L28_LF2:
  798  000017e8  8fc10004	lw	r1,4(r30)
  799  000017ec  90220000	lbu	r2,(r1)
  800  000017f0  64410000	snei	r1,r2,#0
  801  000017f4  14200018	bnez	r1,L29_LF2
  802  000017f8  54000000	nop; delay slot nop
  803  000017fc  20010000	addi	r1,r0,#0
  804  00001800  080000d8	j	L24_LF2
  805  00001804  54000000	nop; delay slot nop
  806  00001808  08000028	j	L30_LF2
  807  0000180c  54000000	nop; delay slot nop
  808  00001810          	L29_LF2:
  809  00001810  8fc10000	lw	r1,(r30)
  810  00001814  8fc20004	lw	r2,4(r30)
  811  00001818  90210000	lbu	r1,(r1)
  812  0000181c  90420000	lbu	r2,(r2)
  813  00001820  00220829	sne	r1,r1,r2
  814  00001824  1020000c	beqz	r1,L30_LF2
  815  00001828  54000000	nop; delay slot nop
  816  0000182c  0800003c	j	L26_LF2
  817  00001830  54000000	nop; delay slot nop
  818  00001834          	L31_LF2:
  819  00001834          	L30_LF2:
  820  00001834  8fc20000	lw	r2,(r30)
  821  00001838  20410001	addi	r1,r2,#1
  822  0000183c  00011020	add	r2,r0,r1
  823  00001840  afc20000	sw	(r30),r2
  824  00001844  8fc20004	lw	r2,4(r30)
  825  00001848  20410001	addi	r1,r2,#1
  826  0000184c  00011020	add	r2,r0,r1
  827  00001850  afc20004	sw	4(r30),r2
  828  00001854          	L27_LF2:
  829  00001854  8fc2fff4	lw	r2,-12(r30)
  830  00001858  20410001	addi	r1,r2,#1
  831  0000185c  00011020	add	r2,r0,r1
  832  00001860  afc2fff4	sw	-12(r30),r2
  833  00001864  0bffff64	j	L25_LF2
  834  00001868  54000000	nop; delay slot nop
  835  0000186c          	L26_LF2:
  836  0000186c  8fc1fff4	lw	r1,-12(r30)
  837  00001870  8fc20008	lw	r2,8(r30)
  838  00001874  00220828	seq	r1,r1,r2
  839  00001878  10200018	beqz	r1,L32_LF2
  840  0000187c  54000000	nop; delay slot nop
  841  00001880  20010000	addi	r1,r0,#0
  842  00001884  08000054	j	L24_LF2
  843  00001888  54000000	nop; delay slot nop
  844  0000188c  0800004c	j	L33_LF2
  845  00001890  54000000	nop; delay slot nop
  846  00001894          	L32_LF2:
  847  00001894  8fc20000	lw	r2,(r30)
  848  00001898  90410000	lbu	r1,(r2)
  849  0000189c  8fc20004	lw	r2,4(r30)
  850  000018a0  90430000	lbu	r3,(r2)
  851  000018a4  00230822	sub	r1,r1,r3
  852  000018a8  74220000	sgei	r2,r1,#0
  853  000018ac  10400020	beqz	r2,L34_LF2
  854  000018b0  54000000	nop; delay slot nop
  855  000018b4  8fc10000	lw	r1,(r30)
  856  000018b8  8fc20004	lw	r2,4(r30)
  857  000018bc  90210000	lbu	r1,(r1)
  858  000018c0  90420000	lbu	r2,(r2)
  859  000018c4  00220829	sne	r1,r1,r2
  860  000018c8  08000008	j	L35_LF2
  861  000018cc  54000000	nop; delay slot nop
  862  000018d0          	L34_LF2:
  863  000018d0  2001ffff	addi	r1,r0,#-1
  864  000018d4          	L35_LF2:
  865  000018d4  08000004	j	L24_LF2
  866  000018d8  54000000	nop; delay slot nop
  867  000018dc          	L33_LF2:
  868  000018dc          	L24_LF2:
  869  000018dc  8fa20000	lw	r2,0(r29)
  870  000018e0  8fa30004	lw	r3,4(r29)
  871  000018e4  8fdffff8	lw	r31,-8(r30)
  872  000018e8  001ee820	add	r29,r0,r30
  873  000018ec  8fdefffc	lw	r30,-4(r30)
  874  000018f0  4be00000	jr	r31
  875  000018f4  54000000	nop
  876  000018f8          	.endproc _dstrncmp
  877  000018f8          	.align 2
  878  000018f8          	.proc _dstrlen
  879  000018f8          	.global _dstrlen
  880  000018f8          	_dstrlen:
  881                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  882  000018f8  afbefffc	sw	-4(r29),r30; push fp
  883  000018fc  001df020	add	r30,r0,r29; fp = sp
  884  00001900  afbffff8	sw	-8(r29),r31; push ret addr
  885  00001904  2fbd0018	subui	r29,r29,#24; alloc local storage
  886  00001908  afa20000	sw	0(r29),r2
  887  0000190c  20010000	addi	r1,r0,#0
  888  00001910  afc1fff4	sw	-12(r30),r1
  889  00001914          	L37_LF2:
  890  00001914  8fc10000	lw	r1,(r30)
  891  00001918  20220001	addi	r2,r1,#1
  892  0000191c  afc20000	sw	(r30),r2
  893  00001920  90210000	lbu	r1,(r1)
  894  00001924  64220000	snei	r2,r1,#0
  895  00001928  1440000c	bnez	r2,L39_LF2
  896  0000192c  54000000	nop; delay slot nop
  897  00001930  0800001c	j	L38_LF2
  898  00001934  54000000	nop; delay slot nop
  899  00001938          	L39_LF2:
  900  00001938  8fc2fff4	lw	r2,-12(r30)
  901  0000193c  20410001	addi	r1,r2,#1
  902  00001940  00011020	add	r2,r0,r1
  903  00001944  afc2fff4	sw	-12(r30),r2
  904  00001948  0bffffc8	j	L37_LF2
  905  0000194c  54000000	nop; delay slot nop
  906  00001950          	L38_LF2:
  907  00001950  8fc1fff4	lw	r1,-12(r30)
  908  00001954  08000004	j	L36_LF2
  909  00001958  54000000	nop; delay slot nop
  910  0000195c          	L36_LF2:
  911  0000195c  8fa20000	lw	r2,0(r29)
  912  00001960  8fdffff8	lw	r31,-8(r30)
  913  00001964  001ee820	add	r29,r0,r30
  914  00001968  8fdefffc	lw	r30,-4(r30)
  915  0000196c  4be00000	jr	r31
  916  00001970  54000000	nop
  917  00001974          	.endproc _dstrlen
  918  00001974          	.align 2
  919  00001974          	.proc _dstrstr
  920  00001974          	.global _dstrstr
  921  00001974          	_dstrstr:
  922                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  923  00001974  afbefffc	sw	-4(r29),r30; push fp
  924  00001978  001df020	add	r30,r0,r29; fp = sp
  925  0000197c  afbffff8	sw	-8(r29),r31; push ret addr
  926  00001980  2fbd0018	subui	r29,r29,#24; alloc local storage
  927  00001984  afa20000	sw	0(r29),r2
  928  00001988  23bdfff8	addi	r29,r29,#-8
  929  0000198c  001d0820	add	r1,r0,r29
  930  00001990  8fc20004	lw	r2,4(r30)
  931  00001994  ac220000	sw	(r1),r2
  932  00001998  0fffff5c	jal	_dstrlen
  933  0000199c  54000000	nop; delay slot nop
  934  000019a0  23bd0008	addi	r29,r29,#8
  935  000019a4  afc1fff4	sw	-12(r30),r1
  936  000019a8          	L41_LF2:
  937  000019a8  8fc10000	lw	r1,(r30)
  938  000019ac  90220000	lbu	r2,(r1)
  939  000019b0  64410000	snei	r1,r2,#0
  940  000019b4  1420000c	bnez	r1,L43_LF2
  941  000019b8  54000000	nop; delay slot nop
  942  000019bc  08000060	j	L42_LF2
  943  000019c0  54000000	nop; delay slot nop
  944  000019c4          	L43_LF2:
  945  000019c4  23bdfff0	addi	r29,r29,#-16
  946  000019c8  001d0820	add	r1,r0,r29
  947  000019cc  8fc20000	lw	r2,(r30)
  948  000019d0  ac220000	sw	(r1),r2
  949  000019d4  8fc20004	lw	r2,4(r30)
  950  000019d8  ac220004	sw	4(r1),r2
  951  000019dc  8fc2fff4	lw	r2,-12(r30)
  952  000019e0  ac220008	sw	8(r1),r2
  953  000019e4  0ffffdc0	jal	_dstrncmp
  954  000019e8  54000000	nop; delay slot nop
  955  000019ec  23bd0010	addi	r29,r29,#16
  956  000019f0  64220000	snei	r2,r1,#0
  957  000019f4  14400010	bnez	r2,L44_LF2
  958  000019f8  54000000	nop; delay slot nop
  959  000019fc  8fc10000	lw	r1,(r30)
  960  00001a00  08000028	j	L40_LF2
  961  00001a04  54000000	nop; delay slot nop
  962  00001a08          	L44_LF2:
  963  00001a08  8fc20000	lw	r2,(r30)
  964  00001a0c  20410001	addi	r1,r2,#1
  965  00001a10  00011020	add	r2,r0,r1
  966  00001a14  afc20000	sw	(r30),r2
  967  00001a18  0bffff8c	j	L41_LF2
  968  00001a1c  54000000	nop; delay slot nop
  969  00001a20          	L42_LF2:
  970  00001a20  20010000	addi	r1,r0,#0
  971  00001a24  08000004	j	L40_LF2
  972  00001a28  54000000	nop; delay slot nop
  973  00001a2c          	L40_LF2:
  974  00001a2c  8fa20000	lw	r2,0(r29)
  975  00001a30  8fdffff8	lw	r31,-8(r30)
  976  00001a34  001ee820	add	r29,r0,r30
  977  00001a38  8fdefffc	lw	r30,-4(r30)
  978  00001a3c  4be00000	jr	r31
  979  00001a40  54000000	nop
  980  00001a44          	.endproc _dstrstr
  981  00001a44          	.align 2
  982  00001a44          	.proc _dmindex
  983  00001a44          	.global _dmindex
  984  00001a44          	_dmindex:
  985                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  986  00001a44  afbefffc	sw	-4(r29),r30; push fp
  987  00001a48  001df020	add	r30,r0,r29; fp = sp
  988  00001a4c  afbffff8	sw	-8(r29),r31; push ret addr
  989  00001a50  2fbd0018	subui	r29,r29,#24; alloc local storage
  990  00001a54  afa20000	sw	0(r29),r2
  991  00001a58  54000000	nop
  992  00001a5c          	L46_LF2:
  993  00001a5c  8fc10000	lw	r1,(r30)
  994  00001a60  90220000	lbu	r2,(r1)
  995  00001a64  64410000	snei	r1,r2,#0
  996  00001a68  1420000c	bnez	r1,L48_LF2
  997  00001a6c  54000000	nop; delay slot nop
  998  00001a70  08000070	j	L47_LF2
  999  00001a74  54000000	nop; delay slot nop
 1000  00001a78          	L48_LF2:
 1001  00001a78  8fc10004	lw	r1,4(r30)
 1002  00001a7c  afc1fff4	sw	-12(r30),r1
 1003  00001a80          	L49_LF2:
 1004  00001a80  8fc1fff4	lw	r1,-12(r30)
 1005  00001a84  90220000	lbu	r2,(r1)
 1006  00001a88  64410000	snei	r1,r2,#0
 1007  00001a8c  1420000c	bnez	r1,L52_LF2
 1008  00001a90  54000000	nop; delay slot nop
 1009  00001a94  08000044	j	L50_LF2
 1010  00001a98  54000000	nop; delay slot nop
 1011  00001a9c          	L52_LF2:
 1012  00001a9c  8fc10000	lw	r1,(r30)
 1013  00001aa0  8fc2fff4	lw	r2,-12(r30)
 1014  00001aa4  90210000	lbu	r1,(r1)
 1015  00001aa8  90420000	lbu	r2,(r2)
 1016  00001aac  00220828	seq	r1,r1,r2
 1017  00001ab0  10200010	beqz	r1,L51_LF2
 1018  00001ab4  54000000	nop; delay slot nop
 1019  00001ab8  8fc10000	lw	r1,(r30)
 1020  00001abc  08000030	j	L45_LF2
 1021  00001ac0  54000000	nop; delay slot nop
 1022  00001ac4          	L53_LF2:
 1023  00001ac4          	L51_LF2:
 1024  00001ac4  8fc2fff4	lw	r2,-12(r30)
 1025  00001ac8  20410001	addi	r1,r2,#1
 1026  00001acc  00011020	add	r2,r0,r1
 1027  00001ad0  afc2fff4	sw	-12(r30),r2
 1028  00001ad4  0bffffa8	j	L49_LF2
 1029  00001ad8  54000000	nop; delay slot nop
 1030  00001adc          	L50_LF2:
 1031  00001adc  0bffff7c	j	L46_LF2
 1032  00001ae0  54000000	nop; delay slot nop
 1033  00001ae4          	L47_LF2:
 1034  00001ae4  20010000	addi	r1,r0,#0
 1035  00001ae8  08000004	j	L45_LF2
 1036  00001aec  54000000	nop; delay slot nop
 1037  00001af0          	L45_LF2:
 1038  00001af0  8fa20000	lw	r2,0(r29)
 1039  00001af4  8fdffff8	lw	r31,-8(r30)
 1040  00001af8  001ee820	add	r29,r0,r30
 1041  00001afc  8fdefffc	lw	r30,-4(r30)
 1042  00001b00  4be00000	jr	r31
 1043  00001b04  54000000	nop
 1044  00001b08          	.endproc _dmindex
 1045  00001b08          	.align 2
 1046  00001b08          	.proc _dindex
 1047  00001b08          	.global _dindex
 1048  00001b08          	_dindex:
 1049                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1050  00001b08  afbefffc	sw	-4(r29),r30; push fp
 1051  00001b0c  001df020	add	r30,r0,r29; fp = sp
 1052  00001b10  afbffff8	sw	-8(r29),r31; push ret addr
 1053  00001b14  2fbd0010	subui	r29,r29,#16; alloc local storage
 1054  00001b18  afa20000	sw	0(r29),r2
 1055  00001b1c  54000000	nop
 1056  00001b20          	L55_LF2:
 1057  00001b20  8fc10000	lw	r1,(r30)
 1058  00001b24  90220000	lbu	r2,(r1)
 1059  00001b28  64410000	snei	r1,r2,#0
 1060  00001b2c  1420000c	bnez	r1,L57_LF2
 1061  00001b30  54000000	nop; delay slot nop
 1062  00001b34  08000040	j	L56_LF2
 1063  00001b38  54000000	nop; delay slot nop
 1064  00001b3c          	L57_LF2:
 1065  00001b3c  8fc10000	lw	r1,(r30)
 1066  00001b40  90220000	lbu	r2,(r1)
 1067  00001b44  8fc10004	lw	r1,4(r30)
 1068  00001b48  00411028	seq	r2,r2,r1
 1069  00001b4c  10400010	beqz	r2,L58_LF2
 1070  00001b50  54000000	nop; delay slot nop
 1071  00001b54  8fc10000	lw	r1,(r30)
 1072  00001b58  08000028	j	L54_LF2
 1073  00001b5c  54000000	nop; delay slot nop
 1074  00001b60          	L58_LF2:
 1075  00001b60  8fc20000	lw	r2,(r30)
 1076  00001b64  20410001	addi	r1,r2,#1
 1077  00001b68  00011020	add	r2,r0,r1
 1078  00001b6c  afc20000	sw	(r30),r2
 1079  00001b70  0bffffac	j	L55_LF2
 1080  00001b74  54000000	nop; delay slot nop
 1081  00001b78          	L56_LF2:
 1082  00001b78  20010000	addi	r1,r0,#0
 1083  00001b7c  08000004	j	L54_LF2
 1084  00001b80  54000000	nop; delay slot nop
 1085  00001b84          	L54_LF2:
 1086  00001b84  8fa20000	lw	r2,0(r29)
 1087  00001b88  8fdffff8	lw	r31,-8(r30)
 1088  00001b8c  001ee820	add	r29,r0,r30
 1089  00001b90  8fdefffc	lw	r30,-4(r30)
 1090  00001b94  4be00000	jr	r31
 1091  00001b98  54000000	nop
 1092  00001b9c          	.endproc _dindex
 1093  00001b9c          	.align 2
 1094  00001b9c          	.proc _ditoa
 1095  00001b9c          	.global _ditoa
 1096  00001b9c          	_ditoa:
 1097                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1098  00001b9c  afbefffc	sw	-4(r29),r30; push fp
 1099  00001ba0  001df020	add	r30,r0,r29; fp = sp
 1100  00001ba4  afbffff8	sw	-8(r29),r31; push ret addr
 1101  00001ba8  2fbd0018	subui	r29,r29,#24; alloc local storage
 1102  00001bac  afa20000	sw	0(r29),r2
 1103  00001bb0  afa30004	sw	4(r29),r3
 1104  00001bb4  8fc10000	lw	r1,(r30)
 1105  00001bb8  68220000	slti	r2,r1,#0
 1106  00001bbc  1040002c	beqz	r2,L60_LF2
 1107  00001bc0  54000000	nop; delay slot nop
 1108  00001bc4  8fc10004	lw	r1,4(r30)
 1109  00001bc8  20220001	addi	r2,r1,#1
 1110  00001bcc  afc20004	sw	4(r30),r2
 1111  00001bd0  2002002d	addi	r2,r0,(#0x2d)&0xff
 1112  00001bd4  a0220000	sb	(r1),r2
 1113  00001bd8  8fc10000	lw	r1,(r30)
 1114  00001bdc  00011022	sub	r2,r0,r1
 1115  00001be0  afc20000	sw	(r30),r2
 1116  00001be4  08000118	j	L61_LF2
 1117  00001be8  54000000	nop; delay slot nop
 1118  00001bec          	L60_LF2:
 1119  00001bec  8fc10000	lw	r1,(r30)
 1120  00001bf0  64220000	snei	r2,r1,#0
 1121  00001bf4  14400020	bnez	r2,L62_LF2
 1122  00001bf8  54000000	nop; delay slot nop
 1123  00001bfc  8fc10004	lw	r1,4(r30)
 1124  00001c00  20220001	addi	r2,r1,#1
 1125  00001c04  afc20004	sw	4(r30),r2
 1126  00001c08  20020030	addi	r2,r0,(#0x30)&0xff
 1127  00001c0c  a0220000	sb	(r1),r2
 1128  00001c10  080000ec	j	L61_LF2
 1129  00001c14  54000000	nop; delay slot nop
 1130  00001c18          	L62_LF2:
 1131  00001c18  20010001	addi	r1,r0,#1
 1132  00001c1c  afc1fff4	sw	-12(r30),r1
 1133  00001c20          	L64_LF2:
 1134  00001c20  8fc1fff4	lw	r1,-12(r30)
 1135  00001c24  8fc20000	lw	r2,(r30)
 1136  00001c28  0022082c	sle	r1,r1,r2
 1137  00001c2c  1420000c	bnez	r1,L66_LF2
 1138  00001c30  54000000	nop; delay slot nop
 1139  00001c34  08000024	j	L65_LF2
 1140  00001c38  54000000	nop; delay slot nop
 1141  00001c3c          	L67_LF2:
 1142  00001c3c          	L66_LF2:
 1143  00001c3c  8fc1fff4	lw	r1,-12(r30)
 1144  00001c40  00011820	add	r3,r0,r1
 1145  00001c44  50620002	slli	r2,r3,#0x2
 1146  00001c48  00411020	add	r2,r2,r1
 1147  00001c4c  50410001	slli	r1,r2,#0x1
 1148  00001c50  afc1fff4	sw	-12(r30),r1
 1149  00001c54  0bffffc8	j	L64_LF2
 1150  00001c58  54000000	nop; delay slot nop
 1151  00001c5c          	L65_LF2:
 1152  00001c5c  54000000	nop
 1153  00001c60          	L68_LF2:
 1154  00001c60  8fc1fff4	lw	r1,-12(r30)
 1155  00001c64  2002000a	addi	r2,r0,#10
 1156  00001c68  00200035	movi2fp	f0,r1
 1157  00001c6c  00400835	movi2fp	f1,r2
 1158  00001c70  0401000f	div	f0,f0,f1
 1159  00001c74  00000834	movfp2i	r1,f0
 1160  00001c78  afc1fff4	sw	-12(r30),r1
 1161  00001c7c  8fc10004	lw	r1,4(r30)
 1162  00001c80  20220001	addi	r2,r1,#1
 1163  00001c84  afc20004	sw	4(r30),r2
 1164  00001c88  8fc20000	lw	r2,(r30)
 1165  00001c8c  8fc3fff4	lw	r3,-12(r30)
 1166  00001c90  00400035	movi2fp	f0,r2
 1167  00001c94  00600835	movi2fp	f1,r3
 1168  00001c98  0401000f	div	f0,f0,f1
 1169  00001c9c  00001034	movfp2i	r2,f0
 1170  00001ca0  00021820	add	r3,r0,r2
 1171  00001ca4  20620030	addi	r2,r3,#48
 1172  00001ca8  a0220000	sb	(r1),r2
 1173  00001cac  8fc10000	lw	r1,(r30)
 1174  00001cb0  8fc3fff4	lw	r3,-12(r30)
 1175  00001cb4  00200035	movi2fp	f0,r1
 1176  00001cb8  00600835	movi2fp	f1,r3
 1177  00001cbc  0401000f	div	f0,f0,f1
 1178  00001cc0  00001034	movfp2i	r2,f0
 1179  00001cc4  8fc3fff4	lw	r3,-12(r30)
 1180  00001cc8  00400035	movi2fp	f0,r2
 1181  00001ccc  00600835	movi2fp	f1,r3
 1182  00001cd0  0401000e	mult	f0,f0,f1
 1183  00001cd4  00001034	movfp2i	r2,f0
 1184  00001cd8  00220822	sub	r1,r1,r2
 1185  00001cdc  afc10000	sw	(r30),r1
 1186  00001ce0          	L70_LF2:
 1187  00001ce0  8fc1fff4	lw	r1,-12(r30)
 1188  00001ce4  6c220001	sgti	r2,r1,#1
 1189  00001ce8  1440000c	bnez	r2,L71_LF2
 1190  00001cec  54000000	nop; delay slot nop
 1191  00001cf0  0800000c	j	L61_LF2
 1192  00001cf4  54000000	nop; delay slot nop
 1193  00001cf8          	L71_LF2:
 1194  00001cf8  0bffff64	j	L68_LF2
 1195  00001cfc  54000000	nop; delay slot nop
 1196  00001d00          	L69_LF2:
 1197  00001d00          	L63_LF2:
 1198  00001d00          	L61_LF2:
 1199  00001d00  8fc10004	lw	r1,4(r30)
 1200  00001d04  20020000	addi	r2,r0,(#0x0)&0xff
 1201  00001d08  a0220000	sb	(r1),r2
 1202  00001d0c          	L59_LF2:
 1203  00001d0c  8fa20000	lw	r2,0(r29)
 1204  00001d10  8fa30004	lw	r3,4(r29)
 1205  00001d14  8fdffff8	lw	r31,-8(r30)
 1206  00001d18  001ee820	add	r29,r0,r30
 1207  00001d1c  8fdefffc	lw	r30,-4(r30)
 1208  00001d20  4be00000	jr	r31
 1209  00001d24  54000000	nop
 1210  00001d28          	.endproc _ditoa
 1211  00001d28          	.align 2
 1212  00001d28          	.proc _dstrtol
 1213  00001d28          	.global _dstrtol
 1214  00001d28          	_dstrtol:
 1215                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1216  00001d28  afbefffc	sw	-4(r29),r30; push fp
 1217  00001d2c  001df020	add	r30,r0,r29; fp = sp
 1218  00001d30  afbffff8	sw	-8(r29),r31; push ret addr
 1219  00001d34  2fbd0020	subui	r29,r29,#32; alloc local storage
 1220  00001d38  afa20000	sw	0(r29),r2
 1221  00001d3c  20010000	addi	r1,r0,#0
 1222  00001d40  afc1fff4	sw	-12(r30),r1
 1223  00001d44          	L73_LF2:
 1224  00001d44  8fc10000	lw	r1,(r30)
 1225  00001d48  90220000	lbu	r2,(r1)
 1226  00001d4c  60410020	seqi	r1,r2,#32
 1227  00001d50  14200034	bnez	r1,L75_LF2
 1228  00001d54  54000000	nop; delay slot nop
 1229  00001d58  8fc10000	lw	r1,(r30)
 1230  00001d5c  90220000	lbu	r2,(r1)
 1231  00001d60  60410009	seqi	r1,r2,#9
 1232  00001d64  14200020	bnez	r1,L75_LF2
 1233  00001d68  54000000	nop; delay slot nop
 1234  00001d6c  8fc10000	lw	r1,(r30)
 1235  00001d70  90220000	lbu	r2,(r1)
 1236  00001d74  6041000a	seqi	r1,r2,#10
 1237  00001d78  1420000c	bnez	r1,L75_LF2
 1238  00001d7c  54000000	nop; delay slot nop
 1239  00001d80  0800001c	j	L74_LF2
 1240  00001d84  54000000	nop; delay slot nop
 1241  00001d88          	L75_LF2:
 1242  00001d88  8fc20000	lw	r2,(r30)
 1243  00001d8c  20410001	addi	r1,r2,#1
 1244  00001d90  00011020	add	r2,r0,r1
 1245  00001d94  afc20000	sw	(r30),r2
 1246  00001d98  0bffffa8	j	L73_LF2
 1247  00001d9c  54000000	nop; delay slot nop
 1248  00001da0          	L74_LF2:
 1249  00001da0  8fc10004	lw	r1,4(r30)
 1250  00001da4  64220000	snei	r2,r1,#0
 1251  00001da8  10400010	beqz	r2,L76_LF2
 1252  00001dac  54000000	nop; delay slot nop
 1253  00001db0  8fc10004	lw	r1,4(r30)
 1254  00001db4  8fc20000	lw	r2,(r30)
 1255  00001db8  ac220000	sw	(r1),r2
 1256  00001dbc          	L76_LF2:
 1257  00001dbc  8fc10000	lw	r1,(r30)
 1258  00001dc0  90220000	lbu	r2,(r1)
 1259  00001dc4  64410000	snei	r1,r2,#0
 1260  00001dc8  14200010	bnez	r1,L77_LF2
 1261  00001dcc  54000000	nop; delay slot nop
 1262  00001dd0  8fc1fff4	lw	r1,-12(r30)
 1263  00001dd4  08000294	j	L72_LF2
 1264  00001dd8  54000000	nop; delay slot nop
 1265  00001ddc          	L77_LF2:
 1266  00001ddc  8fc10000	lw	r1,(r30)
 1267  00001de0  90220000	lbu	r2,(r1)
 1268  00001de4  6041002d	seqi	r1,r2,#45
 1269  00001de8  10200024	beqz	r1,L78_LF2
 1270  00001dec  54000000	nop; delay slot nop
 1271  00001df0  2001ffff	addi	r1,r0,#-1
 1272  00001df4  afc1ffec	sw	-20(r30),r1
 1273  00001df8  8fc20000	lw	r2,(r30)
 1274  00001dfc  20410001	addi	r1,r2,#1
 1275  00001e00  00011020	add	r2,r0,r1
 1276  00001e04  afc20000	sw	(r30),r2
 1277  00001e08  0800000c	j	L79_LF2
 1278  00001e0c  54000000	nop; delay slot nop
 1279  00001e10          	L78_LF2:
 1280  00001e10  20010001	addi	r1,r0,#1
 1281  00001e14  afc1ffec	sw	-20(r30),r1
 1282  00001e18          	L79_LF2:
 1283  00001e18  8fc10008	lw	r1,8(r30)
 1284  00001e1c  64220000	snei	r2,r1,#0
 1285  00001e20  14400090	bnez	r2,L80_LF2
 1286  00001e24  54000000	nop; delay slot nop
 1287  00001e28  8fc10000	lw	r1,(r30)
 1288  00001e2c  90220000	lbu	r2,(r1)
 1289  00001e30  60410030	seqi	r1,r2,#48
 1290  00001e34  10200074	beqz	r1,L81_LF2
 1291  00001e38  54000000	nop; delay slot nop
 1292  00001e3c  8fc20000	lw	r2,(r30)
 1293  00001e40  20410001	addi	r1,r2,#1
 1294  00001e44  00011020	add	r2,r0,r1
 1295  00001e48  afc20000	sw	(r30),r2
 1296  00001e4c  8fc10000	lw	r1,(r30)
 1297  00001e50  90220000	lbu	r2,(r1)
 1298  00001e54  60410078	seqi	r1,r2,#120
 1299  00001e58  14200020	bnez	r1,L83_LF2
 1300  00001e5c  54000000	nop; delay slot nop
 1301  00001e60  8fc10000	lw	r1,(r30)
 1302  00001e64  90220000	lbu	r2,(r1)
 1303  00001e68  60410058	seqi	r1,r2,#88
 1304  00001e6c  1420000c	bnez	r1,L83_LF2
 1305  00001e70  54000000	nop; delay slot nop
 1306  00001e74  08000024	j	L82_LF2
 1307  00001e78  54000000	nop; delay slot nop
 1308  00001e7c          	L83_LF2:
 1309  00001e7c  20010010	addi	r1,r0,#16
 1310  00001e80  afc10008	sw	8(r30),r1
 1311  00001e84  8fc20000	lw	r2,(r30)
 1312  00001e88  20410001	addi	r1,r2,#1
 1313  00001e8c  00011020	add	r2,r0,r1
 1314  00001e90  afc20000	sw	(r30),r2
 1315  00001e94  0800000c	j	L84_LF2
 1316  00001e98  54000000	nop; delay slot nop
 1317  00001e9c          	L82_LF2:
 1318  00001e9c  20010008	addi	r1,r0,#8
 1319  00001ea0  afc10008	sw	8(r30),r1
 1320  00001ea4          	L84_LF2:
 1321  00001ea4  0800000c	j	L80_LF2
 1322  00001ea8  54000000	nop; delay slot nop
 1323  00001eac          	L81_LF2:
 1324  00001eac  2001000a	addi	r1,r0,#10
 1325  00001eb0  afc10008	sw	8(r30),r1
 1326  00001eb4          	L85_LF2:
 1327  00001eb4          	L80_LF2:
 1328  00001eb4  8fc10008	lw	r1,8(r30)
 1329  00001eb8  70220000	slei	r2,r1,#0
 1330  00001ebc  1440001c	bnez	r2,L87_LF2
 1331  00001ec0  54000000	nop; delay slot nop
 1332  00001ec4  8fc10008	lw	r1,8(r30)
 1333  00001ec8  6c220010	sgti	r2,r1,#16
 1334  00001ecc  1440000c	bnez	r2,L87_LF2
 1335  00001ed0  54000000	nop; delay slot nop
 1336  00001ed4  08000010	j	L86_LF2
 1337  00001ed8  54000000	nop; delay slot nop
 1338  00001edc          	L87_LF2:
 1339  00001edc  8fc1fff4	lw	r1,-12(r30)
 1340  00001ee0  08000188	j	L72_LF2
 1341  00001ee4  54000000	nop; delay slot nop
 1342  00001ee8          	L86_LF2:
 1343  00001ee8  54000000	nop
 1344  00001eec          	L88_LF2:
 1345  00001eec  8fc10000	lw	r1,(r30)
 1346  00001ef0  90220000	lbu	r2,(r1)
 1347  00001ef4  6c41002f	sgtui	r1,r2,#47
 1348  00001ef8  10200030	beqz	r1,L91_LF2
 1349  00001efc  54000000	nop; delay slot nop
 1350  00001f00  8fc10000	lw	r1,(r30)
 1351  00001f04  90220000	lbu	r2,(r1)
 1352  00001f08  70410039	sleui	r1,r2,#57
 1353  00001f0c  1020001c	beqz	r1,L91_LF2
 1354  00001f10  54000000	nop; delay slot nop
 1355  00001f14  8fc10000	lw	r1,(r30)
 1356  00001f18  90220000	lbu	r2,(r1)
 1357  00001f1c  2041ffd0	addi	r1,r2,#-48
 1358  00001f20  afc1fff0	sw	-16(r30),r1
 1359  00001f24  0800008c	j	L92_LF2
 1360  00001f28  54000000	nop; delay slot nop
 1361  00001f2c          	L91_LF2:
 1362  00001f2c  8fc10000	lw	r1,(r30)
 1363  00001f30  90220000	lbu	r2,(r1)
 1364  00001f34  6c410060	sgtui	r1,r2,#96
 1365  00001f38  10200030	beqz	r1,L93_LF2
 1366  00001f3c  54000000	nop; delay slot nop
 1367  00001f40  8fc10000	lw	r1,(r30)
 1368  00001f44  90220000	lbu	r2,(r1)
 1369  00001f48  7041007a	sleui	r1,r2,#122
 1370  00001f4c  1020001c	beqz	r1,L93_LF2
 1371  00001f50  54000000	nop; delay slot nop
 1372  00001f54  8fc10000	lw	r1,(r30)
 1373  00001f58  90220000	lbu	r2,(r1)
 1374  00001f5c  2041ffa9	addi	r1,r2,#-87
 1375  00001f60  afc1fff0	sw	-16(r30),r1
 1376  00001f64  0800004c	j	L92_LF2
 1377  00001f68  54000000	nop; delay slot nop
 1378  00001f6c          	L93_LF2:
 1379  00001f6c  8fc10000	lw	r1,(r30)
 1380  00001f70  90220000	lbu	r2,(r1)
 1381  00001f74  6c410040	sgtui	r1,r2,#64
 1382  00001f78  10200030	beqz	r1,L95_LF2
 1383  00001f7c  54000000	nop; delay slot nop
 1384  00001f80  8fc10000	lw	r1,(r30)
 1385  00001f84  90220000	lbu	r2,(r1)
 1386  00001f88  7041005a	sleui	r1,r2,#90
 1387  00001f8c  1020001c	beqz	r1,L95_LF2
 1388  00001f90  54000000	nop; delay slot nop
 1389  00001f94  8fc10000	lw	r1,(r30)
 1390  00001f98  90220000	lbu	r2,(r1)
 1391  00001f9c  2041ffc9	addi	r1,r2,#-55
 1392  00001fa0  afc1fff0	sw	-16(r30),r1
 1393  00001fa4  0800000c	j	L92_LF2
 1394  00001fa8  54000000	nop; delay slot nop
 1395  00001fac          	L95_LF2:
 1396  00001fac  200103e8	addi	r1,r0,#1000
 1397  00001fb0  afc1fff0	sw	-16(r30),r1
 1398  00001fb4          	L96_LF2:
 1399  00001fb4          	L94_LF2:
 1400  00001fb4          	L92_LF2:
 1401  00001fb4  8fc1fff0	lw	r1,-16(r30)
 1402  00001fb8  8fc20008	lw	r2,8(r30)
 1403  00001fbc  0022082a	slt	r1,r1,r2
 1404  00001fc0  10200040	beqz	r1,L90_LF2
 1405  00001fc4  54000000	nop; delay slot nop
 1406  00001fc8  8fc1fff4	lw	r1,-12(r30)
 1407  00001fcc  8fc20008	lw	r2,8(r30)
 1408  00001fd0  00200035	movi2fp	f0,r1
 1409  00001fd4  00400835	movi2fp	f1,r2
 1410  00001fd8  0401000e	mult	f0,f0,f1
 1411  00001fdc  00000834	movfp2i	r1,f0
 1412  00001fe0  afc1fff4	sw	-12(r30),r1
 1413  00001fe4  8fc1fff4	lw	r1,-12(r30)
 1414  00001fe8  8fc2fff0	lw	r2,-16(r30)
 1415  00001fec  00220820	add	r1,r1,r2
 1416  00001ff0  afc1fff4	sw	-12(r30),r1
 1417  00001ff4  8fc20000	lw	r2,(r30)
 1418  00001ff8  20410001	addi	r1,r2,#1
 1419  00001ffc  00011020	add	r2,r0,r1
 1420  00002000  afc20000	sw	(r30),r2
 1421  00002004          	L97_LF2:
 1422  00002004          	L90_LF2:
 1423  00002004  8fc1fff0	lw	r1,-16(r30)
 1424  00002008  8fc20008	lw	r2,8(r30)
 1425  0000200c  0022082a	slt	r1,r1,r2
 1426  00002010  1420000c	bnez	r1,L98_LF2
 1427  00002014  54000000	nop; delay slot nop
 1428  00002018  0800000c	j	L89_LF2
 1429  0000201c  54000000	nop; delay slot nop
 1430  00002020          	L98_LF2:
 1431  00002020  0bfffec8	j	L88_LF2
 1432  00002024  54000000	nop; delay slot nop
 1433  00002028          	L89_LF2:
 1434  00002028  8fc10004	lw	r1,4(r30)
 1435  0000202c  64220000	snei	r2,r1,#0
 1436  00002030  10400010	beqz	r2,L99_LF2
 1437  00002034  54000000	nop; delay slot nop
 1438  00002038  8fc10004	lw	r1,4(r30)
 1439  0000203c  8fc20000	lw	r2,(r30)
 1440  00002040  ac220000	sw	(r1),r2
 1441  00002044          	L99_LF2:
 1442  00002044  8fc1fff4	lw	r1,-12(r30)
 1443  00002048  8fc2ffec	lw	r2,-20(r30)
 1444  0000204c  00200035	movi2fp	f0,r1
 1445  00002050  00400835	movi2fp	f1,r2
 1446  00002054  0401000e	mult	f0,f0,f1
 1447  00002058  00000834	movfp2i	r1,f0
 1448  0000205c  afc1fff4	sw	-12(r30),r1
 1449  00002060  8fc1fff4	lw	r1,-12(r30)
 1450  00002064  08000004	j	L72_LF2
 1451  00002068  54000000	nop; delay slot nop
 1452  0000206c          	L72_LF2:
 1453  0000206c  8fa20000	lw	r2,0(r29)
 1454  00002070  8fdffff8	lw	r31,-8(r30)
 1455  00002074  001ee820	add	r29,r0,r30
 1456  00002078  8fdefffc	lw	r30,-4(r30)
 1457  0000207c  4be00000	jr	r31
 1458  00002080  54000000	nop
 1459  00002084          	.endproc _dstrtol
 1460  00002084          	.align 2
 1461  00002084          	.proc _bcopy
 1462  00002084          	.global _bcopy
 1463  00002084          	_bcopy:
 1464                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1465  00002084  afbefffc	sw	-4(r29),r30; push fp
 1466  00002088  001df020	add	r30,r0,r29; fp = sp
 1467  0000208c  afbffff8	sw	-8(r29),r31; push ret addr
 1468  00002090  2fbd0010	subui	r29,r29,#16; alloc local storage
 1469  00002094  afa20000	sw	0(r29),r2
 1470  00002098  afa30004	sw	4(r29),r3
 1471  0000209c  54000000	nop
 1472  000020a0          	L101_LF2:
 1473  000020a0  8fc10008	lw	r1,8(r30)
 1474  000020a4  2022ffff	addi	r2,r1,#-1
 1475  000020a8  afc20008	sw	8(r30),r2
 1476  000020ac  6c210000	sgti	r1,r1,#0
 1477  000020b0  1420000c	bnez	r1,L103_LF2
 1478  000020b4  54000000	nop; delay slot nop
 1479  000020b8  0800002c	j	L102_LF2
 1480  000020bc  54000000	nop; delay slot nop
 1481  000020c0          	L103_LF2:
 1482  000020c0  8fc10004	lw	r1,4(r30)
 1483  000020c4  20220001	addi	r2,r1,#1
 1484  000020c8  afc20004	sw	4(r30),r2
 1485  000020cc  8fc20000	lw	r2,(r30)
 1486  000020d0  20430001	addi	r3,r2,#1
 1487  000020d4  afc30000	sw	(r30),r3
 1488  000020d8  80420000	lb	r2,(r2)
 1489  000020dc  a0220000	sb	(r1),r2
 1490  000020e0  0bffffbc	j	L101_LF2
 1491  000020e4  54000000	nop; delay slot nop
 1492  000020e8          	L102_LF2:
 1493  000020e8          	L100_LF2:
 1494  000020e8  8fa20000	lw	r2,0(r29)
 1495  000020ec  8fa30004	lw	r3,4(r29)
 1496  000020f0  8fdffff8	lw	r31,-8(r30)
 1497  000020f4  001ee820	add	r29,r0,r30
 1498  000020f8  8fdefffc	lw	r30,-4(r30)
 1499  000020fc  4be00000	jr	r31
 1500  00002100  54000000	nop
 1501  00002104          	.endproc _bcopy
 1502  00002104          	.align 2
 1503  00002104          	.proc _bzero
 1504  00002104          	.global _bzero
 1505  00002104          	_bzero:
 1506                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1507  00002104  afbefffc	sw	-4(r29),r30; push fp
 1508  00002108  001df020	add	r30,r0,r29; fp = sp
 1509  0000210c  afbffff8	sw	-8(r29),r31; push ret addr
 1510  00002110  2fbd0010	subui	r29,r29,#16; alloc local storage
 1511  00002114  afa20000	sw	0(r29),r2
 1512  00002118  54000000	nop
 1513  0000211c          	L105_LF2:
 1514  0000211c  8fc10004	lw	r1,4(r30)
 1515  00002120  2022ffff	addi	r2,r1,#-1
 1516  00002124  afc20004	sw	4(r30),r2
 1517  00002128  6c210000	sgti	r1,r1,#0
 1518  0000212c  1420000c	bnez	r1,L107_LF2
 1519  00002130  54000000	nop; delay slot nop
 1520  00002134  08000020	j	L106_LF2
 1521  00002138  54000000	nop; delay slot nop
 1522  0000213c          	L107_LF2:
 1523  0000213c  8fc10000	lw	r1,(r30)
 1524  00002140  20220001	addi	r2,r1,#1
 1525  00002144  afc20000	sw	(r30),r2
 1526  00002148  20020000	addi	r2,r0,(#0x0)&0xff
 1527  0000214c  a0220000	sb	(r1),r2
 1528  00002150  0bffffc8	j	L105_LF2
 1529  00002154  54000000	nop; delay slot nop
 1530  00002158          	L106_LF2:
 1531  00002158          	L104_LF2:
 1532  00002158  8fa20000	lw	r2,0(r29)
 1533  0000215c  8fdffff8	lw	r31,-8(r30)
 1534  00002160  001ee820	add	r29,r0,r30
 1535  00002164  8fdefffc	lw	r30,-4(r30)
 1536  00002168  4be00000	jr	r31
 1537  0000216c  54000000	nop
 1538  00002170          	.endproc _bzero
 1539  00002170          	.align 2
 1540  00002170          	.proc _min
 1541  00002170          	.global _min
 1542  00002170          	_min:
 1543                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1544  00002170  afbefffc	sw	-4(r29),r30; push fp
 1545  00002174  001df020	add	r30,r0,r29; fp = sp
 1546  00002178  afbffff8	sw	-8(r29),r31; push ret addr
 1547  0000217c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1548  00002180  afa20000	sw	0(r29),r2
 1549  00002184  afa30004	sw	4(r29),r3
 1550  00002188  8fc10000	lw	r1,(r30)
 1551  0000218c  8fc20004	lw	r2,4(r30)
 1552  00002190  0022182c	sle	r3,r1,r2
 1553  00002194  14600008	bnez	r3,L109_LF2
 1554  00002198  54000000	nop; delay slot nop
 1555  0000219c  8fc10004	lw	r1,4(r30)
 1556  000021a0          	L109_LF2:
 1557  000021a0  08000004	j	L108_LF2
 1558  000021a4  54000000	nop; delay slot nop
 1559  000021a8          	L108_LF2:
 1560  000021a8  8fa20000	lw	r2,0(r29)
 1561  000021ac  8fa30004	lw	r3,4(r29)
 1562  000021b0  8fdffff8	lw	r31,-8(r30)
 1563  000021b4  001ee820	add	r29,r0,r30
 1564  000021b8  8fdefffc	lw	r30,-4(r30)
 1565  000021bc  4be00000	jr	r31
 1566  000021c0  54000000	nop
 1567  000021c4          	.endproc _min
 1568  000021c4          	.align 2
 1569  000021c4          	.proc _max
 1570  000021c4          	.global _max
 1571  000021c4          	_max:
 1572                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1573  000021c4  afbefffc	sw	-4(r29),r30; push fp
 1574  000021c8  001df020	add	r30,r0,r29; fp = sp
 1575  000021cc  afbffff8	sw	-8(r29),r31; push ret addr
 1576  000021d0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1577  000021d4  afa20000	sw	0(r29),r2
 1578  000021d8  afa30004	sw	4(r29),r3
 1579  000021dc  8fc10000	lw	r1,(r30)
 1580  000021e0  8fc20004	lw	r2,4(r30)
 1581  000021e4  0022182d	sge	r3,r1,r2
 1582  000021e8  14600008	bnez	r3,L111_LF2
 1583  000021ec  54000000	nop; delay slot nop
 1584  000021f0  8fc10004	lw	r1,4(r30)
 1585  000021f4          	L111_LF2:
 1586  000021f4  08000004	j	L110_LF2
 1587  000021f8  54000000	nop; delay slot nop
 1588  000021fc          	L110_LF2:
 1589  000021fc  8fa20000	lw	r2,0(r29)
 1590  00002200  8fa30004	lw	r3,4(r29)
 1591  00002204  8fdffff8	lw	r31,-8(r30)
 1592  00002208  001ee820	add	r29,r0,r30
 1593  0000220c  8fdefffc	lw	r30,-4(r30)
 1594  00002210  4be00000	jr	r31
 1595  00002214  54000000	nop
 1596  00002218          	.endproc _max
 1597                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1598                      ;;;
 1599                      ;;; Most of the traps are called in files from libtraps.
 1602  00002218          	.align 2
 1603  00002218          	.proc _exit
 1604  00002218          	.global _exit
 1605  00002218          	_exit:
 1606  00002218  44000300	trap	#0x300
 1607  0000221c  4be00000	jr	r31
 1608  00002220  54000000	nop
 1609  00002224          	.endproc _exit
 1611                      ; for the benefit of gcc.
 1612  00002224          	.proc ___main
 1613  00002224          	.global ___main
 1614  00002224          	___main:
 1615  00002224  4be00000	jr	r31
 1616  00002228  54000000	nop
 1617  0000222c          	.endproc ___main
 1618  0000222c          	.text
 1619  0000222c          	.global _etext
 1620  0000222c          	_etext:
 1621  0000222c          	.align 3
 1622  00002230          	.data
 1623  00003142          	.global _edata
 1624  00003142          	_edata:
