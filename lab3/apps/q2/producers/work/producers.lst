 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 124
    4                      ; Text size: 4480
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  50726f64	.ascii "Producer PID: %d\n\000"
   82  00003004  75636572	
   82  00003008  20504944	
   82  0000300c  3a202564	
   82  00003010  0a00    	
   83  00003012          	.align 2
   84  00003014          	LC1_LF0:
   85  00003014  57726f6e	.ascii "Wrong number of arguments!\n\000"
   85  00003018  67206e75	
   85  0000301c  6d626572	
   85  00003020  206f6620	
   85  00003024  61726775	
   85  00003028  6d656e74	
   85  0000302c  73210a00	
   86  00003030          	.align 2
   87  00003030          	LC2_LF0:
   88  00003030  4661696c	.ascii "Failed to open mbox!\n\000"
   88  00003034  65642074	
   88  00003038  6f206f70	
   88  0000303c  656e206d	
   88  00003040  626f7821	
   88  00003044  0a00    	
   89  00003046          	.align 2
   90  00003048          	LC3_LF0:
   91  00003048  4661696c	.ascii "Failed to send message\n\000"
   91  0000304c  65642074	
   91  00003050  6f207365	
   91  00003054  6e64206d	
   91  00003058  65737361	
   91  0000305c  67650a00	
   92  00003060          	.align 2
   93  00003060          	LC4_LF0:
   94  00003060  4661696c	.ascii "Failed to signal semaphore\n\000"
   94  00003064  65642074	
   94  00003068  6f207369	
   94  0000306c  676e616c	
   94  00003070  2073656d	
   94  00003074  6170686f	
   94  00003078  72650a00	
   95  0000307c          	.text
   96  000010d4          	.align 2
   97  000010d4          	.proc _main
   98  000010d4          	.global _main
   99  000010d4          	_main:
  100                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  101  000010d4  afbefffc	sw	-4(r29),r30; push fp
  102  000010d8  001df020	add	r30,r0,r29; fp = sp
  103  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  104  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  105  000010e4  8fc20000	lw	r2,(r30)
  106  000010e8  8fc30004	lw	r3,4(r30)
  107  000010ec  0c001088	jal	___main
  108  000010f0  54000000	nop; not filled.
  109  000010f4  0c0001dc	jal	_getpid
  110  000010f8  54000000	nop; not filled.
  111  000010fc  23bdfff8	addi	r29,r29,#-8
  112  00001100  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  113  00001104  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  114  00001108  afa50000	sw	(r29),r5
  115  0000110c  afa10004	sw	4(r29),r1
  116  00001110  0c0001b4	jal	_Printf
  117  00001114  54000000	nop; not filled.
  118  00001118  23bd0008	addi	r29,r29,#8
  119  0000111c  64410004	snei	r1,r2,#4
  120  00001120  10200028	beqz	r1,L14_LF0
  121  00001124  54000000	nop; not filled.
  122  00001128  23bdfff8	addi	r29,r29,#-8
  123  0000112c  3c050000	lhi	r5,((LC1_LF0)>>16)&0xffff
  124  00001130  24a53014	addui	r5,r5,(LC1_LF0)&0xffff
  125  00001134  afa50000	sw	(r29),r5
  126  00001138  0c00018c	jal	_Printf
  127  0000113c  54000000	nop; not filled.
  128  00001140  0c00028c	jal	_Exit
  129  00001144  54000000	nop; not filled.
  130  00001148  23bd0008	addi	r29,r29,#8
  131  0000114c          	L14_LF0:
  132  0000114c  23bdfff0	addi	r29,r29,#-16
  133  00001150  8c650004	lw	r5,4(r3)
  134  00001154  afa50000	sw	(r29),r5
  135  00001158  20050000	addi	r5,r0,#0
  136  0000115c  afa50004	sw	4(r29),r5
  137  00001160  2005000a	addi	r5,r0,#10
  138  00001164  afa50008	sw	8(r29),r5
  139  00001168  0c000b10	jal	_dstrtol
  140  0000116c  54000000	nop; not filled.
  141  00001170  00011020	add	r2,r0,r1
  142  00001174  8c650008	lw	r5,8(r3)
  143  00001178  afa50000	sw	(r29),r5
  144  0000117c  20050000	addi	r5,r0,#0
  145  00001180  afa50004	sw	4(r29),r5
  146  00001184  2005000a	addi	r5,r0,#10
  147  00001188  afa50008	sw	8(r29),r5
  148  0000118c  0c000aec	jal	_dstrtol
  149  00001190  54000000	nop; not filled.
  150  00001194  00012020	add	r4,r0,r1
  151  00001198  afa20000	sw	(r29),r2
  152  0000119c  0c0001e8	jal	_mbox_open
  153  000011a0  54000000	nop; not filled.
  154  000011a4  23bd0010	addi	r29,r29,#16
  155  000011a8  6021ffff	seqi	r1,r1,#-1
  156  000011ac  10200028	beqz	r1,L15_LF0
  157  000011b0  54000000	nop; not filled.
  158  000011b4  23bdfff8	addi	r29,r29,#-8
  159  000011b8  3c050000	lhi	r5,((LC2_LF0)>>16)&0xffff
  160  000011bc  24a53030	addui	r5,r5,(LC2_LF0)&0xffff
  161  000011c0  afa50000	sw	(r29),r5
  162  000011c4  0c000100	jal	_Printf
  163  000011c8  54000000	nop; not filled.
  164  000011cc  0c000200	jal	_Exit
  165  000011d0  54000000	nop; not filled.
  166  000011d4  23bd0008	addi	r29,r29,#8
  167  000011d8          	L15_LF0:
  168  000011d8  23bdfff8	addi	r29,r29,#-8
  169  000011dc  8c65000c	lw	r5,12(r3)
  170  000011e0  afa50000	sw	(r29),r5
  171  000011e4  0c000664	jal	_dstrlen
  172  000011e8  54000000	nop; not filled.
  173  000011ec  23bdfff8	addi	r29,r29,#-8
  174  000011f0  afa20000	sw	(r29),r2
  175  000011f4  afa10004	sw	4(r29),r1
  176  000011f8  8c63000c	lw	r3,12(r3)
  177  000011fc  afa30008	sw	8(r29),r3
  178  00001200  0c00019c	jal	_mbox_send
  179  00001204  54000000	nop; not filled.
  180  00001208  23bd0010	addi	r29,r29,#16
  181  0000120c  6021ffff	seqi	r1,r1,#-1
  182  00001210  10200020	beqz	r1,L16_LF0
  183  00001214  54000000	nop; not filled.
  184  00001218  23bdfff8	addi	r29,r29,#-8
  185  0000121c  3c050000	lhi	r5,((LC3_LF0)>>16)&0xffff
  186  00001220  24a53048	addui	r5,r5,(LC3_LF0)&0xffff
  187  00001224  afa50000	sw	(r29),r5
  188  00001228  0c00009c	jal	_Printf
  189  0000122c  54000000	nop; not filled.
  190  00001230  23bd0008	addi	r29,r29,#8
  191  00001234          	L16_LF0:
  192  00001234  23bdfff8	addi	r29,r29,#-8
  193  00001238  afa40000	sw	(r29),r4
  194  0000123c  0c0000dc	jal	_sem_signal
  195  00001240  54000000	nop; not filled.
  196  00001244  23bd0008	addi	r29,r29,#8
  197  00001248  6021ffff	seqi	r1,r1,#-1
  198  0000124c  10200028	beqz	r1,L17_LF0
  199  00001250  54000000	nop; not filled.
  200  00001254  23bdfff8	addi	r29,r29,#-8
  201  00001258  3c050000	lhi	r5,((LC4_LF0)>>16)&0xffff
  202  0000125c  24a53060	addui	r5,r5,(LC4_LF0)&0xffff
  203  00001260  afa50000	sw	(r29),r5
  204  00001264  0c000060	jal	_Printf
  205  00001268  54000000	nop; not filled.
  206  0000126c  0c000160	jal	_Exit
  207  00001270  54000000	nop; not filled.
  208  00001274  23bd0008	addi	r29,r29,#8
  209  00001278          	L17_LF0:
  210  00001278  0c000ef0	jal	_exit
  211  0000127c  54000000	nop
  212  00001280          	.endproc _main
  213                      ;;;
  214                      ;;; Stub functions for DLX traps.
  215                      ;;;
  216                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  217                      ;;;
  218                      ;;; The traps such as Open and Close
  219                      ;;; (note the capital letters) are for use by user programs.  The traps
  220                      ;;; with names such as open and close (lower case) are for use by the OS.
  221                      ;;;
  224  00001280          	.align 2
  226                      ;;; The following are the traps to be used by user-level programs
  227                      ;;;
  229  00001280          	.align 2
  230  00001280          	.proc _Open
  231  00001280          	.global _Open
  232  00001280          	_Open:
  233                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  234                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  235                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  236  00001280  44000213	trap	#0x213
  237  00001284  4be00000	jr	r31
  238  00001288  54000000	nop
  239  0000128c          	.endproc _Open
  241  0000128c          	.proc _Close
  242  0000128c          	.global _Close
  243  0000128c          	_Close:
  244  0000128c  44000214	trap	#0x214
  245  00001290  4be00000	jr	r31
  246  00001294  54000000	nop
  247  00001298          	.endproc _Close
  249  00001298          	.proc _Read
  250  00001298          	.global _Read
  251  00001298          	_Read:
  252  00001298  44000210	trap	#0x210
  253  0000129c  4be00000	jr	r31
  254  000012a0  54000000	nop
  255  000012a4          	.endproc _Read
  257  000012a4          	.proc _Write
  258  000012a4          	.global _Write
  259  000012a4          	_Write:
  260  000012a4  44000211	trap	#0x211
  261  000012a8  4be00000	jr	r31
  262  000012ac  54000000	nop
  263  000012b0          	.endproc _Write
  265  000012b0          	.proc _Lseek
  266  000012b0          	.global _Lseek
  267  000012b0          	_Lseek:
  268  000012b0  44000212	trap	#0x212
  269  000012b4  4be00000	jr	r31
  270  000012b8  54000000	nop
  271  000012bc          	.endproc _Lseek
  273  000012bc          	.proc _Putchar
  274  000012bc          	.global _Putchar
  275  000012bc          	_Putchar:
  276  000012bc  44000280	trap	#0x280
  277  000012c0  4be00000	jr	r31
  278  000012c4  54000000	nop
  279  000012c8          	.endproc _Putchar
  281  000012c8          	.proc _Printf
  282  000012c8          	.global _Printf
  283  000012c8          	_Printf:
  284  000012c8  44000201	trap	#0x201
  285  000012cc  4be00000	jr	r31
  286  000012d0  54000000	nop
  287  000012d4          	.endproc _Printf
  289  000012d4          	.proc _getpid
  290  000012d4          	.global _getpid
  291  000012d4          	_getpid:
  292  000012d4  44000431	trap	#0x431
  293  000012d8  4be00000	jr	r31
  294  000012dc  54000000	nop
  295  000012e0          	.endproc _getpid
  297  000012e0          	.proc _process_create
  298  000012e0          	.global _process_create
  299  000012e0          	_process_create:
  300  000012e0  44000432	trap	#0x432
  301  000012e4  4be00000	jr	r31
  302  000012e8  54000000	nop
  303  000012ec          	.endproc _process_create
  305  000012ec          	.proc _shmget
  306  000012ec          	.global _shmget
  307  000012ec          	_shmget:
  308  000012ec  44000440	trap	#0x440
  309  000012f0  4be00000	jr	r31
  310  000012f4  54000000	nop
  311  000012f8          	.endproc _shmget
  313  000012f8          	.proc _shmat
  314  000012f8          	.global _shmat
  315  000012f8          	_shmat:
  316  000012f8  44000441	trap	#0x441
  317  000012fc  4be00000	jr	r31
  318  00001300  54000000	nop
  319  00001304          	.endproc _shmat
  321  00001304          	.proc _sem_create
  322  00001304          	.global _sem_create
  323  00001304          	_sem_create:
  324  00001304  44000450	trap	#0x450
  325  00001308  4be00000	jr	r31
  326  0000130c  54000000	nop
  327  00001310          	.endproc _sem_create
  329  00001310          	.proc _sem_wait
  330  00001310          	.global _sem_wait
  331  00001310          	_sem_wait:
  332  00001310  44000451	trap	#0x451
  333  00001314  4be00000	jr	r31
  334  00001318  54000000	nop
  335  0000131c          	.endproc _sem_wait
  337  0000131c          	.proc _sem_signal
  338  0000131c          	.global _sem_signal
  339  0000131c          	_sem_signal:
  340  0000131c  44000452	trap	#0x452
  341  00001320  4be00000	jr	r31
  342  00001324  54000000	nop
  343  00001328          	.endproc _sem_signal
  345  00001328          	.proc _lock_create
  346  00001328          	.global _lock_create
  347  00001328          	_lock_create:
  348  00001328  44000453	trap	#0x453
  349  0000132c  4be00000	jr	r31
  350  00001330  54000000	nop
  351  00001334          	.endproc _lock_create
  353  00001334          	.proc _lock_acquire
  354  00001334          	.global _lock_acquire
  355  00001334          	_lock_acquire:
  356  00001334  44000454	trap	#0x454
  357  00001338  4be00000	jr	r31
  358  0000133c  54000000	nop
  359  00001340          	.endproc _lock_acquire
  361  00001340          	.proc _lock_release
  362  00001340          	.global _lock_release
  363  00001340          	_lock_release:
  364  00001340  44000455	trap	#0x455
  365  00001344  4be00000	jr	r31
  366  00001348  54000000	nop
  367  0000134c          	.endproc _lock_release
  369  0000134c          	.proc _cond_create
  370  0000134c          	.global _cond_create
  371  0000134c          	_cond_create:
  372  0000134c  44000456	trap	#0x456
  373  00001350  4be00000	jr	r31
  374  00001354  54000000	nop
  375  00001358          	.endproc _cond_create
  377  00001358          	.proc _cond_wait
  378  00001358          	.global _cond_wait
  379  00001358          	_cond_wait:
  380  00001358  44000457	trap	#0x457
  381  0000135c  4be00000	jr	r31
  382  00001360  54000000	nop
  383  00001364          	.endproc _cond_wait
  385  00001364          	.proc _cond_signal
  386  00001364          	.global _cond_signal
  387  00001364          	_cond_signal:
  388  00001364  44000458	trap	#0x458
  389  00001368  4be00000	jr	r31
  390  0000136c  54000000	nop
  391  00001370          	.endproc _cond_signal
  393  00001370          	.proc _cond_broadcast
  394  00001370          	.global _cond_broadcast
  395  00001370          	_cond_broadcast:
  396  00001370  44000459	trap	#0x459
  397  00001374  4be00000	jr	r31
  398  00001378  54000000	nop
  399  0000137c          	.endproc _cond_broadcast
  401  0000137c          	.proc _mbox_create
  402  0000137c          	.global _mbox_create
  403  0000137c          	_mbox_create:
  404  0000137c  44000460	trap	#0x460
  405  00001380  4be00000	jr	r31
  406  00001384  54000000	nop
  407  00001388          	.endproc _mbox_create
  409  00001388          	.proc _mbox_open
  410  00001388          	.global _mbox_open
  411  00001388          	_mbox_open:
  412  00001388  44000461	trap	#0x461
  413  0000138c  4be00000	jr	r31
  414  00001390  54000000	nop
  415  00001394          	.endproc _mbox_open
  417  00001394          	.proc _mbox_close
  418  00001394          	.global _mbox_close
  419  00001394          	_mbox_close:
  420  00001394  44000462	trap	#0x462
  421  00001398  4be00000	jr	r31
  422  0000139c  54000000	nop
  423  000013a0          	.endproc _mbox_close
  425  000013a0          	.proc _mbox_send
  426  000013a0          	.global _mbox_send
  427  000013a0          	_mbox_send:
  428  000013a0  44000463	trap	#0x463
  429  000013a4  4be00000	jr	r31
  430  000013a8  54000000	nop
  431  000013ac          	.endproc _mbox_send
  433  000013ac          	.proc _mbox_recv
  434  000013ac          	.global _mbox_recv
  435  000013ac          	_mbox_recv:
  436  000013ac  44000464	trap	#0x464
  437  000013b0  4be00000	jr	r31
  438  000013b4  54000000	nop
  439  000013b8          	.endproc _mbox_recv
  441  000013b8          	.proc _sleep
  442  000013b8          	.global _sleep
  443  000013b8          	_sleep:
  444  000013b8  44000465	trap	#0x465
  445  000013bc  4be00000	jr	r31
  446  000013c0  54000000	nop
  447  000013c4          	.endproc _sleep
  449  000013c4          	.proc _yield
  450  000013c4          	.global _yield
  451  000013c4          	_yield:
  452  000013c4  44000466	trap	#0x466
  453  000013c8  4be00000	jr	r31
  454  000013cc  54000000	nop
  455  000013d0          	.endproc _yield
  458  000013d0          	.proc _Exit
  459  000013d0          	.global _Exit
  460  000013d0          	_Exit:
  461  000013d0  44000500	trap	#0x500
  462  000013d4  4be00000	jr	r31
  463  000013d8  54000000	nop
  464  000013dc          	.endproc _Exit
  465                      ; Compiled by GCC
  467  000013dc          	.align 2
  468  000013dc          	.proc _isspace
  469  000013dc          	.global _isspace
  470  000013dc          	_isspace:
  471                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  472  000013dc  afbefffc	sw	-4(r29),r30; push fp
  473  000013e0  001df020	add	r30,r0,r29; fp = sp
  474  000013e4  afbffff8	sw	-8(r29),r31; push ret addr
  475  000013e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  476  000013ec  afa20000	sw	0(r29),r2
  477  000013f0  afa30004	sw	4(r29),r3
  478  000013f4  afa40008	sw	8(r29),r4
  479  000013f8  83c20003	lb	r2,3(r30)
  480  000013fc  20010000	addi	r1,r0,#0
  481  00001400  304300ff	andi	r3,r2,#0x00ff
  482  00001404  60640020	seqi	r4,r3,#32
  483  00001408  1480002c	bnez	r4,L3_LF2
  484  0000140c  54000000	nop; delay slot nop
  485  00001410  304300ff	andi	r3,r2,#0x00ff
  486  00001414  60640009	seqi	r4,r3,#9
  487  00001418  1480001c	bnez	r4,L3_LF2
  488  0000141c  54000000	nop; delay slot nop
  489  00001420  304300ff	andi	r3,r2,#0x00ff
  490  00001424  6064000a	seqi	r4,r3,#10
  491  00001428  1480000c	bnez	r4,L3_LF2
  492  0000142c  54000000	nop; delay slot nop
  493  00001430  08000008	j	L2_LF2
  494  00001434  54000000	nop; delay slot nop
  495  00001438          	L3_LF2:
  496  00001438  20010001	addi	r1,r0,#1
  497  0000143c          	L2_LF2:
  498  0000143c  08000004	j	L1_LF2
  499  00001440  54000000	nop; delay slot nop
  500  00001444          	L1_LF2:
  501  00001444  8fa20000	lw	r2,0(r29)
  502  00001448  8fa30004	lw	r3,4(r29)
  503  0000144c  8fa40008	lw	r4,8(r29)
  504  00001450  8fdffff8	lw	r31,-8(r30)
  505  00001454  001ee820	add	r29,r0,r30
  506  00001458  8fdefffc	lw	r30,-4(r30)
  507  0000145c  4be00000	jr	r31
  508  00001460  54000000	nop
  509  00001464          	.endproc _isspace
  510  00001464          	.align 2
  511  00001464          	.proc _isxdigit
  512  00001464          	.global _isxdigit
  513  00001464          	_isxdigit:
  514                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  515  00001464  afbefffc	sw	-4(r29),r30; push fp
  516  00001468  001df020	add	r30,r0,r29; fp = sp
  517  0000146c  afbffff8	sw	-8(r29),r31; push ret addr
  518  00001470  2fbd0018	subui	r29,r29,#24; alloc local storage
  519  00001474  afa20000	sw	0(r29),r2
  520  00001478  afa30004	sw	4(r29),r3
  521  0000147c  afa40008	sw	8(r29),r4
  522  00001480  83c20003	lb	r2,3(r30)
  523  00001484  20010000	addi	r1,r0,#0
  524  00001488  304300ff	andi	r3,r2,#0x00ff
  525  0000148c  6c64002f	sgtui	r4,r3,#47
  526  00001490  1080001c	beqz	r4,L7_LF2
  527  00001494  54000000	nop; delay slot nop
  528  00001498  304300ff	andi	r3,r2,#0x00ff
  529  0000149c  70640039	sleui	r4,r3,#57
  530  000014a0  1480005c	bnez	r4,L6_LF2
  531  000014a4  54000000	nop; delay slot nop
  532  000014a8  08000004	j	L7_LF2
  533  000014ac  54000000	nop; delay slot nop
  534  000014b0          	L7_LF2:
  535  000014b0  304300ff	andi	r3,r2,#0x00ff
  536  000014b4  6c640060	sgtui	r4,r3,#96
  537  000014b8  1080001c	beqz	r4,L8_LF2
  538  000014bc  54000000	nop; delay slot nop
  539  000014c0  304300ff	andi	r3,r2,#0x00ff
  540  000014c4  70640066	sleui	r4,r3,#102
  541  000014c8  14800034	bnez	r4,L6_LF2
  542  000014cc  54000000	nop; delay slot nop
  543  000014d0  08000004	j	L8_LF2
  544  000014d4  54000000	nop; delay slot nop
  545  000014d8          	L8_LF2:
  546  000014d8  304300ff	andi	r3,r2,#0x00ff
  547  000014dc  6c640040	sgtui	r4,r3,#64
  548  000014e0  10800020	beqz	r4,L5_LF2
  549  000014e4  54000000	nop; delay slot nop
  550  000014e8  304300ff	andi	r3,r2,#0x00ff
  551  000014ec  70640041	sleui	r4,r3,#65
  552  000014f0  1480000c	bnez	r4,L6_LF2
  553  000014f4  54000000	nop; delay slot nop
  554  000014f8  08000008	j	L5_LF2
  555  000014fc  54000000	nop; delay slot nop
  556  00001500          	L6_LF2:
  557  00001500  20010001	addi	r1,r0,#1
  558  00001504          	L5_LF2:
  559  00001504  08000004	j	L4_LF2
  560  00001508  54000000	nop; delay slot nop
  561  0000150c          	L4_LF2:
  562  0000150c  8fa20000	lw	r2,0(r29)
  563  00001510  8fa30004	lw	r3,4(r29)
  564  00001514  8fa40008	lw	r4,8(r29)
  565  00001518  8fdffff8	lw	r31,-8(r30)
  566  0000151c  001ee820	add	r29,r0,r30
  567  00001520  8fdefffc	lw	r30,-4(r30)
  568  00001524  4be00000	jr	r31
  569  00001528  54000000	nop
  570  0000152c          	.endproc _isxdigit
  571  0000152c          	.align 2
  572  0000152c          	.proc _dstrcpy
  573  0000152c          	.global _dstrcpy
  574  0000152c          	_dstrcpy:
  575                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  576  0000152c  afbefffc	sw	-4(r29),r30; push fp
  577  00001530  001df020	add	r30,r0,r29; fp = sp
  578  00001534  afbffff8	sw	-8(r29),r31; push ret addr
  579  00001538  2fbd0018	subui	r29,r29,#24; alloc local storage
  580  0000153c  afa20000	sw	0(r29),r2
  581  00001540  afa30004	sw	4(r29),r3
  582  00001544  8fc10000	lw	r1,(r30)
  583  00001548  afc1fff4	sw	-12(r30),r1
  584  0000154c          	L10_LF2:
  585  0000154c  8fc10000	lw	r1,(r30)
  586  00001550  20220001	addi	r2,r1,#1
  587  00001554  afc20000	sw	(r30),r2
  588  00001558  8fc20004	lw	r2,4(r30)
  589  0000155c  20430001	addi	r3,r2,#1
  590  00001560  afc30004	sw	4(r30),r3
  591  00001564  80420000	lb	r2,(r2)
  592  00001568  a0220000	sb	(r1),r2
  593  0000156c  a3c2fff3	sb	-13(r30),r2
  594  00001570          	L12_LF2:
  595  00001570  93c1fff3	lbu	r1,-13(r30)
  596  00001574  64220000	snei	r2,r1,#0
  597  00001578  1440000c	bnez	r2,L13_LF2
  598  0000157c  54000000	nop; delay slot nop
  599  00001580  0800000c	j	L11_LF2
  600  00001584  54000000	nop; delay slot nop
  601  00001588          	L13_LF2:
  602  00001588  0bffffc0	j	L10_LF2
  603  0000158c  54000000	nop; delay slot nop
  604  00001590          	L11_LF2:
  605  00001590  8fc1fff4	lw	r1,-12(r30)
  606  00001594  08000004	j	L9_LF2
  607  00001598  54000000	nop; delay slot nop
  608  0000159c          	L9_LF2:
  609  0000159c  8fa20000	lw	r2,0(r29)
  610  000015a0  8fa30004	lw	r3,4(r29)
  611  000015a4  8fdffff8	lw	r31,-8(r30)
  612  000015a8  001ee820	add	r29,r0,r30
  613  000015ac  8fdefffc	lw	r30,-4(r30)
  614  000015b0  4be00000	jr	r31
  615  000015b4  54000000	nop
  616  000015b8          	.endproc _dstrcpy
  617  000015b8          	.align 2
  618  000015b8          	.proc _dstrncpy
  619  000015b8          	.global _dstrncpy
  620  000015b8          	_dstrncpy:
  621                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  622  000015b8  afbefffc	sw	-4(r29),r30; push fp
  623  000015bc  001df020	add	r30,r0,r29; fp = sp
  624  000015c0  afbffff8	sw	-8(r29),r31; push ret addr
  625  000015c4  2fbd0018	subui	r29,r29,#24; alloc local storage
  626  000015c8  afa20000	sw	0(r29),r2
  627  000015cc  afa30004	sw	4(r29),r3
  628  000015d0  8fc10000	lw	r1,(r30)
  629  000015d4  afc1fff4	sw	-12(r30),r1
  630  000015d8          	L15_LF2:
  631  000015d8  8fc10008	lw	r1,8(r30)
  632  000015dc  2022ffff	addi	r2,r1,#-1
  633  000015e0  afc20008	sw	8(r30),r2
  634  000015e4  70210000	slei	r1,r1,#0
  635  000015e8  1020000c	beqz	r1,L18_LF2
  636  000015ec  54000000	nop; delay slot nop
  637  000015f0  08000048	j	L16_LF2
  638  000015f4  54000000	nop; delay slot nop
  639  000015f8          	L18_LF2:
  640  000015f8  8fc10000	lw	r1,(r30)
  641  000015fc  20220001	addi	r2,r1,#1
  642  00001600  afc20000	sw	(r30),r2
  643  00001604  8fc20004	lw	r2,4(r30)
  644  00001608  20430001	addi	r3,r2,#1
  645  0000160c  afc30004	sw	4(r30),r3
  646  00001610  80420000	lb	r2,(r2)
  647  00001614  a0220000	sb	(r1),r2
  648  00001618  a3c2fff3	sb	-13(r30),r2
  649  0000161c          	L17_LF2:
  650  0000161c  93c1fff3	lbu	r1,-13(r30)
  651  00001620  64220000	snei	r2,r1,#0
  652  00001624  1440000c	bnez	r2,L19_LF2
  653  00001628  54000000	nop; delay slot nop
  654  0000162c  0800000c	j	L16_LF2
  655  00001630  54000000	nop; delay slot nop
  656  00001634          	L19_LF2:
  657  00001634  0bffffa0	j	L15_LF2
  658  00001638  54000000	nop; delay slot nop
  659  0000163c          	L16_LF2:
  660  0000163c  8fc1fff4	lw	r1,-12(r30)
  661  00001640  08000004	j	L14_LF2
  662  00001644  54000000	nop; delay slot nop
  663  00001648          	L14_LF2:
  664  00001648  8fa20000	lw	r2,0(r29)
  665  0000164c  8fa30004	lw	r3,4(r29)
  666  00001650  8fdffff8	lw	r31,-8(r30)
  667  00001654  001ee820	add	r29,r0,r30
  668  00001658  8fdefffc	lw	r30,-4(r30)
  669  0000165c  4be00000	jr	r31
  670  00001660  54000000	nop
  671  00001664          	.endproc _dstrncpy
  672  00001664          	.align 2
  673  00001664          	.proc _dstrcat
  674  00001664          	.global _dstrcat
  675  00001664          	_dstrcat:
  676                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  677  00001664  afbefffc	sw	-4(r29),r30; push fp
  678  00001668  001df020	add	r30,r0,r29; fp = sp
  679  0000166c  afbffff8	sw	-8(r29),r31; push ret addr
  680  00001670  2fbd0018	subui	r29,r29,#24; alloc local storage
  681  00001674  afa20000	sw	0(r29),r2
  682  00001678  8fc10000	lw	r1,(r30)
  683  0000167c  afc1fff4	sw	-12(r30),r1
  684  00001680          	L21_LF2:
  685  00001680  8fc10000	lw	r1,(r30)
  686  00001684  90220000	lbu	r2,(r1)
  687  00001688  64410000	snei	r1,r2,#0
  688  0000168c  1420000c	bnez	r1,L23_LF2
  689  00001690  54000000	nop; delay slot nop
  690  00001694  0800001c	j	L22_LF2
  691  00001698  54000000	nop; delay slot nop
  692  0000169c          	L23_LF2:
  693  0000169c  8fc20000	lw	r2,(r30)
  694  000016a0  20410001	addi	r1,r2,#1
  695  000016a4  00011020	add	r2,r0,r1
  696  000016a8  afc20000	sw	(r30),r2
  697  000016ac  0bffffd0	j	L21_LF2
  698  000016b0  54000000	nop; delay slot nop
  699  000016b4          	L22_LF2:
  700  000016b4  23bdfff8	addi	r29,r29,#-8
  701  000016b8  001d0820	add	r1,r0,r29
  702  000016bc  8fc20000	lw	r2,(r30)
  703  000016c0  ac220000	sw	(r1),r2
  704  000016c4  8fc20004	lw	r2,4(r30)
  705  000016c8  ac220004	sw	4(r1),r2
  706  000016cc  0ffffe5c	jal	_dstrcpy
  707  000016d0  54000000	nop; delay slot nop
  708  000016d4  23bd0008	addi	r29,r29,#8
  709  000016d8  8fc1fff4	lw	r1,-12(r30)
  710  000016dc  08000004	j	L20_LF2
  711  000016e0  54000000	nop; delay slot nop
  712  000016e4          	L20_LF2:
  713  000016e4  8fa20000	lw	r2,0(r29)
  714  000016e8  8fdffff8	lw	r31,-8(r30)
  715  000016ec  001ee820	add	r29,r0,r30
  716  000016f0  8fdefffc	lw	r30,-4(r30)
  717  000016f4  4be00000	jr	r31
  718  000016f8  54000000	nop
  719  000016fc          	.endproc _dstrcat
  720  000016fc          	.align 2
  721  000016fc          	.proc _dstrncmp
  722  000016fc          	.global _dstrncmp
  723  000016fc          	_dstrncmp:
  724                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  725  000016fc  afbefffc	sw	-4(r29),r30; push fp
  726  00001700  001df020	add	r30,r0,r29; fp = sp
  727  00001704  afbffff8	sw	-8(r29),r31; push ret addr
  728  00001708  2fbd0018	subui	r29,r29,#24; alloc local storage
  729  0000170c  afa20000	sw	0(r29),r2
  730  00001710  afa30004	sw	4(r29),r3
  731  00001714  54000000	nop
  732  00001718  20010000	addi	r1,r0,#0
  733  0000171c  afc1fff4	sw	-12(r30),r1
  734  00001720          	L25_LF2:
  735  00001720  8fc1fff4	lw	r1,-12(r30)
  736  00001724  8fc20008	lw	r2,8(r30)
  737  00001728  0022082a	slt	r1,r1,r2
  738  0000172c  1420000c	bnez	r1,L28_LF2
  739  00001730  54000000	nop; delay slot nop
  740  00001734  08000088	j	L26_LF2
  741  00001738  54000000	nop; delay slot nop
  742  0000173c          	L28_LF2:
  743  0000173c  8fc10004	lw	r1,4(r30)
  744  00001740  90220000	lbu	r2,(r1)
  745  00001744  64410000	snei	r1,r2,#0
  746  00001748  14200018	bnez	r1,L29_LF2
  747  0000174c  54000000	nop; delay slot nop
  748  00001750  20010000	addi	r1,r0,#0
  749  00001754  080000d8	j	L24_LF2
  750  00001758  54000000	nop; delay slot nop
  751  0000175c  08000028	j	L30_LF2
  752  00001760  54000000	nop; delay slot nop
  753  00001764          	L29_LF2:
  754  00001764  8fc10000	lw	r1,(r30)
  755  00001768  8fc20004	lw	r2,4(r30)
  756  0000176c  90210000	lbu	r1,(r1)
  757  00001770  90420000	lbu	r2,(r2)
  758  00001774  00220829	sne	r1,r1,r2
  759  00001778  1020000c	beqz	r1,L30_LF2
  760  0000177c  54000000	nop; delay slot nop
  761  00001780  0800003c	j	L26_LF2
  762  00001784  54000000	nop; delay slot nop
  763  00001788          	L31_LF2:
  764  00001788          	L30_LF2:
  765  00001788  8fc20000	lw	r2,(r30)
  766  0000178c  20410001	addi	r1,r2,#1
  767  00001790  00011020	add	r2,r0,r1
  768  00001794  afc20000	sw	(r30),r2
  769  00001798  8fc20004	lw	r2,4(r30)
  770  0000179c  20410001	addi	r1,r2,#1
  771  000017a0  00011020	add	r2,r0,r1
  772  000017a4  afc20004	sw	4(r30),r2
  773  000017a8          	L27_LF2:
  774  000017a8  8fc2fff4	lw	r2,-12(r30)
  775  000017ac  20410001	addi	r1,r2,#1
  776  000017b0  00011020	add	r2,r0,r1
  777  000017b4  afc2fff4	sw	-12(r30),r2
  778  000017b8  0bffff64	j	L25_LF2
  779  000017bc  54000000	nop; delay slot nop
  780  000017c0          	L26_LF2:
  781  000017c0  8fc1fff4	lw	r1,-12(r30)
  782  000017c4  8fc20008	lw	r2,8(r30)
  783  000017c8  00220828	seq	r1,r1,r2
  784  000017cc  10200018	beqz	r1,L32_LF2
  785  000017d0  54000000	nop; delay slot nop
  786  000017d4  20010000	addi	r1,r0,#0
  787  000017d8  08000054	j	L24_LF2
  788  000017dc  54000000	nop; delay slot nop
  789  000017e0  0800004c	j	L33_LF2
  790  000017e4  54000000	nop; delay slot nop
  791  000017e8          	L32_LF2:
  792  000017e8  8fc20000	lw	r2,(r30)
  793  000017ec  90410000	lbu	r1,(r2)
  794  000017f0  8fc20004	lw	r2,4(r30)
  795  000017f4  90430000	lbu	r3,(r2)
  796  000017f8  00230822	sub	r1,r1,r3
  797  000017fc  74220000	sgei	r2,r1,#0
  798  00001800  10400020	beqz	r2,L34_LF2
  799  00001804  54000000	nop; delay slot nop
  800  00001808  8fc10000	lw	r1,(r30)
  801  0000180c  8fc20004	lw	r2,4(r30)
  802  00001810  90210000	lbu	r1,(r1)
  803  00001814  90420000	lbu	r2,(r2)
  804  00001818  00220829	sne	r1,r1,r2
  805  0000181c  08000008	j	L35_LF2
  806  00001820  54000000	nop; delay slot nop
  807  00001824          	L34_LF2:
  808  00001824  2001ffff	addi	r1,r0,#-1
  809  00001828          	L35_LF2:
  810  00001828  08000004	j	L24_LF2
  811  0000182c  54000000	nop; delay slot nop
  812  00001830          	L33_LF2:
  813  00001830          	L24_LF2:
  814  00001830  8fa20000	lw	r2,0(r29)
  815  00001834  8fa30004	lw	r3,4(r29)
  816  00001838  8fdffff8	lw	r31,-8(r30)
  817  0000183c  001ee820	add	r29,r0,r30
  818  00001840  8fdefffc	lw	r30,-4(r30)
  819  00001844  4be00000	jr	r31
  820  00001848  54000000	nop
  821  0000184c          	.endproc _dstrncmp
  822  0000184c          	.align 2
  823  0000184c          	.proc _dstrlen
  824  0000184c          	.global _dstrlen
  825  0000184c          	_dstrlen:
  826                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  827  0000184c  afbefffc	sw	-4(r29),r30; push fp
  828  00001850  001df020	add	r30,r0,r29; fp = sp
  829  00001854  afbffff8	sw	-8(r29),r31; push ret addr
  830  00001858  2fbd0018	subui	r29,r29,#24; alloc local storage
  831  0000185c  afa20000	sw	0(r29),r2
  832  00001860  20010000	addi	r1,r0,#0
  833  00001864  afc1fff4	sw	-12(r30),r1
  834  00001868          	L37_LF2:
  835  00001868  8fc10000	lw	r1,(r30)
  836  0000186c  20220001	addi	r2,r1,#1
  837  00001870  afc20000	sw	(r30),r2
  838  00001874  90210000	lbu	r1,(r1)
  839  00001878  64220000	snei	r2,r1,#0
  840  0000187c  1440000c	bnez	r2,L39_LF2
  841  00001880  54000000	nop; delay slot nop
  842  00001884  0800001c	j	L38_LF2
  843  00001888  54000000	nop; delay slot nop
  844  0000188c          	L39_LF2:
  845  0000188c  8fc2fff4	lw	r2,-12(r30)
  846  00001890  20410001	addi	r1,r2,#1
  847  00001894  00011020	add	r2,r0,r1
  848  00001898  afc2fff4	sw	-12(r30),r2
  849  0000189c  0bffffc8	j	L37_LF2
  850  000018a0  54000000	nop; delay slot nop
  851  000018a4          	L38_LF2:
  852  000018a4  8fc1fff4	lw	r1,-12(r30)
  853  000018a8  08000004	j	L36_LF2
  854  000018ac  54000000	nop; delay slot nop
  855  000018b0          	L36_LF2:
  856  000018b0  8fa20000	lw	r2,0(r29)
  857  000018b4  8fdffff8	lw	r31,-8(r30)
  858  000018b8  001ee820	add	r29,r0,r30
  859  000018bc  8fdefffc	lw	r30,-4(r30)
  860  000018c0  4be00000	jr	r31
  861  000018c4  54000000	nop
  862  000018c8          	.endproc _dstrlen
  863  000018c8          	.align 2
  864  000018c8          	.proc _dstrstr
  865  000018c8          	.global _dstrstr
  866  000018c8          	_dstrstr:
  867                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  868  000018c8  afbefffc	sw	-4(r29),r30; push fp
  869  000018cc  001df020	add	r30,r0,r29; fp = sp
  870  000018d0  afbffff8	sw	-8(r29),r31; push ret addr
  871  000018d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  872  000018d8  afa20000	sw	0(r29),r2
  873  000018dc  23bdfff8	addi	r29,r29,#-8
  874  000018e0  001d0820	add	r1,r0,r29
  875  000018e4  8fc20004	lw	r2,4(r30)
  876  000018e8  ac220000	sw	(r1),r2
  877  000018ec  0fffff5c	jal	_dstrlen
  878  000018f0  54000000	nop; delay slot nop
  879  000018f4  23bd0008	addi	r29,r29,#8
  880  000018f8  afc1fff4	sw	-12(r30),r1
  881  000018fc          	L41_LF2:
  882  000018fc  8fc10000	lw	r1,(r30)
  883  00001900  90220000	lbu	r2,(r1)
  884  00001904  64410000	snei	r1,r2,#0
  885  00001908  1420000c	bnez	r1,L43_LF2
  886  0000190c  54000000	nop; delay slot nop
  887  00001910  08000060	j	L42_LF2
  888  00001914  54000000	nop; delay slot nop
  889  00001918          	L43_LF2:
  890  00001918  23bdfff0	addi	r29,r29,#-16
  891  0000191c  001d0820	add	r1,r0,r29
  892  00001920  8fc20000	lw	r2,(r30)
  893  00001924  ac220000	sw	(r1),r2
  894  00001928  8fc20004	lw	r2,4(r30)
  895  0000192c  ac220004	sw	4(r1),r2
  896  00001930  8fc2fff4	lw	r2,-12(r30)
  897  00001934  ac220008	sw	8(r1),r2
  898  00001938  0ffffdc0	jal	_dstrncmp
  899  0000193c  54000000	nop; delay slot nop
  900  00001940  23bd0010	addi	r29,r29,#16
  901  00001944  64220000	snei	r2,r1,#0
  902  00001948  14400010	bnez	r2,L44_LF2
  903  0000194c  54000000	nop; delay slot nop
  904  00001950  8fc10000	lw	r1,(r30)
  905  00001954  08000028	j	L40_LF2
  906  00001958  54000000	nop; delay slot nop
  907  0000195c          	L44_LF2:
  908  0000195c  8fc20000	lw	r2,(r30)
  909  00001960  20410001	addi	r1,r2,#1
  910  00001964  00011020	add	r2,r0,r1
  911  00001968  afc20000	sw	(r30),r2
  912  0000196c  0bffff8c	j	L41_LF2
  913  00001970  54000000	nop; delay slot nop
  914  00001974          	L42_LF2:
  915  00001974  20010000	addi	r1,r0,#0
  916  00001978  08000004	j	L40_LF2
  917  0000197c  54000000	nop; delay slot nop
  918  00001980          	L40_LF2:
  919  00001980  8fa20000	lw	r2,0(r29)
  920  00001984  8fdffff8	lw	r31,-8(r30)
  921  00001988  001ee820	add	r29,r0,r30
  922  0000198c  8fdefffc	lw	r30,-4(r30)
  923  00001990  4be00000	jr	r31
  924  00001994  54000000	nop
  925  00001998          	.endproc _dstrstr
  926  00001998          	.align 2
  927  00001998          	.proc _dmindex
  928  00001998          	.global _dmindex
  929  00001998          	_dmindex:
  930                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  931  00001998  afbefffc	sw	-4(r29),r30; push fp
  932  0000199c  001df020	add	r30,r0,r29; fp = sp
  933  000019a0  afbffff8	sw	-8(r29),r31; push ret addr
  934  000019a4  2fbd0018	subui	r29,r29,#24; alloc local storage
  935  000019a8  afa20000	sw	0(r29),r2
  936  000019ac  54000000	nop
  937  000019b0          	L46_LF2:
  938  000019b0  8fc10000	lw	r1,(r30)
  939  000019b4  90220000	lbu	r2,(r1)
  940  000019b8  64410000	snei	r1,r2,#0
  941  000019bc  1420000c	bnez	r1,L48_LF2
  942  000019c0  54000000	nop; delay slot nop
  943  000019c4  08000070	j	L47_LF2
  944  000019c8  54000000	nop; delay slot nop
  945  000019cc          	L48_LF2:
  946  000019cc  8fc10004	lw	r1,4(r30)
  947  000019d0  afc1fff4	sw	-12(r30),r1
  948  000019d4          	L49_LF2:
  949  000019d4  8fc1fff4	lw	r1,-12(r30)
  950  000019d8  90220000	lbu	r2,(r1)
  951  000019dc  64410000	snei	r1,r2,#0
  952  000019e0  1420000c	bnez	r1,L52_LF2
  953  000019e4  54000000	nop; delay slot nop
  954  000019e8  08000044	j	L50_LF2
  955  000019ec  54000000	nop; delay slot nop
  956  000019f0          	L52_LF2:
  957  000019f0  8fc10000	lw	r1,(r30)
  958  000019f4  8fc2fff4	lw	r2,-12(r30)
  959  000019f8  90210000	lbu	r1,(r1)
  960  000019fc  90420000	lbu	r2,(r2)
  961  00001a00  00220828	seq	r1,r1,r2
  962  00001a04  10200010	beqz	r1,L51_LF2
  963  00001a08  54000000	nop; delay slot nop
  964  00001a0c  8fc10000	lw	r1,(r30)
  965  00001a10  08000030	j	L45_LF2
  966  00001a14  54000000	nop; delay slot nop
  967  00001a18          	L53_LF2:
  968  00001a18          	L51_LF2:
  969  00001a18  8fc2fff4	lw	r2,-12(r30)
  970  00001a1c  20410001	addi	r1,r2,#1
  971  00001a20  00011020	add	r2,r0,r1
  972  00001a24  afc2fff4	sw	-12(r30),r2
  973  00001a28  0bffffa8	j	L49_LF2
  974  00001a2c  54000000	nop; delay slot nop
  975  00001a30          	L50_LF2:
  976  00001a30  0bffff7c	j	L46_LF2
  977  00001a34  54000000	nop; delay slot nop
  978  00001a38          	L47_LF2:
  979  00001a38  20010000	addi	r1,r0,#0
  980  00001a3c  08000004	j	L45_LF2
  981  00001a40  54000000	nop; delay slot nop
  982  00001a44          	L45_LF2:
  983  00001a44  8fa20000	lw	r2,0(r29)
  984  00001a48  8fdffff8	lw	r31,-8(r30)
  985  00001a4c  001ee820	add	r29,r0,r30
  986  00001a50  8fdefffc	lw	r30,-4(r30)
  987  00001a54  4be00000	jr	r31
  988  00001a58  54000000	nop
  989  00001a5c          	.endproc _dmindex
  990  00001a5c          	.align 2
  991  00001a5c          	.proc _dindex
  992  00001a5c          	.global _dindex
  993  00001a5c          	_dindex:
  994                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  995  00001a5c  afbefffc	sw	-4(r29),r30; push fp
  996  00001a60  001df020	add	r30,r0,r29; fp = sp
  997  00001a64  afbffff8	sw	-8(r29),r31; push ret addr
  998  00001a68  2fbd0010	subui	r29,r29,#16; alloc local storage
  999  00001a6c  afa20000	sw	0(r29),r2
 1000  00001a70  54000000	nop
 1001  00001a74          	L55_LF2:
 1002  00001a74  8fc10000	lw	r1,(r30)
 1003  00001a78  90220000	lbu	r2,(r1)
 1004  00001a7c  64410000	snei	r1,r2,#0
 1005  00001a80  1420000c	bnez	r1,L57_LF2
 1006  00001a84  54000000	nop; delay slot nop
 1007  00001a88  08000040	j	L56_LF2
 1008  00001a8c  54000000	nop; delay slot nop
 1009  00001a90          	L57_LF2:
 1010  00001a90  8fc10000	lw	r1,(r30)
 1011  00001a94  90220000	lbu	r2,(r1)
 1012  00001a98  8fc10004	lw	r1,4(r30)
 1013  00001a9c  00411028	seq	r2,r2,r1
 1014  00001aa0  10400010	beqz	r2,L58_LF2
 1015  00001aa4  54000000	nop; delay slot nop
 1016  00001aa8  8fc10000	lw	r1,(r30)
 1017  00001aac  08000028	j	L54_LF2
 1018  00001ab0  54000000	nop; delay slot nop
 1019  00001ab4          	L58_LF2:
 1020  00001ab4  8fc20000	lw	r2,(r30)
 1021  00001ab8  20410001	addi	r1,r2,#1
 1022  00001abc  00011020	add	r2,r0,r1
 1023  00001ac0  afc20000	sw	(r30),r2
 1024  00001ac4  0bffffac	j	L55_LF2
 1025  00001ac8  54000000	nop; delay slot nop
 1026  00001acc          	L56_LF2:
 1027  00001acc  20010000	addi	r1,r0,#0
 1028  00001ad0  08000004	j	L54_LF2
 1029  00001ad4  54000000	nop; delay slot nop
 1030  00001ad8          	L54_LF2:
 1031  00001ad8  8fa20000	lw	r2,0(r29)
 1032  00001adc  8fdffff8	lw	r31,-8(r30)
 1033  00001ae0  001ee820	add	r29,r0,r30
 1034  00001ae4  8fdefffc	lw	r30,-4(r30)
 1035  00001ae8  4be00000	jr	r31
 1036  00001aec  54000000	nop
 1037  00001af0          	.endproc _dindex
 1038  00001af0          	.align 2
 1039  00001af0          	.proc _ditoa
 1040  00001af0          	.global _ditoa
 1041  00001af0          	_ditoa:
 1042                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1043  00001af0  afbefffc	sw	-4(r29),r30; push fp
 1044  00001af4  001df020	add	r30,r0,r29; fp = sp
 1045  00001af8  afbffff8	sw	-8(r29),r31; push ret addr
 1046  00001afc  2fbd0018	subui	r29,r29,#24; alloc local storage
 1047  00001b00  afa20000	sw	0(r29),r2
 1048  00001b04  afa30004	sw	4(r29),r3
 1049  00001b08  8fc10000	lw	r1,(r30)
 1050  00001b0c  68220000	slti	r2,r1,#0
 1051  00001b10  1040002c	beqz	r2,L60_LF2
 1052  00001b14  54000000	nop; delay slot nop
 1053  00001b18  8fc10004	lw	r1,4(r30)
 1054  00001b1c  20220001	addi	r2,r1,#1
 1055  00001b20  afc20004	sw	4(r30),r2
 1056  00001b24  2002002d	addi	r2,r0,(#0x2d)&0xff
 1057  00001b28  a0220000	sb	(r1),r2
 1058  00001b2c  8fc10000	lw	r1,(r30)
 1059  00001b30  00011022	sub	r2,r0,r1
 1060  00001b34  afc20000	sw	(r30),r2
 1061  00001b38  08000118	j	L61_LF2
 1062  00001b3c  54000000	nop; delay slot nop
 1063  00001b40          	L60_LF2:
 1064  00001b40  8fc10000	lw	r1,(r30)
 1065  00001b44  64220000	snei	r2,r1,#0
 1066  00001b48  14400020	bnez	r2,L62_LF2
 1067  00001b4c  54000000	nop; delay slot nop
 1068  00001b50  8fc10004	lw	r1,4(r30)
 1069  00001b54  20220001	addi	r2,r1,#1
 1070  00001b58  afc20004	sw	4(r30),r2
 1071  00001b5c  20020030	addi	r2,r0,(#0x30)&0xff
 1072  00001b60  a0220000	sb	(r1),r2
 1073  00001b64  080000ec	j	L61_LF2
 1074  00001b68  54000000	nop; delay slot nop
 1075  00001b6c          	L62_LF2:
 1076  00001b6c  20010001	addi	r1,r0,#1
 1077  00001b70  afc1fff4	sw	-12(r30),r1
 1078  00001b74          	L64_LF2:
 1079  00001b74  8fc1fff4	lw	r1,-12(r30)
 1080  00001b78  8fc20000	lw	r2,(r30)
 1081  00001b7c  0022082c	sle	r1,r1,r2
 1082  00001b80  1420000c	bnez	r1,L66_LF2
 1083  00001b84  54000000	nop; delay slot nop
 1084  00001b88  08000024	j	L65_LF2
 1085  00001b8c  54000000	nop; delay slot nop
 1086  00001b90          	L67_LF2:
 1087  00001b90          	L66_LF2:
 1088  00001b90  8fc1fff4	lw	r1,-12(r30)
 1089  00001b94  00011820	add	r3,r0,r1
 1090  00001b98  50620002	slli	r2,r3,#0x2
 1091  00001b9c  00411020	add	r2,r2,r1
 1092  00001ba0  50410001	slli	r1,r2,#0x1
 1093  00001ba4  afc1fff4	sw	-12(r30),r1
 1094  00001ba8  0bffffc8	j	L64_LF2
 1095  00001bac  54000000	nop; delay slot nop
 1096  00001bb0          	L65_LF2:
 1097  00001bb0  54000000	nop
 1098  00001bb4          	L68_LF2:
 1099  00001bb4  8fc1fff4	lw	r1,-12(r30)
 1100  00001bb8  2002000a	addi	r2,r0,#10
 1101  00001bbc  00200035	movi2fp	f0,r1
 1102  00001bc0  00400835	movi2fp	f1,r2
 1103  00001bc4  0401000f	div	f0,f0,f1
 1104  00001bc8  00000834	movfp2i	r1,f0
 1105  00001bcc  afc1fff4	sw	-12(r30),r1
 1106  00001bd0  8fc10004	lw	r1,4(r30)
 1107  00001bd4  20220001	addi	r2,r1,#1
 1108  00001bd8  afc20004	sw	4(r30),r2
 1109  00001bdc  8fc20000	lw	r2,(r30)
 1110  00001be0  8fc3fff4	lw	r3,-12(r30)
 1111  00001be4  00400035	movi2fp	f0,r2
 1112  00001be8  00600835	movi2fp	f1,r3
 1113  00001bec  0401000f	div	f0,f0,f1
 1114  00001bf0  00001034	movfp2i	r2,f0
 1115  00001bf4  00021820	add	r3,r0,r2
 1116  00001bf8  20620030	addi	r2,r3,#48
 1117  00001bfc  a0220000	sb	(r1),r2
 1118  00001c00  8fc10000	lw	r1,(r30)
 1119  00001c04  8fc3fff4	lw	r3,-12(r30)
 1120  00001c08  00200035	movi2fp	f0,r1
 1121  00001c0c  00600835	movi2fp	f1,r3
 1122  00001c10  0401000f	div	f0,f0,f1
 1123  00001c14  00001034	movfp2i	r2,f0
 1124  00001c18  8fc3fff4	lw	r3,-12(r30)
 1125  00001c1c  00400035	movi2fp	f0,r2
 1126  00001c20  00600835	movi2fp	f1,r3
 1127  00001c24  0401000e	mult	f0,f0,f1
 1128  00001c28  00001034	movfp2i	r2,f0
 1129  00001c2c  00220822	sub	r1,r1,r2
 1130  00001c30  afc10000	sw	(r30),r1
 1131  00001c34          	L70_LF2:
 1132  00001c34  8fc1fff4	lw	r1,-12(r30)
 1133  00001c38  6c220001	sgti	r2,r1,#1
 1134  00001c3c  1440000c	bnez	r2,L71_LF2
 1135  00001c40  54000000	nop; delay slot nop
 1136  00001c44  0800000c	j	L61_LF2
 1137  00001c48  54000000	nop; delay slot nop
 1138  00001c4c          	L71_LF2:
 1139  00001c4c  0bffff64	j	L68_LF2
 1140  00001c50  54000000	nop; delay slot nop
 1141  00001c54          	L69_LF2:
 1142  00001c54          	L63_LF2:
 1143  00001c54          	L61_LF2:
 1144  00001c54  8fc10004	lw	r1,4(r30)
 1145  00001c58  20020000	addi	r2,r0,(#0x0)&0xff
 1146  00001c5c  a0220000	sb	(r1),r2
 1147  00001c60          	L59_LF2:
 1148  00001c60  8fa20000	lw	r2,0(r29)
 1149  00001c64  8fa30004	lw	r3,4(r29)
 1150  00001c68  8fdffff8	lw	r31,-8(r30)
 1151  00001c6c  001ee820	add	r29,r0,r30
 1152  00001c70  8fdefffc	lw	r30,-4(r30)
 1153  00001c74  4be00000	jr	r31
 1154  00001c78  54000000	nop
 1155  00001c7c          	.endproc _ditoa
 1156  00001c7c          	.align 2
 1157  00001c7c          	.proc _dstrtol
 1158  00001c7c          	.global _dstrtol
 1159  00001c7c          	_dstrtol:
 1160                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1161  00001c7c  afbefffc	sw	-4(r29),r30; push fp
 1162  00001c80  001df020	add	r30,r0,r29; fp = sp
 1163  00001c84  afbffff8	sw	-8(r29),r31; push ret addr
 1164  00001c88  2fbd0020	subui	r29,r29,#32; alloc local storage
 1165  00001c8c  afa20000	sw	0(r29),r2
 1166  00001c90  20010000	addi	r1,r0,#0
 1167  00001c94  afc1fff4	sw	-12(r30),r1
 1168  00001c98          	L73_LF2:
 1169  00001c98  8fc10000	lw	r1,(r30)
 1170  00001c9c  90220000	lbu	r2,(r1)
 1171  00001ca0  60410020	seqi	r1,r2,#32
 1172  00001ca4  14200034	bnez	r1,L75_LF2
 1173  00001ca8  54000000	nop; delay slot nop
 1174  00001cac  8fc10000	lw	r1,(r30)
 1175  00001cb0  90220000	lbu	r2,(r1)
 1176  00001cb4  60410009	seqi	r1,r2,#9
 1177  00001cb8  14200020	bnez	r1,L75_LF2
 1178  00001cbc  54000000	nop; delay slot nop
 1179  00001cc0  8fc10000	lw	r1,(r30)
 1180  00001cc4  90220000	lbu	r2,(r1)
 1181  00001cc8  6041000a	seqi	r1,r2,#10
 1182  00001ccc  1420000c	bnez	r1,L75_LF2
 1183  00001cd0  54000000	nop; delay slot nop
 1184  00001cd4  0800001c	j	L74_LF2
 1185  00001cd8  54000000	nop; delay slot nop
 1186  00001cdc          	L75_LF2:
 1187  00001cdc  8fc20000	lw	r2,(r30)
 1188  00001ce0  20410001	addi	r1,r2,#1
 1189  00001ce4  00011020	add	r2,r0,r1
 1190  00001ce8  afc20000	sw	(r30),r2
 1191  00001cec  0bffffa8	j	L73_LF2
 1192  00001cf0  54000000	nop; delay slot nop
 1193  00001cf4          	L74_LF2:
 1194  00001cf4  8fc10004	lw	r1,4(r30)
 1195  00001cf8  64220000	snei	r2,r1,#0
 1196  00001cfc  10400010	beqz	r2,L76_LF2
 1197  00001d00  54000000	nop; delay slot nop
 1198  00001d04  8fc10004	lw	r1,4(r30)
 1199  00001d08  8fc20000	lw	r2,(r30)
 1200  00001d0c  ac220000	sw	(r1),r2
 1201  00001d10          	L76_LF2:
 1202  00001d10  8fc10000	lw	r1,(r30)
 1203  00001d14  90220000	lbu	r2,(r1)
 1204  00001d18  64410000	snei	r1,r2,#0
 1205  00001d1c  14200010	bnez	r1,L77_LF2
 1206  00001d20  54000000	nop; delay slot nop
 1207  00001d24  8fc1fff4	lw	r1,-12(r30)
 1208  00001d28  08000294	j	L72_LF2
 1209  00001d2c  54000000	nop; delay slot nop
 1210  00001d30          	L77_LF2:
 1211  00001d30  8fc10000	lw	r1,(r30)
 1212  00001d34  90220000	lbu	r2,(r1)
 1213  00001d38  6041002d	seqi	r1,r2,#45
 1214  00001d3c  10200024	beqz	r1,L78_LF2
 1215  00001d40  54000000	nop; delay slot nop
 1216  00001d44  2001ffff	addi	r1,r0,#-1
 1217  00001d48  afc1ffec	sw	-20(r30),r1
 1218  00001d4c  8fc20000	lw	r2,(r30)
 1219  00001d50  20410001	addi	r1,r2,#1
 1220  00001d54  00011020	add	r2,r0,r1
 1221  00001d58  afc20000	sw	(r30),r2
 1222  00001d5c  0800000c	j	L79_LF2
 1223  00001d60  54000000	nop; delay slot nop
 1224  00001d64          	L78_LF2:
 1225  00001d64  20010001	addi	r1,r0,#1
 1226  00001d68  afc1ffec	sw	-20(r30),r1
 1227  00001d6c          	L79_LF2:
 1228  00001d6c  8fc10008	lw	r1,8(r30)
 1229  00001d70  64220000	snei	r2,r1,#0
 1230  00001d74  14400090	bnez	r2,L80_LF2
 1231  00001d78  54000000	nop; delay slot nop
 1232  00001d7c  8fc10000	lw	r1,(r30)
 1233  00001d80  90220000	lbu	r2,(r1)
 1234  00001d84  60410030	seqi	r1,r2,#48
 1235  00001d88  10200074	beqz	r1,L81_LF2
 1236  00001d8c  54000000	nop; delay slot nop
 1237  00001d90  8fc20000	lw	r2,(r30)
 1238  00001d94  20410001	addi	r1,r2,#1
 1239  00001d98  00011020	add	r2,r0,r1
 1240  00001d9c  afc20000	sw	(r30),r2
 1241  00001da0  8fc10000	lw	r1,(r30)
 1242  00001da4  90220000	lbu	r2,(r1)
 1243  00001da8  60410078	seqi	r1,r2,#120
 1244  00001dac  14200020	bnez	r1,L83_LF2
 1245  00001db0  54000000	nop; delay slot nop
 1246  00001db4  8fc10000	lw	r1,(r30)
 1247  00001db8  90220000	lbu	r2,(r1)
 1248  00001dbc  60410058	seqi	r1,r2,#88
 1249  00001dc0  1420000c	bnez	r1,L83_LF2
 1250  00001dc4  54000000	nop; delay slot nop
 1251  00001dc8  08000024	j	L82_LF2
 1252  00001dcc  54000000	nop; delay slot nop
 1253  00001dd0          	L83_LF2:
 1254  00001dd0  20010010	addi	r1,r0,#16
 1255  00001dd4  afc10008	sw	8(r30),r1
 1256  00001dd8  8fc20000	lw	r2,(r30)
 1257  00001ddc  20410001	addi	r1,r2,#1
 1258  00001de0  00011020	add	r2,r0,r1
 1259  00001de4  afc20000	sw	(r30),r2
 1260  00001de8  0800000c	j	L84_LF2
 1261  00001dec  54000000	nop; delay slot nop
 1262  00001df0          	L82_LF2:
 1263  00001df0  20010008	addi	r1,r0,#8
 1264  00001df4  afc10008	sw	8(r30),r1
 1265  00001df8          	L84_LF2:
 1266  00001df8  0800000c	j	L80_LF2
 1267  00001dfc  54000000	nop; delay slot nop
 1268  00001e00          	L81_LF2:
 1269  00001e00  2001000a	addi	r1,r0,#10
 1270  00001e04  afc10008	sw	8(r30),r1
 1271  00001e08          	L85_LF2:
 1272  00001e08          	L80_LF2:
 1273  00001e08  8fc10008	lw	r1,8(r30)
 1274  00001e0c  70220000	slei	r2,r1,#0
 1275  00001e10  1440001c	bnez	r2,L87_LF2
 1276  00001e14  54000000	nop; delay slot nop
 1277  00001e18  8fc10008	lw	r1,8(r30)
 1278  00001e1c  6c220010	sgti	r2,r1,#16
 1279  00001e20  1440000c	bnez	r2,L87_LF2
 1280  00001e24  54000000	nop; delay slot nop
 1281  00001e28  08000010	j	L86_LF2
 1282  00001e2c  54000000	nop; delay slot nop
 1283  00001e30          	L87_LF2:
 1284  00001e30  8fc1fff4	lw	r1,-12(r30)
 1285  00001e34  08000188	j	L72_LF2
 1286  00001e38  54000000	nop; delay slot nop
 1287  00001e3c          	L86_LF2:
 1288  00001e3c  54000000	nop
 1289  00001e40          	L88_LF2:
 1290  00001e40  8fc10000	lw	r1,(r30)
 1291  00001e44  90220000	lbu	r2,(r1)
 1292  00001e48  6c41002f	sgtui	r1,r2,#47
 1293  00001e4c  10200030	beqz	r1,L91_LF2
 1294  00001e50  54000000	nop; delay slot nop
 1295  00001e54  8fc10000	lw	r1,(r30)
 1296  00001e58  90220000	lbu	r2,(r1)
 1297  00001e5c  70410039	sleui	r1,r2,#57
 1298  00001e60  1020001c	beqz	r1,L91_LF2
 1299  00001e64  54000000	nop; delay slot nop
 1300  00001e68  8fc10000	lw	r1,(r30)
 1301  00001e6c  90220000	lbu	r2,(r1)
 1302  00001e70  2041ffd0	addi	r1,r2,#-48
 1303  00001e74  afc1fff0	sw	-16(r30),r1
 1304  00001e78  0800008c	j	L92_LF2
 1305  00001e7c  54000000	nop; delay slot nop
 1306  00001e80          	L91_LF2:
 1307  00001e80  8fc10000	lw	r1,(r30)
 1308  00001e84  90220000	lbu	r2,(r1)
 1309  00001e88  6c410060	sgtui	r1,r2,#96
 1310  00001e8c  10200030	beqz	r1,L93_LF2
 1311  00001e90  54000000	nop; delay slot nop
 1312  00001e94  8fc10000	lw	r1,(r30)
 1313  00001e98  90220000	lbu	r2,(r1)
 1314  00001e9c  7041007a	sleui	r1,r2,#122
 1315  00001ea0  1020001c	beqz	r1,L93_LF2
 1316  00001ea4  54000000	nop; delay slot nop
 1317  00001ea8  8fc10000	lw	r1,(r30)
 1318  00001eac  90220000	lbu	r2,(r1)
 1319  00001eb0  2041ffa9	addi	r1,r2,#-87
 1320  00001eb4  afc1fff0	sw	-16(r30),r1
 1321  00001eb8  0800004c	j	L92_LF2
 1322  00001ebc  54000000	nop; delay slot nop
 1323  00001ec0          	L93_LF2:
 1324  00001ec0  8fc10000	lw	r1,(r30)
 1325  00001ec4  90220000	lbu	r2,(r1)
 1326  00001ec8  6c410040	sgtui	r1,r2,#64
 1327  00001ecc  10200030	beqz	r1,L95_LF2
 1328  00001ed0  54000000	nop; delay slot nop
 1329  00001ed4  8fc10000	lw	r1,(r30)
 1330  00001ed8  90220000	lbu	r2,(r1)
 1331  00001edc  7041005a	sleui	r1,r2,#90
 1332  00001ee0  1020001c	beqz	r1,L95_LF2
 1333  00001ee4  54000000	nop; delay slot nop
 1334  00001ee8  8fc10000	lw	r1,(r30)
 1335  00001eec  90220000	lbu	r2,(r1)
 1336  00001ef0  2041ffc9	addi	r1,r2,#-55
 1337  00001ef4  afc1fff0	sw	-16(r30),r1
 1338  00001ef8  0800000c	j	L92_LF2
 1339  00001efc  54000000	nop; delay slot nop
 1340  00001f00          	L95_LF2:
 1341  00001f00  200103e8	addi	r1,r0,#1000
 1342  00001f04  afc1fff0	sw	-16(r30),r1
 1343  00001f08          	L96_LF2:
 1344  00001f08          	L94_LF2:
 1345  00001f08          	L92_LF2:
 1346  00001f08  8fc1fff0	lw	r1,-16(r30)
 1347  00001f0c  8fc20008	lw	r2,8(r30)
 1348  00001f10  0022082a	slt	r1,r1,r2
 1349  00001f14  10200040	beqz	r1,L90_LF2
 1350  00001f18  54000000	nop; delay slot nop
 1351  00001f1c  8fc1fff4	lw	r1,-12(r30)
 1352  00001f20  8fc20008	lw	r2,8(r30)
 1353  00001f24  00200035	movi2fp	f0,r1
 1354  00001f28  00400835	movi2fp	f1,r2
 1355  00001f2c  0401000e	mult	f0,f0,f1
 1356  00001f30  00000834	movfp2i	r1,f0
 1357  00001f34  afc1fff4	sw	-12(r30),r1
 1358  00001f38  8fc1fff4	lw	r1,-12(r30)
 1359  00001f3c  8fc2fff0	lw	r2,-16(r30)
 1360  00001f40  00220820	add	r1,r1,r2
 1361  00001f44  afc1fff4	sw	-12(r30),r1
 1362  00001f48  8fc20000	lw	r2,(r30)
 1363  00001f4c  20410001	addi	r1,r2,#1
 1364  00001f50  00011020	add	r2,r0,r1
 1365  00001f54  afc20000	sw	(r30),r2
 1366  00001f58          	L97_LF2:
 1367  00001f58          	L90_LF2:
 1368  00001f58  8fc1fff0	lw	r1,-16(r30)
 1369  00001f5c  8fc20008	lw	r2,8(r30)
 1370  00001f60  0022082a	slt	r1,r1,r2
 1371  00001f64  1420000c	bnez	r1,L98_LF2
 1372  00001f68  54000000	nop; delay slot nop
 1373  00001f6c  0800000c	j	L89_LF2
 1374  00001f70  54000000	nop; delay slot nop
 1375  00001f74          	L98_LF2:
 1376  00001f74  0bfffec8	j	L88_LF2
 1377  00001f78  54000000	nop; delay slot nop
 1378  00001f7c          	L89_LF2:
 1379  00001f7c  8fc10004	lw	r1,4(r30)
 1380  00001f80  64220000	snei	r2,r1,#0
 1381  00001f84  10400010	beqz	r2,L99_LF2
 1382  00001f88  54000000	nop; delay slot nop
 1383  00001f8c  8fc10004	lw	r1,4(r30)
 1384  00001f90  8fc20000	lw	r2,(r30)
 1385  00001f94  ac220000	sw	(r1),r2
 1386  00001f98          	L99_LF2:
 1387  00001f98  8fc1fff4	lw	r1,-12(r30)
 1388  00001f9c  8fc2ffec	lw	r2,-20(r30)
 1389  00001fa0  00200035	movi2fp	f0,r1
 1390  00001fa4  00400835	movi2fp	f1,r2
 1391  00001fa8  0401000e	mult	f0,f0,f1
 1392  00001fac  00000834	movfp2i	r1,f0
 1393  00001fb0  afc1fff4	sw	-12(r30),r1
 1394  00001fb4  8fc1fff4	lw	r1,-12(r30)
 1395  00001fb8  08000004	j	L72_LF2
 1396  00001fbc  54000000	nop; delay slot nop
 1397  00001fc0          	L72_LF2:
 1398  00001fc0  8fa20000	lw	r2,0(r29)
 1399  00001fc4  8fdffff8	lw	r31,-8(r30)
 1400  00001fc8  001ee820	add	r29,r0,r30
 1401  00001fcc  8fdefffc	lw	r30,-4(r30)
 1402  00001fd0  4be00000	jr	r31
 1403  00001fd4  54000000	nop
 1404  00001fd8          	.endproc _dstrtol
 1405  00001fd8          	.align 2
 1406  00001fd8          	.proc _bcopy
 1407  00001fd8          	.global _bcopy
 1408  00001fd8          	_bcopy:
 1409                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1410  00001fd8  afbefffc	sw	-4(r29),r30; push fp
 1411  00001fdc  001df020	add	r30,r0,r29; fp = sp
 1412  00001fe0  afbffff8	sw	-8(r29),r31; push ret addr
 1413  00001fe4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1414  00001fe8  afa20000	sw	0(r29),r2
 1415  00001fec  afa30004	sw	4(r29),r3
 1416  00001ff0  54000000	nop
 1417  00001ff4          	L101_LF2:
 1418  00001ff4  8fc10008	lw	r1,8(r30)
 1419  00001ff8  2022ffff	addi	r2,r1,#-1
 1420  00001ffc  afc20008	sw	8(r30),r2
 1421  00002000  6c210000	sgti	r1,r1,#0
 1422  00002004  1420000c	bnez	r1,L103_LF2
 1423  00002008  54000000	nop; delay slot nop
 1424  0000200c  0800002c	j	L102_LF2
 1425  00002010  54000000	nop; delay slot nop
 1426  00002014          	L103_LF2:
 1427  00002014  8fc10004	lw	r1,4(r30)
 1428  00002018  20220001	addi	r2,r1,#1
 1429  0000201c  afc20004	sw	4(r30),r2
 1430  00002020  8fc20000	lw	r2,(r30)
 1431  00002024  20430001	addi	r3,r2,#1
 1432  00002028  afc30000	sw	(r30),r3
 1433  0000202c  80420000	lb	r2,(r2)
 1434  00002030  a0220000	sb	(r1),r2
 1435  00002034  0bffffbc	j	L101_LF2
 1436  00002038  54000000	nop; delay slot nop
 1437  0000203c          	L102_LF2:
 1438  0000203c          	L100_LF2:
 1439  0000203c  8fa20000	lw	r2,0(r29)
 1440  00002040  8fa30004	lw	r3,4(r29)
 1441  00002044  8fdffff8	lw	r31,-8(r30)
 1442  00002048  001ee820	add	r29,r0,r30
 1443  0000204c  8fdefffc	lw	r30,-4(r30)
 1444  00002050  4be00000	jr	r31
 1445  00002054  54000000	nop
 1446  00002058          	.endproc _bcopy
 1447  00002058          	.align 2
 1448  00002058          	.proc _bzero
 1449  00002058          	.global _bzero
 1450  00002058          	_bzero:
 1451                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1452  00002058  afbefffc	sw	-4(r29),r30; push fp
 1453  0000205c  001df020	add	r30,r0,r29; fp = sp
 1454  00002060  afbffff8	sw	-8(r29),r31; push ret addr
 1455  00002064  2fbd0010	subui	r29,r29,#16; alloc local storage
 1456  00002068  afa20000	sw	0(r29),r2
 1457  0000206c  54000000	nop
 1458  00002070          	L105_LF2:
 1459  00002070  8fc10004	lw	r1,4(r30)
 1460  00002074  2022ffff	addi	r2,r1,#-1
 1461  00002078  afc20004	sw	4(r30),r2
 1462  0000207c  6c210000	sgti	r1,r1,#0
 1463  00002080  1420000c	bnez	r1,L107_LF2
 1464  00002084  54000000	nop; delay slot nop
 1465  00002088  08000020	j	L106_LF2
 1466  0000208c  54000000	nop; delay slot nop
 1467  00002090          	L107_LF2:
 1468  00002090  8fc10000	lw	r1,(r30)
 1469  00002094  20220001	addi	r2,r1,#1
 1470  00002098  afc20000	sw	(r30),r2
 1471  0000209c  20020000	addi	r2,r0,(#0x0)&0xff
 1472  000020a0  a0220000	sb	(r1),r2
 1473  000020a4  0bffffc8	j	L105_LF2
 1474  000020a8  54000000	nop; delay slot nop
 1475  000020ac          	L106_LF2:
 1476  000020ac          	L104_LF2:
 1477  000020ac  8fa20000	lw	r2,0(r29)
 1478  000020b0  8fdffff8	lw	r31,-8(r30)
 1479  000020b4  001ee820	add	r29,r0,r30
 1480  000020b8  8fdefffc	lw	r30,-4(r30)
 1481  000020bc  4be00000	jr	r31
 1482  000020c0  54000000	nop
 1483  000020c4          	.endproc _bzero
 1484  000020c4          	.align 2
 1485  000020c4          	.proc _min
 1486  000020c4          	.global _min
 1487  000020c4          	_min:
 1488                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1489  000020c4  afbefffc	sw	-4(r29),r30; push fp
 1490  000020c8  001df020	add	r30,r0,r29; fp = sp
 1491  000020cc  afbffff8	sw	-8(r29),r31; push ret addr
 1492  000020d0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1493  000020d4  afa20000	sw	0(r29),r2
 1494  000020d8  afa30004	sw	4(r29),r3
 1495  000020dc  8fc10000	lw	r1,(r30)
 1496  000020e0  8fc20004	lw	r2,4(r30)
 1497  000020e4  0022182c	sle	r3,r1,r2
 1498  000020e8  14600008	bnez	r3,L109_LF2
 1499  000020ec  54000000	nop; delay slot nop
 1500  000020f0  8fc10004	lw	r1,4(r30)
 1501  000020f4          	L109_LF2:
 1502  000020f4  08000004	j	L108_LF2
 1503  000020f8  54000000	nop; delay slot nop
 1504  000020fc          	L108_LF2:
 1505  000020fc  8fa20000	lw	r2,0(r29)
 1506  00002100  8fa30004	lw	r3,4(r29)
 1507  00002104  8fdffff8	lw	r31,-8(r30)
 1508  00002108  001ee820	add	r29,r0,r30
 1509  0000210c  8fdefffc	lw	r30,-4(r30)
 1510  00002110  4be00000	jr	r31
 1511  00002114  54000000	nop
 1512  00002118          	.endproc _min
 1513  00002118          	.align 2
 1514  00002118          	.proc _max
 1515  00002118          	.global _max
 1516  00002118          	_max:
 1517                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1518  00002118  afbefffc	sw	-4(r29),r30; push fp
 1519  0000211c  001df020	add	r30,r0,r29; fp = sp
 1520  00002120  afbffff8	sw	-8(r29),r31; push ret addr
 1521  00002124  2fbd0010	subui	r29,r29,#16; alloc local storage
 1522  00002128  afa20000	sw	0(r29),r2
 1523  0000212c  afa30004	sw	4(r29),r3
 1524  00002130  8fc10000	lw	r1,(r30)
 1525  00002134  8fc20004	lw	r2,4(r30)
 1526  00002138  0022182d	sge	r3,r1,r2
 1527  0000213c  14600008	bnez	r3,L111_LF2
 1528  00002140  54000000	nop; delay slot nop
 1529  00002144  8fc10004	lw	r1,4(r30)
 1530  00002148          	L111_LF2:
 1531  00002148  08000004	j	L110_LF2
 1532  0000214c  54000000	nop; delay slot nop
 1533  00002150          	L110_LF2:
 1534  00002150  8fa20000	lw	r2,0(r29)
 1535  00002154  8fa30004	lw	r3,4(r29)
 1536  00002158  8fdffff8	lw	r31,-8(r30)
 1537  0000215c  001ee820	add	r29,r0,r30
 1538  00002160  8fdefffc	lw	r30,-4(r30)
 1539  00002164  4be00000	jr	r31
 1540  00002168  54000000	nop
 1541  0000216c          	.endproc _max
 1542                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1543                      ;;;
 1544                      ;;; Most of the traps are called in files from libtraps.
 1547  0000216c          	.align 2
 1548  0000216c          	.proc _exit
 1549  0000216c          	.global _exit
 1550  0000216c          	_exit:
 1551  0000216c  44000300	trap	#0x300
 1552  00002170  4be00000	jr	r31
 1553  00002174  54000000	nop
 1554  00002178          	.endproc _exit
 1556                      ; for the benefit of gcc.
 1557  00002178          	.proc ___main
 1558  00002178          	.global ___main
 1559  00002178          	___main:
 1560  00002178  4be00000	jr	r31
 1561  0000217c  54000000	nop
 1562  00002180          	.endproc ___main
 1563  00002180          	.text
 1564  00002180          	.global _etext
 1565  00002180          	_etext:
 1566  00002180          	.align 3
 1567  00002180          	.data
 1568  0000307c          	.global _edata
 1569  0000307c          	_edata:
